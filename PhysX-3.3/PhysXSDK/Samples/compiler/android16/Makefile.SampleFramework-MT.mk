# Makefile generated by XPJ for android16
-include Makefile.custom
ProjectName = SampleFramework-MT
SampleFramework-MT_cppfiles   += ./../../SampleFramework/framework/src/nv_dds.cpp
SampleFramework-MT_cppfiles   += ./../../SampleFramework/framework/src/ODBlock.cpp
SampleFramework-MT_cppfiles   += ./../../SampleFramework/framework/src/SampleApplication.cpp
SampleFramework-MT_cppfiles   += ./../../SampleFramework/framework/src/SampleAsset.cpp
SampleFramework-MT_cppfiles   += ./../../SampleFramework/framework/src/SampleAssetManager.cpp
SampleFramework-MT_cppfiles   += ./../../SampleFramework/framework/src/SampleCommandLine.cpp
SampleFramework-MT_cppfiles   += ./../../SampleFramework/framework/src/SampleDirManager.cpp
SampleFramework-MT_cppfiles   += ./../../SampleFramework/framework/src/SampleInputAsset.cpp
SampleFramework-MT_cppfiles   += ./../../SampleFramework/framework/src/SampleLineDebugRender.cpp
SampleFramework-MT_cppfiles   += ./../../SampleFramework/framework/src/SampleMaterialAsset.cpp
SampleFramework-MT_cppfiles   += ./../../SampleFramework/framework/src/SamplePointDebugRender.cpp
SampleFramework-MT_cppfiles   += ./../../SampleFramework/framework/src/SamplePxProfileZone.cpp
SampleFramework-MT_cppfiles   += ./../../SampleFramework/framework/src/SampleTextureAsset.cpp
SampleFramework-MT_cppfiles   += ./../../SampleFramework/framework/src/SampleTree.cpp
SampleFramework-MT_cppfiles   += ./../../SampleFramework/framework/src/SampleTriangleDebugRender.cpp
SampleFramework-MT_cppfiles   += ./../../SampleFramework/framework/src/android/AndroidSampleAssetManager.cpp
SampleFramework-MT_cppfiles   += ./../../../externals/targa/1/targa.cpp
SampleFramework-MT_cfiles   += ./../../../externals/AppGlue/1/AppGlue.c

SampleFramework-MT_cpp_debug_dep    = $(addprefix $(DEPSDIR)/SampleFramework-MT/debug/, $(subst ./, , $(subst ../, , $(patsubst %.cpp, %.cpp.P, $(SampleFramework-MT_cppfiles)))))
SampleFramework-MT_cc_debug_dep    = $(addprefix $(DEPSDIR)/, $(subst ./, , $(subst ../, , $(patsubst %.cc, %.cc.debug.P, $(SampleFramework-MT_ccfiles)))))
SampleFramework-MT_c_debug_dep      = $(addprefix $(DEPSDIR)/SampleFramework-MT/debug/, $(subst ./, , $(subst ../, , $(patsubst %.c, %.c.P, $(SampleFramework-MT_cfiles)))))
SampleFramework-MT_debug_dep      = $(SampleFramework-MT_cpp_debug_dep) $(SampleFramework-MT_cc_debug_dep) $(SampleFramework-MT_c_debug_dep)
-include $(SampleFramework-MT_debug_dep)
SampleFramework-MT_cpp_release_dep    = $(addprefix $(DEPSDIR)/SampleFramework-MT/release/, $(subst ./, , $(subst ../, , $(patsubst %.cpp, %.cpp.P, $(SampleFramework-MT_cppfiles)))))
SampleFramework-MT_cc_release_dep    = $(addprefix $(DEPSDIR)/, $(subst ./, , $(subst ../, , $(patsubst %.cc, %.cc.release.P, $(SampleFramework-MT_ccfiles)))))
SampleFramework-MT_c_release_dep      = $(addprefix $(DEPSDIR)/SampleFramework-MT/release/, $(subst ./, , $(subst ../, , $(patsubst %.c, %.c.P, $(SampleFramework-MT_cfiles)))))
SampleFramework-MT_release_dep      = $(SampleFramework-MT_cpp_release_dep) $(SampleFramework-MT_cc_release_dep) $(SampleFramework-MT_c_release_dep)
-include $(SampleFramework-MT_release_dep)
SampleFramework-MT_cpp_checked_dep    = $(addprefix $(DEPSDIR)/SampleFramework-MT/checked/, $(subst ./, , $(subst ../, , $(patsubst %.cpp, %.cpp.P, $(SampleFramework-MT_cppfiles)))))
SampleFramework-MT_cc_checked_dep    = $(addprefix $(DEPSDIR)/, $(subst ./, , $(subst ../, , $(patsubst %.cc, %.cc.checked.P, $(SampleFramework-MT_ccfiles)))))
SampleFramework-MT_c_checked_dep      = $(addprefix $(DEPSDIR)/SampleFramework-MT/checked/, $(subst ./, , $(subst ../, , $(patsubst %.c, %.c.P, $(SampleFramework-MT_cfiles)))))
SampleFramework-MT_checked_dep      = $(SampleFramework-MT_cpp_checked_dep) $(SampleFramework-MT_cc_checked_dep) $(SampleFramework-MT_c_checked_dep)
-include $(SampleFramework-MT_checked_dep)
SampleFramework-MT_cpp_profile_dep    = $(addprefix $(DEPSDIR)/SampleFramework-MT/profile/, $(subst ./, , $(subst ../, , $(patsubst %.cpp, %.cpp.P, $(SampleFramework-MT_cppfiles)))))
SampleFramework-MT_cc_profile_dep    = $(addprefix $(DEPSDIR)/, $(subst ./, , $(subst ../, , $(patsubst %.cc, %.cc.profile.P, $(SampleFramework-MT_ccfiles)))))
SampleFramework-MT_c_profile_dep      = $(addprefix $(DEPSDIR)/SampleFramework-MT/profile/, $(subst ./, , $(subst ../, , $(patsubst %.c, %.c.P, $(SampleFramework-MT_cfiles)))))
SampleFramework-MT_profile_dep      = $(SampleFramework-MT_cpp_profile_dep) $(SampleFramework-MT_cc_profile_dep) $(SampleFramework-MT_c_profile_dep)
-include $(SampleFramework-MT_profile_dep)
SampleFramework-MT_debug_hpaths    := 
SampleFramework-MT_debug_hpaths    += ./../../SampleFramework/framework/include
SampleFramework-MT_debug_hpaths    += ./../../SampleFramework/renderer/include
SampleFramework-MT_debug_hpaths    += ./../../SampleFramework/platform/include
SampleFramework-MT_debug_hpaths    += ./../../PxToolkit/include
SampleFramework-MT_debug_hpaths    += ./../../../externals/targa/1
SampleFramework-MT_debug_hpaths    += ./../../../externals/OpenAutomate/inc
SampleFramework-MT_debug_hpaths    += ./../../../Include
SampleFramework-MT_debug_hpaths    += ./../../../Include
SampleFramework-MT_debug_hpaths    += ./../../../Source/foundation/include
SampleFramework-MT_debug_hpaths    += ./../../../Include/foundation
SampleFramework-MT_debug_hpaths    += ./../../../Include/physxprofilesdk
SampleFramework-MT_debug_hpaths    += ./../../../Include/physxvisualdebuggersdk
SampleFramework-MT_debug_hpaths    += ./../../../externals/android-ndk-r9d/sources/cxx-stl/gnu-libstdc++/4.8/include
SampleFramework-MT_debug_hpaths    += ./../../../externals/android-ndk-r9d/sources/cxx-stl/gnu-libstdc++/4.8/libs/armeabi-v7a/include
SampleFramework-MT_debug_lpaths    := 
SampleFramework-MT_debug_defines   := $(SampleFramework-MT_custom_defines)
SampleFramework-MT_debug_defines   += PHYSX_PROFILE_SDK
SampleFramework-MT_debug_defines   += ANDROID
SampleFramework-MT_debug_defines   += GLES2
SampleFramework-MT_debug_defines   += __ARM_ARCH_5__
SampleFramework-MT_debug_defines   += __ARM_ARCH_5T__
SampleFramework-MT_debug_defines   += __ARM_ARCH_5E__
SampleFramework-MT_debug_defines   += __ARM_ARCH_5TE__
SampleFramework-MT_debug_defines   += _DEBUG
SampleFramework-MT_debug_defines   += PX_DEBUG
SampleFramework-MT_debug_defines   += PX_CHECKED
SampleFramework-MT_debug_defines   += PX_SUPPORT_VISUAL_DEBUGGER
SampleFramework-MT_debug_defines   += PX_NVTX
SampleFramework-MT_debug_libraries := 
SampleFramework-MT_debug_common_cflags	:= $(SampleFramework-MT_custom_cflags)
SampleFramework-MT_debug_common_cflags    += -MMD
SampleFramework-MT_debug_common_cflags    += $(addprefix -D, $(SampleFramework-MT_debug_defines))
SampleFramework-MT_debug_common_cflags    += $(addprefix -I, $(SampleFramework-MT_debug_hpaths))
SampleFramework-MT_debug_common_cflags  += -Werror
SampleFramework-MT_debug_common_cflags  += -fpic -fno-exceptions
SampleFramework-MT_debug_common_cflags  += -isysroot ../../../externals/android-ndk-r9d/platforms/android-16/arch-arm
SampleFramework-MT_debug_common_cflags  += -march=armv7-a -mfpu=neon -marm -mfloat-abi=softfp -mthumb-interwork
SampleFramework-MT_debug_common_cflags  += -Wall -Wextra -Wpedantic -Wstrict-aliasing=2
SampleFramework-MT_debug_common_cflags  += -Wno-long-long
SampleFramework-MT_debug_common_cflags  += -Wno-unknown-pragmas -Wno-char-subscripts -Wno-sign-compare -Wno-maybe-uninitialized -Wno-format-extra-args -Wno-format-zero-length -Wno-unused-variable -Wno-unused-function -Wno-unused-value -Wno-parentheses
SampleFramework-MT_debug_common_cflags  += -Wno-unused-parameter
SampleFramework-MT_debug_common_cflags  += -Wno-pedantic
SampleFramework-MT_debug_common_cflags  += -g3 -gdwarf-2
SampleFramework-MT_debug_cflags	:= $(SampleFramework-MT_debug_common_cflags)
SampleFramework-MT_debug_cflags  += -std=c99
SampleFramework-MT_debug_cppflags	:= $(SampleFramework-MT_debug_common_cflags)
SampleFramework-MT_debug_cppflags  += -fno-rtti
SampleFramework-MT_debug_lflags    := $(SampleFramework-MT_custom_lflags)
SampleFramework-MT_debug_lflags    += $(addprefix -L, $(SampleFramework-MT_debug_lpaths))
SampleFramework-MT_debug_lflags    += -Wl,--start-group $(addprefix -l, $(SampleFramework-MT_debug_libraries)) -Wl,--end-group
SampleFramework-MT_debug_lflags  += --sysroot=../../../externals/android-ndk-r9d/platforms/android-16/arch-arm
SampleFramework-MT_debug_objsdir  = $(OBJS_DIR)/SampleFramework-MT_debug
SampleFramework-MT_debug_cpp_o    = $(addprefix $(SampleFramework-MT_debug_objsdir)/, $(subst ./, , $(subst ../, , $(patsubst %.cpp, %.cpp.o, $(SampleFramework-MT_cppfiles)))))
SampleFramework-MT_debug_cc_o    = $(addprefix $(SampleFramework-MT_debug_objsdir)/, $(subst ./, , $(subst ../, , $(patsubst %.cc, %.cc.o, $(SampleFramework-MT_ccfiles)))))
SampleFramework-MT_debug_c_o      = $(addprefix $(SampleFramework-MT_debug_objsdir)/, $(subst ./, , $(subst ../, , $(patsubst %.c, %.c.o, $(SampleFramework-MT_cfiles)))))
SampleFramework-MT_debug_obj      = $(SampleFramework-MT_debug_cpp_o) $(SampleFramework-MT_debug_cc_o) $(SampleFramework-MT_debug_c_o)
SampleFramework-MT_debug_bin      := ./../../SampleFramework/framework/lib/android16/libSampleFramework-MTDEBUG.a

clean_SampleFramework-MT_debug: 
	@$(ECHO) clean SampleFramework-MT debug
	@$(RMDIR) $(SampleFramework-MT_debug_objsdir)
	@$(RMDIR) $(SampleFramework-MT_debug_bin)
	@$(RMDIR) $(DEPSDIR)/SampleFramework-MT/debug

build_SampleFramework-MT_debug: postbuild_SampleFramework-MT_debug
postbuild_SampleFramework-MT_debug: mainbuild_SampleFramework-MT_debug
mainbuild_SampleFramework-MT_debug: prebuild_SampleFramework-MT_debug $(SampleFramework-MT_debug_bin)
prebuild_SampleFramework-MT_debug:

$(SampleFramework-MT_debug_bin): $(SampleFramework-MT_debug_obj) 
	mkdir -p `dirname ./../../SampleFramework/framework/lib/android16/libSampleFramework-MTDEBUG.a`
	@$(AR) rcs $(SampleFramework-MT_debug_bin) $(SampleFramework-MT_debug_obj)
	$(ECHO) building $@ complete!

SampleFramework-MT_debug_DEPDIR = $(dir $(@))/$(*F)
$(SampleFramework-MT_debug_cpp_o): $(SampleFramework-MT_debug_objsdir)/%.o:
	$(ECHO) SampleFramework-MT: compiling debug $(filter %$(strip $(subst .cpp.o,.cpp, $(subst $(SampleFramework-MT_debug_objsdir),, $@))), $(SampleFramework-MT_cppfiles))...
	mkdir -p $(dir $(@))
	$(CXX) $(SampleFramework-MT_debug_cppflags) -c $(filter %$(strip $(subst .cpp.o,.cpp, $(subst $(SampleFramework-MT_debug_objsdir),, $@))), $(SampleFramework-MT_cppfiles)) -o $@
	@mkdir -p $(dir $(addprefix $(DEPSDIR)/SampleFramework-MT/debug/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cpp.o,.cpp, $(subst $(SampleFramework-MT_debug_objsdir),, $@))), $(SampleFramework-MT_cppfiles))))))
	cp $(SampleFramework-MT_debug_DEPDIR).d $(addprefix $(DEPSDIR)/SampleFramework-MT/debug/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cpp.o,.cpp, $(subst $(SampleFramework-MT_debug_objsdir),, $@))), $(SampleFramework-MT_cppfiles))))).P; \
	  sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' \
		-e '/^$$/ d' -e 's/$$/ :/' < $(SampleFramework-MT_debug_DEPDIR).d >> $(addprefix $(DEPSDIR)/SampleFramework-MT/debug/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cpp.o,.cpp, $(subst $(SampleFramework-MT_debug_objsdir),, $@))), $(SampleFramework-MT_cppfiles))))).P; \
	  rm -f $(SampleFramework-MT_debug_DEPDIR).d

$(SampleFramework-MT_debug_cc_o): $(SampleFramework-MT_debug_objsdir)/%.o:
	$(ECHO) SampleFramework-MT: compiling debug $(filter %$(strip $(subst .cc.o,.cc, $(subst $(SampleFramework-MT_debug_objsdir),, $@))), $(SampleFramework-MT_ccfiles))...
	mkdir -p $(dir $(@))
	$(CXX) $(SampleFramework-MT_debug_cppflags) -c $(filter %$(strip $(subst .cc.o,.cc, $(subst $(SampleFramework-MT_debug_objsdir),, $@))), $(SampleFramework-MT_ccfiles)) -o $@
	mkdir -p $(dir $(addprefix $(DEPSDIR)/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cc.o,.cc, $(subst $(SampleFramework-MT_debug_objsdir),, $@))), $(SampleFramework-MT_ccfiles))))))
	cp $(SampleFramework-MT_debug_DEPDIR).d $(addprefix $(DEPSDIR)/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cc.o,.cc, $(subst $(SampleFramework-MT_debug_objsdir),, $@))), $(SampleFramework-MT_ccfiles))))).debug.P; \
	  sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' \
		-e '/^$$/ d' -e 's/$$/ :/' < $(SampleFramework-MT_debug_DEPDIR).d >> $(addprefix $(DEPSDIR)/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cc.o,.cc, $(subst $(SampleFramework-MT_debug_objsdir),, $@))), $(SampleFramework-MT_ccfiles))))).debug.P; \
	  rm -f $(SampleFramework-MT_debug_DEPDIR).d

$(SampleFramework-MT_debug_c_o): $(SampleFramework-MT_debug_objsdir)/%.o:
	$(ECHO) SampleFramework-MT: compiling debug $(filter %$(strip $(subst .c.o,.c, $(subst $(SampleFramework-MT_debug_objsdir),, $@))), $(SampleFramework-MT_cfiles))...
	mkdir -p $(dir $(@))
	$(CC) $(SampleFramework-MT_debug_cflags) -c $(filter %$(strip $(subst .c.o,.c, $(subst $(SampleFramework-MT_debug_objsdir),, $@))), $(SampleFramework-MT_cfiles)) -o $@ 
	@mkdir -p $(dir $(addprefix $(DEPSDIR)/SampleFramework-MT/debug/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .c.o,.c, $(subst $(SampleFramework-MT_debug_objsdir),, $@))), $(SampleFramework-MT_cfiles))))))
	cp $(SampleFramework-MT_debug_DEPDIR).d $(addprefix $(DEPSDIR)/SampleFramework-MT/debug/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .c.o,.c, $(subst $(SampleFramework-MT_debug_objsdir),, $@))), $(SampleFramework-MT_cfiles))))).P; \
	  sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' \
		-e '/^$$/ d' -e 's/$$/ :/' < $(SampleFramework-MT_debug_DEPDIR).d >> $(addprefix $(DEPSDIR)/SampleFramework-MT/debug/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .c.o,.c, $(subst $(SampleFramework-MT_debug_objsdir),, $@))), $(SampleFramework-MT_cfiles))))).P; \
	  rm -f $(SampleFramework-MT_debug_DEPDIR).d

SampleFramework-MT_release_hpaths    := 
SampleFramework-MT_release_hpaths    += ./../../SampleFramework/framework/include
SampleFramework-MT_release_hpaths    += ./../../SampleFramework/renderer/include
SampleFramework-MT_release_hpaths    += ./../../SampleFramework/platform/include
SampleFramework-MT_release_hpaths    += ./../../PxToolkit/include
SampleFramework-MT_release_hpaths    += ./../../../externals/targa/1
SampleFramework-MT_release_hpaths    += ./../../../externals/OpenAutomate/inc
SampleFramework-MT_release_hpaths    += ./../../../Include
SampleFramework-MT_release_hpaths    += ./../../../Include
SampleFramework-MT_release_hpaths    += ./../../../Source/foundation/include
SampleFramework-MT_release_hpaths    += ./../../../Include/foundation
SampleFramework-MT_release_hpaths    += ./../../../Include/physxprofilesdk
SampleFramework-MT_release_hpaths    += ./../../../Include/physxvisualdebuggersdk
SampleFramework-MT_release_hpaths    += ./../../../externals/android-ndk-r9d/sources/cxx-stl/gnu-libstdc++/4.8/include
SampleFramework-MT_release_hpaths    += ./../../../externals/android-ndk-r9d/sources/cxx-stl/gnu-libstdc++/4.8/libs/armeabi-v7a/include
SampleFramework-MT_release_lpaths    := 
SampleFramework-MT_release_defines   := $(SampleFramework-MT_custom_defines)
SampleFramework-MT_release_defines   += PHYSX_PROFILE_SDK
SampleFramework-MT_release_defines   += ANDROID
SampleFramework-MT_release_defines   += GLES2
SampleFramework-MT_release_defines   += __ARM_ARCH_5__
SampleFramework-MT_release_defines   += __ARM_ARCH_5T__
SampleFramework-MT_release_defines   += __ARM_ARCH_5E__
SampleFramework-MT_release_defines   += __ARM_ARCH_5TE__
SampleFramework-MT_release_defines   += NDEBUG
SampleFramework-MT_release_libraries := 
SampleFramework-MT_release_common_cflags	:= $(SampleFramework-MT_custom_cflags)
SampleFramework-MT_release_common_cflags    += -MMD
SampleFramework-MT_release_common_cflags    += $(addprefix -D, $(SampleFramework-MT_release_defines))
SampleFramework-MT_release_common_cflags    += $(addprefix -I, $(SampleFramework-MT_release_hpaths))
SampleFramework-MT_release_common_cflags  += -Werror
SampleFramework-MT_release_common_cflags  += -fpic -fno-exceptions
SampleFramework-MT_release_common_cflags  += -isysroot ../../../externals/android-ndk-r9d/platforms/android-16/arch-arm
SampleFramework-MT_release_common_cflags  += -march=armv7-a -mfpu=neon -marm -mfloat-abi=softfp -mthumb-interwork
SampleFramework-MT_release_common_cflags  += -Wall -Wextra -Wpedantic -Wstrict-aliasing=2
SampleFramework-MT_release_common_cflags  += -Wno-long-long
SampleFramework-MT_release_common_cflags  += -Wno-unknown-pragmas -Wno-char-subscripts -Wno-sign-compare -Wno-maybe-uninitialized -Wno-format-extra-args -Wno-format-zero-length -Wno-unused-variable -Wno-unused-function -Wno-unused-value -Wno-parentheses
SampleFramework-MT_release_common_cflags  += -Wno-unused-parameter
SampleFramework-MT_release_common_cflags  += -Wno-pedantic
SampleFramework-MT_release_common_cflags  += -O3 -fno-strict-aliasing
SampleFramework-MT_release_common_cflags  += -ffunction-sections -funwind-tables -fstack-protector
SampleFramework-MT_release_common_cflags  += -fomit-frame-pointer -funswitch-loops -finline-limit=300
SampleFramework-MT_release_cflags	:= $(SampleFramework-MT_release_common_cflags)
SampleFramework-MT_release_cflags  += -std=c99
SampleFramework-MT_release_cppflags	:= $(SampleFramework-MT_release_common_cflags)
SampleFramework-MT_release_cppflags  += -fno-rtti
SampleFramework-MT_release_lflags    := $(SampleFramework-MT_custom_lflags)
SampleFramework-MT_release_lflags    += $(addprefix -L, $(SampleFramework-MT_release_lpaths))
SampleFramework-MT_release_lflags    += -Wl,--start-group $(addprefix -l, $(SampleFramework-MT_release_libraries)) -Wl,--end-group
SampleFramework-MT_release_lflags  += --sysroot=../../../externals/android-ndk-r9d/platforms/android-16/arch-arm
SampleFramework-MT_release_objsdir  = $(OBJS_DIR)/SampleFramework-MT_release
SampleFramework-MT_release_cpp_o    = $(addprefix $(SampleFramework-MT_release_objsdir)/, $(subst ./, , $(subst ../, , $(patsubst %.cpp, %.cpp.o, $(SampleFramework-MT_cppfiles)))))
SampleFramework-MT_release_cc_o    = $(addprefix $(SampleFramework-MT_release_objsdir)/, $(subst ./, , $(subst ../, , $(patsubst %.cc, %.cc.o, $(SampleFramework-MT_ccfiles)))))
SampleFramework-MT_release_c_o      = $(addprefix $(SampleFramework-MT_release_objsdir)/, $(subst ./, , $(subst ../, , $(patsubst %.c, %.c.o, $(SampleFramework-MT_cfiles)))))
SampleFramework-MT_release_obj      = $(SampleFramework-MT_release_cpp_o) $(SampleFramework-MT_release_cc_o) $(SampleFramework-MT_release_c_o)
SampleFramework-MT_release_bin      := ./../../SampleFramework/framework/lib/android16/libSampleFramework-MT.a

clean_SampleFramework-MT_release: 
	@$(ECHO) clean SampleFramework-MT release
	@$(RMDIR) $(SampleFramework-MT_release_objsdir)
	@$(RMDIR) $(SampleFramework-MT_release_bin)
	@$(RMDIR) $(DEPSDIR)/SampleFramework-MT/release

build_SampleFramework-MT_release: postbuild_SampleFramework-MT_release
postbuild_SampleFramework-MT_release: mainbuild_SampleFramework-MT_release
mainbuild_SampleFramework-MT_release: prebuild_SampleFramework-MT_release $(SampleFramework-MT_release_bin)
prebuild_SampleFramework-MT_release:

$(SampleFramework-MT_release_bin): $(SampleFramework-MT_release_obj) 
	mkdir -p `dirname ./../../SampleFramework/framework/lib/android16/libSampleFramework-MT.a`
	@$(AR) rcs $(SampleFramework-MT_release_bin) $(SampleFramework-MT_release_obj)
	$(ECHO) building $@ complete!

SampleFramework-MT_release_DEPDIR = $(dir $(@))/$(*F)
$(SampleFramework-MT_release_cpp_o): $(SampleFramework-MT_release_objsdir)/%.o:
	$(ECHO) SampleFramework-MT: compiling release $(filter %$(strip $(subst .cpp.o,.cpp, $(subst $(SampleFramework-MT_release_objsdir),, $@))), $(SampleFramework-MT_cppfiles))...
	mkdir -p $(dir $(@))
	$(CXX) $(SampleFramework-MT_release_cppflags) -c $(filter %$(strip $(subst .cpp.o,.cpp, $(subst $(SampleFramework-MT_release_objsdir),, $@))), $(SampleFramework-MT_cppfiles)) -o $@
	@mkdir -p $(dir $(addprefix $(DEPSDIR)/SampleFramework-MT/release/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cpp.o,.cpp, $(subst $(SampleFramework-MT_release_objsdir),, $@))), $(SampleFramework-MT_cppfiles))))))
	cp $(SampleFramework-MT_release_DEPDIR).d $(addprefix $(DEPSDIR)/SampleFramework-MT/release/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cpp.o,.cpp, $(subst $(SampleFramework-MT_release_objsdir),, $@))), $(SampleFramework-MT_cppfiles))))).P; \
	  sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' \
		-e '/^$$/ d' -e 's/$$/ :/' < $(SampleFramework-MT_release_DEPDIR).d >> $(addprefix $(DEPSDIR)/SampleFramework-MT/release/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cpp.o,.cpp, $(subst $(SampleFramework-MT_release_objsdir),, $@))), $(SampleFramework-MT_cppfiles))))).P; \
	  rm -f $(SampleFramework-MT_release_DEPDIR).d

$(SampleFramework-MT_release_cc_o): $(SampleFramework-MT_release_objsdir)/%.o:
	$(ECHO) SampleFramework-MT: compiling release $(filter %$(strip $(subst .cc.o,.cc, $(subst $(SampleFramework-MT_release_objsdir),, $@))), $(SampleFramework-MT_ccfiles))...
	mkdir -p $(dir $(@))
	$(CXX) $(SampleFramework-MT_release_cppflags) -c $(filter %$(strip $(subst .cc.o,.cc, $(subst $(SampleFramework-MT_release_objsdir),, $@))), $(SampleFramework-MT_ccfiles)) -o $@
	mkdir -p $(dir $(addprefix $(DEPSDIR)/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cc.o,.cc, $(subst $(SampleFramework-MT_release_objsdir),, $@))), $(SampleFramework-MT_ccfiles))))))
	cp $(SampleFramework-MT_release_DEPDIR).d $(addprefix $(DEPSDIR)/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cc.o,.cc, $(subst $(SampleFramework-MT_release_objsdir),, $@))), $(SampleFramework-MT_ccfiles))))).release.P; \
	  sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' \
		-e '/^$$/ d' -e 's/$$/ :/' < $(SampleFramework-MT_release_DEPDIR).d >> $(addprefix $(DEPSDIR)/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cc.o,.cc, $(subst $(SampleFramework-MT_release_objsdir),, $@))), $(SampleFramework-MT_ccfiles))))).release.P; \
	  rm -f $(SampleFramework-MT_release_DEPDIR).d

$(SampleFramework-MT_release_c_o): $(SampleFramework-MT_release_objsdir)/%.o:
	$(ECHO) SampleFramework-MT: compiling release $(filter %$(strip $(subst .c.o,.c, $(subst $(SampleFramework-MT_release_objsdir),, $@))), $(SampleFramework-MT_cfiles))...
	mkdir -p $(dir $(@))
	$(CC) $(SampleFramework-MT_release_cflags) -c $(filter %$(strip $(subst .c.o,.c, $(subst $(SampleFramework-MT_release_objsdir),, $@))), $(SampleFramework-MT_cfiles)) -o $@ 
	@mkdir -p $(dir $(addprefix $(DEPSDIR)/SampleFramework-MT/release/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .c.o,.c, $(subst $(SampleFramework-MT_release_objsdir),, $@))), $(SampleFramework-MT_cfiles))))))
	cp $(SampleFramework-MT_release_DEPDIR).d $(addprefix $(DEPSDIR)/SampleFramework-MT/release/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .c.o,.c, $(subst $(SampleFramework-MT_release_objsdir),, $@))), $(SampleFramework-MT_cfiles))))).P; \
	  sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' \
		-e '/^$$/ d' -e 's/$$/ :/' < $(SampleFramework-MT_release_DEPDIR).d >> $(addprefix $(DEPSDIR)/SampleFramework-MT/release/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .c.o,.c, $(subst $(SampleFramework-MT_release_objsdir),, $@))), $(SampleFramework-MT_cfiles))))).P; \
	  rm -f $(SampleFramework-MT_release_DEPDIR).d

SampleFramework-MT_checked_hpaths    := 
SampleFramework-MT_checked_hpaths    += ./../../SampleFramework/framework/include
SampleFramework-MT_checked_hpaths    += ./../../SampleFramework/renderer/include
SampleFramework-MT_checked_hpaths    += ./../../SampleFramework/platform/include
SampleFramework-MT_checked_hpaths    += ./../../PxToolkit/include
SampleFramework-MT_checked_hpaths    += ./../../../externals/targa/1
SampleFramework-MT_checked_hpaths    += ./../../../externals/OpenAutomate/inc
SampleFramework-MT_checked_hpaths    += ./../../../Include
SampleFramework-MT_checked_hpaths    += ./../../../Include
SampleFramework-MT_checked_hpaths    += ./../../../Source/foundation/include
SampleFramework-MT_checked_hpaths    += ./../../../Include/foundation
SampleFramework-MT_checked_hpaths    += ./../../../Include/physxprofilesdk
SampleFramework-MT_checked_hpaths    += ./../../../Include/physxvisualdebuggersdk
SampleFramework-MT_checked_hpaths    += ./../../../externals/android-ndk-r9d/sources/cxx-stl/gnu-libstdc++/4.8/include
SampleFramework-MT_checked_hpaths    += ./../../../externals/android-ndk-r9d/sources/cxx-stl/gnu-libstdc++/4.8/libs/armeabi-v7a/include
SampleFramework-MT_checked_lpaths    := 
SampleFramework-MT_checked_defines   := $(SampleFramework-MT_custom_defines)
SampleFramework-MT_checked_defines   += PHYSX_PROFILE_SDK
SampleFramework-MT_checked_defines   += ANDROID
SampleFramework-MT_checked_defines   += GLES2
SampleFramework-MT_checked_defines   += __ARM_ARCH_5__
SampleFramework-MT_checked_defines   += __ARM_ARCH_5T__
SampleFramework-MT_checked_defines   += __ARM_ARCH_5E__
SampleFramework-MT_checked_defines   += __ARM_ARCH_5TE__
SampleFramework-MT_checked_defines   += NDEBUG
SampleFramework-MT_checked_defines   += PX_CHECKED
SampleFramework-MT_checked_defines   += PX_SUPPORT_VISUAL_DEBUGGER
SampleFramework-MT_checked_defines   += PX_NVTX
SampleFramework-MT_checked_libraries := 
SampleFramework-MT_checked_common_cflags	:= $(SampleFramework-MT_custom_cflags)
SampleFramework-MT_checked_common_cflags    += -MMD
SampleFramework-MT_checked_common_cflags    += $(addprefix -D, $(SampleFramework-MT_checked_defines))
SampleFramework-MT_checked_common_cflags    += $(addprefix -I, $(SampleFramework-MT_checked_hpaths))
SampleFramework-MT_checked_common_cflags  += -Werror
SampleFramework-MT_checked_common_cflags  += -fpic -fno-exceptions
SampleFramework-MT_checked_common_cflags  += -isysroot ../../../externals/android-ndk-r9d/platforms/android-16/arch-arm
SampleFramework-MT_checked_common_cflags  += -march=armv7-a -mfpu=neon -marm -mfloat-abi=softfp -mthumb-interwork
SampleFramework-MT_checked_common_cflags  += -Wall -Wextra -Wpedantic -Wstrict-aliasing=2
SampleFramework-MT_checked_common_cflags  += -Wno-long-long
SampleFramework-MT_checked_common_cflags  += -Wno-unknown-pragmas -Wno-char-subscripts -Wno-sign-compare -Wno-maybe-uninitialized -Wno-format-extra-args -Wno-format-zero-length -Wno-unused-variable -Wno-unused-function -Wno-unused-value -Wno-parentheses
SampleFramework-MT_checked_common_cflags  += -Wno-unused-parameter
SampleFramework-MT_checked_common_cflags  += -Wno-pedantic
SampleFramework-MT_checked_common_cflags  += -g3 -gdwarf-2 -O3 -fno-strict-aliasing
SampleFramework-MT_checked_common_cflags  += -ffunction-sections -funwind-tables -fstack-protector
SampleFramework-MT_checked_common_cflags  += -fomit-frame-pointer -funswitch-loops -finline-limit=300
SampleFramework-MT_checked_cflags	:= $(SampleFramework-MT_checked_common_cflags)
SampleFramework-MT_checked_cflags  += -std=c99
SampleFramework-MT_checked_cppflags	:= $(SampleFramework-MT_checked_common_cflags)
SampleFramework-MT_checked_cppflags  += -fno-rtti
SampleFramework-MT_checked_lflags    := $(SampleFramework-MT_custom_lflags)
SampleFramework-MT_checked_lflags    += $(addprefix -L, $(SampleFramework-MT_checked_lpaths))
SampleFramework-MT_checked_lflags    += -Wl,--start-group $(addprefix -l, $(SampleFramework-MT_checked_libraries)) -Wl,--end-group
SampleFramework-MT_checked_lflags  += --sysroot=../../../externals/android-ndk-r9d/platforms/android-16/arch-arm
SampleFramework-MT_checked_objsdir  = $(OBJS_DIR)/SampleFramework-MT_checked
SampleFramework-MT_checked_cpp_o    = $(addprefix $(SampleFramework-MT_checked_objsdir)/, $(subst ./, , $(subst ../, , $(patsubst %.cpp, %.cpp.o, $(SampleFramework-MT_cppfiles)))))
SampleFramework-MT_checked_cc_o    = $(addprefix $(SampleFramework-MT_checked_objsdir)/, $(subst ./, , $(subst ../, , $(patsubst %.cc, %.cc.o, $(SampleFramework-MT_ccfiles)))))
SampleFramework-MT_checked_c_o      = $(addprefix $(SampleFramework-MT_checked_objsdir)/, $(subst ./, , $(subst ../, , $(patsubst %.c, %.c.o, $(SampleFramework-MT_cfiles)))))
SampleFramework-MT_checked_obj      = $(SampleFramework-MT_checked_cpp_o) $(SampleFramework-MT_checked_cc_o) $(SampleFramework-MT_checked_c_o)
SampleFramework-MT_checked_bin      := ./../../SampleFramework/framework/lib/android16/libSampleFramework-MTCHECKED.a

clean_SampleFramework-MT_checked: 
	@$(ECHO) clean SampleFramework-MT checked
	@$(RMDIR) $(SampleFramework-MT_checked_objsdir)
	@$(RMDIR) $(SampleFramework-MT_checked_bin)
	@$(RMDIR) $(DEPSDIR)/SampleFramework-MT/checked

build_SampleFramework-MT_checked: postbuild_SampleFramework-MT_checked
postbuild_SampleFramework-MT_checked: mainbuild_SampleFramework-MT_checked
mainbuild_SampleFramework-MT_checked: prebuild_SampleFramework-MT_checked $(SampleFramework-MT_checked_bin)
prebuild_SampleFramework-MT_checked:

$(SampleFramework-MT_checked_bin): $(SampleFramework-MT_checked_obj) 
	mkdir -p `dirname ./../../SampleFramework/framework/lib/android16/libSampleFramework-MTCHECKED.a`
	@$(AR) rcs $(SampleFramework-MT_checked_bin) $(SampleFramework-MT_checked_obj)
	$(ECHO) building $@ complete!

SampleFramework-MT_checked_DEPDIR = $(dir $(@))/$(*F)
$(SampleFramework-MT_checked_cpp_o): $(SampleFramework-MT_checked_objsdir)/%.o:
	$(ECHO) SampleFramework-MT: compiling checked $(filter %$(strip $(subst .cpp.o,.cpp, $(subst $(SampleFramework-MT_checked_objsdir),, $@))), $(SampleFramework-MT_cppfiles))...
	mkdir -p $(dir $(@))
	$(CXX) $(SampleFramework-MT_checked_cppflags) -c $(filter %$(strip $(subst .cpp.o,.cpp, $(subst $(SampleFramework-MT_checked_objsdir),, $@))), $(SampleFramework-MT_cppfiles)) -o $@
	@mkdir -p $(dir $(addprefix $(DEPSDIR)/SampleFramework-MT/checked/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cpp.o,.cpp, $(subst $(SampleFramework-MT_checked_objsdir),, $@))), $(SampleFramework-MT_cppfiles))))))
	cp $(SampleFramework-MT_checked_DEPDIR).d $(addprefix $(DEPSDIR)/SampleFramework-MT/checked/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cpp.o,.cpp, $(subst $(SampleFramework-MT_checked_objsdir),, $@))), $(SampleFramework-MT_cppfiles))))).P; \
	  sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' \
		-e '/^$$/ d' -e 's/$$/ :/' < $(SampleFramework-MT_checked_DEPDIR).d >> $(addprefix $(DEPSDIR)/SampleFramework-MT/checked/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cpp.o,.cpp, $(subst $(SampleFramework-MT_checked_objsdir),, $@))), $(SampleFramework-MT_cppfiles))))).P; \
	  rm -f $(SampleFramework-MT_checked_DEPDIR).d

$(SampleFramework-MT_checked_cc_o): $(SampleFramework-MT_checked_objsdir)/%.o:
	$(ECHO) SampleFramework-MT: compiling checked $(filter %$(strip $(subst .cc.o,.cc, $(subst $(SampleFramework-MT_checked_objsdir),, $@))), $(SampleFramework-MT_ccfiles))...
	mkdir -p $(dir $(@))
	$(CXX) $(SampleFramework-MT_checked_cppflags) -c $(filter %$(strip $(subst .cc.o,.cc, $(subst $(SampleFramework-MT_checked_objsdir),, $@))), $(SampleFramework-MT_ccfiles)) -o $@
	mkdir -p $(dir $(addprefix $(DEPSDIR)/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cc.o,.cc, $(subst $(SampleFramework-MT_checked_objsdir),, $@))), $(SampleFramework-MT_ccfiles))))))
	cp $(SampleFramework-MT_checked_DEPDIR).d $(addprefix $(DEPSDIR)/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cc.o,.cc, $(subst $(SampleFramework-MT_checked_objsdir),, $@))), $(SampleFramework-MT_ccfiles))))).checked.P; \
	  sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' \
		-e '/^$$/ d' -e 's/$$/ :/' < $(SampleFramework-MT_checked_DEPDIR).d >> $(addprefix $(DEPSDIR)/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cc.o,.cc, $(subst $(SampleFramework-MT_checked_objsdir),, $@))), $(SampleFramework-MT_ccfiles))))).checked.P; \
	  rm -f $(SampleFramework-MT_checked_DEPDIR).d

$(SampleFramework-MT_checked_c_o): $(SampleFramework-MT_checked_objsdir)/%.o:
	$(ECHO) SampleFramework-MT: compiling checked $(filter %$(strip $(subst .c.o,.c, $(subst $(SampleFramework-MT_checked_objsdir),, $@))), $(SampleFramework-MT_cfiles))...
	mkdir -p $(dir $(@))
	$(CC) $(SampleFramework-MT_checked_cflags) -c $(filter %$(strip $(subst .c.o,.c, $(subst $(SampleFramework-MT_checked_objsdir),, $@))), $(SampleFramework-MT_cfiles)) -o $@ 
	@mkdir -p $(dir $(addprefix $(DEPSDIR)/SampleFramework-MT/checked/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .c.o,.c, $(subst $(SampleFramework-MT_checked_objsdir),, $@))), $(SampleFramework-MT_cfiles))))))
	cp $(SampleFramework-MT_checked_DEPDIR).d $(addprefix $(DEPSDIR)/SampleFramework-MT/checked/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .c.o,.c, $(subst $(SampleFramework-MT_checked_objsdir),, $@))), $(SampleFramework-MT_cfiles))))).P; \
	  sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' \
		-e '/^$$/ d' -e 's/$$/ :/' < $(SampleFramework-MT_checked_DEPDIR).d >> $(addprefix $(DEPSDIR)/SampleFramework-MT/checked/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .c.o,.c, $(subst $(SampleFramework-MT_checked_objsdir),, $@))), $(SampleFramework-MT_cfiles))))).P; \
	  rm -f $(SampleFramework-MT_checked_DEPDIR).d

SampleFramework-MT_profile_hpaths    := 
SampleFramework-MT_profile_hpaths    += ./../../SampleFramework/framework/include
SampleFramework-MT_profile_hpaths    += ./../../SampleFramework/renderer/include
SampleFramework-MT_profile_hpaths    += ./../../SampleFramework/platform/include
SampleFramework-MT_profile_hpaths    += ./../../PxToolkit/include
SampleFramework-MT_profile_hpaths    += ./../../../externals/targa/1
SampleFramework-MT_profile_hpaths    += ./../../../externals/OpenAutomate/inc
SampleFramework-MT_profile_hpaths    += ./../../../Include
SampleFramework-MT_profile_hpaths    += ./../../../Include
SampleFramework-MT_profile_hpaths    += ./../../../Source/foundation/include
SampleFramework-MT_profile_hpaths    += ./../../../Include/foundation
SampleFramework-MT_profile_hpaths    += ./../../../Include/physxprofilesdk
SampleFramework-MT_profile_hpaths    += ./../../../Include/physxvisualdebuggersdk
SampleFramework-MT_profile_hpaths    += ./../../../externals/android-ndk-r9d/sources/cxx-stl/gnu-libstdc++/4.8/include
SampleFramework-MT_profile_hpaths    += ./../../../externals/android-ndk-r9d/sources/cxx-stl/gnu-libstdc++/4.8/libs/armeabi-v7a/include
SampleFramework-MT_profile_lpaths    := 
SampleFramework-MT_profile_defines   := $(SampleFramework-MT_custom_defines)
SampleFramework-MT_profile_defines   += PHYSX_PROFILE_SDK
SampleFramework-MT_profile_defines   += ANDROID
SampleFramework-MT_profile_defines   += GLES2
SampleFramework-MT_profile_defines   += __ARM_ARCH_5__
SampleFramework-MT_profile_defines   += __ARM_ARCH_5T__
SampleFramework-MT_profile_defines   += __ARM_ARCH_5E__
SampleFramework-MT_profile_defines   += __ARM_ARCH_5TE__
SampleFramework-MT_profile_defines   += NDEBUG
SampleFramework-MT_profile_defines   += PX_PROFILE
SampleFramework-MT_profile_defines   += PX_SUPPORT_VISUAL_DEBUGGER
SampleFramework-MT_profile_defines   += PX_NVTX
SampleFramework-MT_profile_libraries := 
SampleFramework-MT_profile_common_cflags	:= $(SampleFramework-MT_custom_cflags)
SampleFramework-MT_profile_common_cflags    += -MMD
SampleFramework-MT_profile_common_cflags    += $(addprefix -D, $(SampleFramework-MT_profile_defines))
SampleFramework-MT_profile_common_cflags    += $(addprefix -I, $(SampleFramework-MT_profile_hpaths))
SampleFramework-MT_profile_common_cflags  += -Werror
SampleFramework-MT_profile_common_cflags  += -fpic -fno-exceptions
SampleFramework-MT_profile_common_cflags  += -isysroot ../../../externals/android-ndk-r9d/platforms/android-16/arch-arm
SampleFramework-MT_profile_common_cflags  += -march=armv7-a -mfpu=neon -marm -mfloat-abi=softfp -mthumb-interwork
SampleFramework-MT_profile_common_cflags  += -Wall -Wextra -Wpedantic -Wstrict-aliasing=2
SampleFramework-MT_profile_common_cflags  += -Wno-long-long
SampleFramework-MT_profile_common_cflags  += -Wno-unknown-pragmas -Wno-char-subscripts -Wno-sign-compare -Wno-maybe-uninitialized -Wno-format-extra-args -Wno-format-zero-length -Wno-unused-variable -Wno-unused-function -Wno-unused-value -Wno-parentheses
SampleFramework-MT_profile_common_cflags  += -Wno-unused-parameter
SampleFramework-MT_profile_common_cflags  += -Wno-pedantic
SampleFramework-MT_profile_common_cflags  += -O3 -fno-strict-aliasing
SampleFramework-MT_profile_common_cflags  += -ffunction-sections -funwind-tables -fstack-protector
SampleFramework-MT_profile_common_cflags  += -fno-omit-frame-pointer -funswitch-loops -finline-limit=300
SampleFramework-MT_profile_cflags	:= $(SampleFramework-MT_profile_common_cflags)
SampleFramework-MT_profile_cflags  += -std=c99
SampleFramework-MT_profile_cppflags	:= $(SampleFramework-MT_profile_common_cflags)
SampleFramework-MT_profile_cppflags  += -fno-rtti
SampleFramework-MT_profile_lflags    := $(SampleFramework-MT_custom_lflags)
SampleFramework-MT_profile_lflags    += $(addprefix -L, $(SampleFramework-MT_profile_lpaths))
SampleFramework-MT_profile_lflags    += -Wl,--start-group $(addprefix -l, $(SampleFramework-MT_profile_libraries)) -Wl,--end-group
SampleFramework-MT_profile_lflags  += --sysroot=../../../externals/android-ndk-r9d/platforms/android-16/arch-arm
SampleFramework-MT_profile_objsdir  = $(OBJS_DIR)/SampleFramework-MT_profile
SampleFramework-MT_profile_cpp_o    = $(addprefix $(SampleFramework-MT_profile_objsdir)/, $(subst ./, , $(subst ../, , $(patsubst %.cpp, %.cpp.o, $(SampleFramework-MT_cppfiles)))))
SampleFramework-MT_profile_cc_o    = $(addprefix $(SampleFramework-MT_profile_objsdir)/, $(subst ./, , $(subst ../, , $(patsubst %.cc, %.cc.o, $(SampleFramework-MT_ccfiles)))))
SampleFramework-MT_profile_c_o      = $(addprefix $(SampleFramework-MT_profile_objsdir)/, $(subst ./, , $(subst ../, , $(patsubst %.c, %.c.o, $(SampleFramework-MT_cfiles)))))
SampleFramework-MT_profile_obj      = $(SampleFramework-MT_profile_cpp_o) $(SampleFramework-MT_profile_cc_o) $(SampleFramework-MT_profile_c_o)
SampleFramework-MT_profile_bin      := ./../../SampleFramework/framework/lib/android16/libSampleFramework-MTPROFILE.a

clean_SampleFramework-MT_profile: 
	@$(ECHO) clean SampleFramework-MT profile
	@$(RMDIR) $(SampleFramework-MT_profile_objsdir)
	@$(RMDIR) $(SampleFramework-MT_profile_bin)
	@$(RMDIR) $(DEPSDIR)/SampleFramework-MT/profile

build_SampleFramework-MT_profile: postbuild_SampleFramework-MT_profile
postbuild_SampleFramework-MT_profile: mainbuild_SampleFramework-MT_profile
mainbuild_SampleFramework-MT_profile: prebuild_SampleFramework-MT_profile $(SampleFramework-MT_profile_bin)
prebuild_SampleFramework-MT_profile:

$(SampleFramework-MT_profile_bin): $(SampleFramework-MT_profile_obj) 
	mkdir -p `dirname ./../../SampleFramework/framework/lib/android16/libSampleFramework-MTPROFILE.a`
	@$(AR) rcs $(SampleFramework-MT_profile_bin) $(SampleFramework-MT_profile_obj)
	$(ECHO) building $@ complete!

SampleFramework-MT_profile_DEPDIR = $(dir $(@))/$(*F)
$(SampleFramework-MT_profile_cpp_o): $(SampleFramework-MT_profile_objsdir)/%.o:
	$(ECHO) SampleFramework-MT: compiling profile $(filter %$(strip $(subst .cpp.o,.cpp, $(subst $(SampleFramework-MT_profile_objsdir),, $@))), $(SampleFramework-MT_cppfiles))...
	mkdir -p $(dir $(@))
	$(CXX) $(SampleFramework-MT_profile_cppflags) -c $(filter %$(strip $(subst .cpp.o,.cpp, $(subst $(SampleFramework-MT_profile_objsdir),, $@))), $(SampleFramework-MT_cppfiles)) -o $@
	@mkdir -p $(dir $(addprefix $(DEPSDIR)/SampleFramework-MT/profile/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cpp.o,.cpp, $(subst $(SampleFramework-MT_profile_objsdir),, $@))), $(SampleFramework-MT_cppfiles))))))
	cp $(SampleFramework-MT_profile_DEPDIR).d $(addprefix $(DEPSDIR)/SampleFramework-MT/profile/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cpp.o,.cpp, $(subst $(SampleFramework-MT_profile_objsdir),, $@))), $(SampleFramework-MT_cppfiles))))).P; \
	  sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' \
		-e '/^$$/ d' -e 's/$$/ :/' < $(SampleFramework-MT_profile_DEPDIR).d >> $(addprefix $(DEPSDIR)/SampleFramework-MT/profile/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cpp.o,.cpp, $(subst $(SampleFramework-MT_profile_objsdir),, $@))), $(SampleFramework-MT_cppfiles))))).P; \
	  rm -f $(SampleFramework-MT_profile_DEPDIR).d

$(SampleFramework-MT_profile_cc_o): $(SampleFramework-MT_profile_objsdir)/%.o:
	$(ECHO) SampleFramework-MT: compiling profile $(filter %$(strip $(subst .cc.o,.cc, $(subst $(SampleFramework-MT_profile_objsdir),, $@))), $(SampleFramework-MT_ccfiles))...
	mkdir -p $(dir $(@))
	$(CXX) $(SampleFramework-MT_profile_cppflags) -c $(filter %$(strip $(subst .cc.o,.cc, $(subst $(SampleFramework-MT_profile_objsdir),, $@))), $(SampleFramework-MT_ccfiles)) -o $@
	mkdir -p $(dir $(addprefix $(DEPSDIR)/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cc.o,.cc, $(subst $(SampleFramework-MT_profile_objsdir),, $@))), $(SampleFramework-MT_ccfiles))))))
	cp $(SampleFramework-MT_profile_DEPDIR).d $(addprefix $(DEPSDIR)/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cc.o,.cc, $(subst $(SampleFramework-MT_profile_objsdir),, $@))), $(SampleFramework-MT_ccfiles))))).profile.P; \
	  sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' \
		-e '/^$$/ d' -e 's/$$/ :/' < $(SampleFramework-MT_profile_DEPDIR).d >> $(addprefix $(DEPSDIR)/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cc.o,.cc, $(subst $(SampleFramework-MT_profile_objsdir),, $@))), $(SampleFramework-MT_ccfiles))))).profile.P; \
	  rm -f $(SampleFramework-MT_profile_DEPDIR).d

$(SampleFramework-MT_profile_c_o): $(SampleFramework-MT_profile_objsdir)/%.o:
	$(ECHO) SampleFramework-MT: compiling profile $(filter %$(strip $(subst .c.o,.c, $(subst $(SampleFramework-MT_profile_objsdir),, $@))), $(SampleFramework-MT_cfiles))...
	mkdir -p $(dir $(@))
	$(CC) $(SampleFramework-MT_profile_cflags) -c $(filter %$(strip $(subst .c.o,.c, $(subst $(SampleFramework-MT_profile_objsdir),, $@))), $(SampleFramework-MT_cfiles)) -o $@ 
	@mkdir -p $(dir $(addprefix $(DEPSDIR)/SampleFramework-MT/profile/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .c.o,.c, $(subst $(SampleFramework-MT_profile_objsdir),, $@))), $(SampleFramework-MT_cfiles))))))
	cp $(SampleFramework-MT_profile_DEPDIR).d $(addprefix $(DEPSDIR)/SampleFramework-MT/profile/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .c.o,.c, $(subst $(SampleFramework-MT_profile_objsdir),, $@))), $(SampleFramework-MT_cfiles))))).P; \
	  sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' \
		-e '/^$$/ d' -e 's/$$/ :/' < $(SampleFramework-MT_profile_DEPDIR).d >> $(addprefix $(DEPSDIR)/SampleFramework-MT/profile/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .c.o,.c, $(subst $(SampleFramework-MT_profile_objsdir),, $@))), $(SampleFramework-MT_cfiles))))).P; \
	  rm -f $(SampleFramework-MT_profile_DEPDIR).d

clean_SampleFramework-MT:  clean_SampleFramework-MT_debug clean_SampleFramework-MT_release clean_SampleFramework-MT_checked clean_SampleFramework-MT_profile
	rm -rf $(DEPSDIR)

export VERBOSE
ifndef VERBOSE
.SILENT:
endif
