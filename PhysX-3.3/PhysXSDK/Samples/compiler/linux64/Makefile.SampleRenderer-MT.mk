# Makefile generated by XPJ for linux64
-include Makefile.custom
ProjectName = SampleRenderer-MT
SampleRenderer-MT_cppfiles   += ./../../SampleFramework/renderer/src/Renderer.cpp
SampleRenderer-MT_cppfiles   += ./../../SampleFramework/renderer/src/RendererBoxShape.cpp
SampleRenderer-MT_cppfiles   += ./../../SampleFramework/renderer/src/RendererCapsuleShape.cpp
SampleRenderer-MT_cppfiles   += ./../../SampleFramework/renderer/src/RendererClothShape.cpp
SampleRenderer-MT_cppfiles   += ./../../SampleFramework/renderer/src/RendererColor.cpp
SampleRenderer-MT_cppfiles   += ./../../SampleFramework/renderer/src/RendererDesc.cpp
SampleRenderer-MT_cppfiles   += ./../../SampleFramework/renderer/src/RendererDirectionalLight.cpp
SampleRenderer-MT_cppfiles   += ./../../SampleFramework/renderer/src/RendererDirectionalLightDesc.cpp
SampleRenderer-MT_cppfiles   += ./../../SampleFramework/renderer/src/RendererGridShape.cpp
SampleRenderer-MT_cppfiles   += ./../../SampleFramework/renderer/src/RendererIndexBuffer.cpp
SampleRenderer-MT_cppfiles   += ./../../SampleFramework/renderer/src/RendererIndexBufferDesc.cpp
SampleRenderer-MT_cppfiles   += ./../../SampleFramework/renderer/src/RendererInstanceBuffer.cpp
SampleRenderer-MT_cppfiles   += ./../../SampleFramework/renderer/src/RendererInstanceBufferDesc.cpp
SampleRenderer-MT_cppfiles   += ./../../SampleFramework/renderer/src/RendererLight.cpp
SampleRenderer-MT_cppfiles   += ./../../SampleFramework/renderer/src/RendererLightDesc.cpp
SampleRenderer-MT_cppfiles   += ./../../SampleFramework/renderer/src/RendererMaterial.cpp
SampleRenderer-MT_cppfiles   += ./../../SampleFramework/renderer/src/RendererMaterialDesc.cpp
SampleRenderer-MT_cppfiles   += ./../../SampleFramework/renderer/src/RendererMaterialInstance.cpp
SampleRenderer-MT_cppfiles   += ./../../SampleFramework/renderer/src/RendererMesh.cpp
SampleRenderer-MT_cppfiles   += ./../../SampleFramework/renderer/src/RendererMeshContext.cpp
SampleRenderer-MT_cppfiles   += ./../../SampleFramework/renderer/src/RendererMeshDesc.cpp
SampleRenderer-MT_cppfiles   += ./../../SampleFramework/renderer/src/RendererMeshShape.cpp
SampleRenderer-MT_cppfiles   += ./../../SampleFramework/renderer/src/RendererParticleSystemShape.cpp
SampleRenderer-MT_cppfiles   += ./../../SampleFramework/renderer/src/RendererProjection.cpp
SampleRenderer-MT_cppfiles   += ./../../SampleFramework/renderer/src/RendererShape.cpp
SampleRenderer-MT_cppfiles   += ./../../SampleFramework/renderer/src/RendererSimpleParticleSystemShape.cpp
SampleRenderer-MT_cppfiles   += ./../../SampleFramework/renderer/src/RendererSpotLight.cpp
SampleRenderer-MT_cppfiles   += ./../../SampleFramework/renderer/src/RendererSpotLightDesc.cpp
SampleRenderer-MT_cppfiles   += ./../../SampleFramework/renderer/src/RendererTarget.cpp
SampleRenderer-MT_cppfiles   += ./../../SampleFramework/renderer/src/RendererTargetDesc.cpp
SampleRenderer-MT_cppfiles   += ./../../SampleFramework/renderer/src/RendererTerrainShape.cpp
SampleRenderer-MT_cppfiles   += ./../../SampleFramework/renderer/src/RendererTexture.cpp
SampleRenderer-MT_cppfiles   += ./../../SampleFramework/renderer/src/RendererTexture2D.cpp
SampleRenderer-MT_cppfiles   += ./../../SampleFramework/renderer/src/RendererTexture2DDesc.cpp
SampleRenderer-MT_cppfiles   += ./../../SampleFramework/renderer/src/RendererTextureDesc.cpp
SampleRenderer-MT_cppfiles   += ./../../SampleFramework/renderer/src/RendererVertexBuffer.cpp
SampleRenderer-MT_cppfiles   += ./../../SampleFramework/renderer/src/RendererVertexBufferDesc.cpp
SampleRenderer-MT_cppfiles   += ./../../SampleFramework/renderer/src/RendererWindow.cpp
SampleRenderer-MT_cppfiles   += ./../../SampleFramework/renderer/src/ogl/OGLRenderer.cpp
SampleRenderer-MT_cppfiles   += ./../../SampleFramework/renderer/src/ogl/OGLRendererDirectionalLight.cpp
SampleRenderer-MT_cppfiles   += ./../../SampleFramework/renderer/src/ogl/OGLRendererIndexBuffer.cpp
SampleRenderer-MT_cppfiles   += ./../../SampleFramework/renderer/src/ogl/OGLRendererInstanceBuffer.cpp
SampleRenderer-MT_cppfiles   += ./../../SampleFramework/renderer/src/ogl/OGLRendererMaterial.cpp
SampleRenderer-MT_cppfiles   += ./../../SampleFramework/renderer/src/ogl/OGLRendererMesh.cpp
SampleRenderer-MT_cppfiles   += ./../../SampleFramework/renderer/src/ogl/OGLRendererSpotLight.cpp
SampleRenderer-MT_cppfiles   += ./../../SampleFramework/renderer/src/ogl/OGLRendererTexture2D.cpp
SampleRenderer-MT_cppfiles   += ./../../SampleFramework/renderer/src/ogl/OGLRendererVertexBuffer.cpp
SampleRenderer-MT_cppfiles   += ./../../SampleFramework/renderer/src/null/NULLRenderer.cpp
SampleRenderer-MT_cppfiles   += ./../../SampleFramework/renderer/src/null/NULLRendererDirectionalLight.cpp
SampleRenderer-MT_cppfiles   += ./../../SampleFramework/renderer/src/null/NULLRendererIndexBuffer.cpp
SampleRenderer-MT_cppfiles   += ./../../SampleFramework/renderer/src/null/NULLRendererInstanceBuffer.cpp
SampleRenderer-MT_cppfiles   += ./../../SampleFramework/renderer/src/null/NULLRendererMaterial.cpp
SampleRenderer-MT_cppfiles   += ./../../SampleFramework/renderer/src/null/NULLRendererMesh.cpp
SampleRenderer-MT_cppfiles   += ./../../SampleFramework/renderer/src/null/NULLRendererSpotLight.cpp
SampleRenderer-MT_cppfiles   += ./../../SampleFramework/renderer/src/null/NULLRendererTexture2D.cpp
SampleRenderer-MT_cppfiles   += ./../../SampleFramework/renderer/src/null/NULLRendererVertexBuffer.cpp

SampleRenderer-MT_cpp_debug_dep    = $(addprefix $(DEPSDIR)/SampleRenderer-MT/debug/, $(subst ./, , $(subst ../, , $(patsubst %.cpp, %.cpp.P, $(SampleRenderer-MT_cppfiles)))))
SampleRenderer-MT_cc_debug_dep    = $(addprefix $(DEPSDIR)/, $(subst ./, , $(subst ../, , $(patsubst %.cc, %.cc.debug.P, $(SampleRenderer-MT_ccfiles)))))
SampleRenderer-MT_c_debug_dep      = $(addprefix $(DEPSDIR)/SampleRenderer-MT/debug/, $(subst ./, , $(subst ../, , $(patsubst %.c, %.c.P, $(SampleRenderer-MT_cfiles)))))
SampleRenderer-MT_debug_dep      = $(SampleRenderer-MT_cpp_debug_dep) $(SampleRenderer-MT_cc_debug_dep) $(SampleRenderer-MT_c_debug_dep)
-include $(SampleRenderer-MT_debug_dep)
SampleRenderer-MT_cpp_release_dep    = $(addprefix $(DEPSDIR)/SampleRenderer-MT/release/, $(subst ./, , $(subst ../, , $(patsubst %.cpp, %.cpp.P, $(SampleRenderer-MT_cppfiles)))))
SampleRenderer-MT_cc_release_dep    = $(addprefix $(DEPSDIR)/, $(subst ./, , $(subst ../, , $(patsubst %.cc, %.cc.release.P, $(SampleRenderer-MT_ccfiles)))))
SampleRenderer-MT_c_release_dep      = $(addprefix $(DEPSDIR)/SampleRenderer-MT/release/, $(subst ./, , $(subst ../, , $(patsubst %.c, %.c.P, $(SampleRenderer-MT_cfiles)))))
SampleRenderer-MT_release_dep      = $(SampleRenderer-MT_cpp_release_dep) $(SampleRenderer-MT_cc_release_dep) $(SampleRenderer-MT_c_release_dep)
-include $(SampleRenderer-MT_release_dep)
SampleRenderer-MT_cpp_checked_dep    = $(addprefix $(DEPSDIR)/SampleRenderer-MT/checked/, $(subst ./, , $(subst ../, , $(patsubst %.cpp, %.cpp.P, $(SampleRenderer-MT_cppfiles)))))
SampleRenderer-MT_cc_checked_dep    = $(addprefix $(DEPSDIR)/, $(subst ./, , $(subst ../, , $(patsubst %.cc, %.cc.checked.P, $(SampleRenderer-MT_ccfiles)))))
SampleRenderer-MT_c_checked_dep      = $(addprefix $(DEPSDIR)/SampleRenderer-MT/checked/, $(subst ./, , $(subst ../, , $(patsubst %.c, %.c.P, $(SampleRenderer-MT_cfiles)))))
SampleRenderer-MT_checked_dep      = $(SampleRenderer-MT_cpp_checked_dep) $(SampleRenderer-MT_cc_checked_dep) $(SampleRenderer-MT_c_checked_dep)
-include $(SampleRenderer-MT_checked_dep)
SampleRenderer-MT_cpp_profile_dep    = $(addprefix $(DEPSDIR)/SampleRenderer-MT/profile/, $(subst ./, , $(subst ../, , $(patsubst %.cpp, %.cpp.P, $(SampleRenderer-MT_cppfiles)))))
SampleRenderer-MT_cc_profile_dep    = $(addprefix $(DEPSDIR)/, $(subst ./, , $(subst ../, , $(patsubst %.cc, %.cc.profile.P, $(SampleRenderer-MT_ccfiles)))))
SampleRenderer-MT_c_profile_dep      = $(addprefix $(DEPSDIR)/SampleRenderer-MT/profile/, $(subst ./, , $(subst ../, , $(patsubst %.c, %.c.P, $(SampleRenderer-MT_cfiles)))))
SampleRenderer-MT_profile_dep      = $(SampleRenderer-MT_cpp_profile_dep) $(SampleRenderer-MT_cc_profile_dep) $(SampleRenderer-MT_c_profile_dep)
-include $(SampleRenderer-MT_profile_dep)
SampleRenderer-MT_debug_hpaths    := 
SampleRenderer-MT_debug_hpaths    += ./../../SampleFramework/renderer/include
SampleRenderer-MT_debug_hpaths    += ./../../SampleFramework/platform/include
SampleRenderer-MT_debug_hpaths    += ./../../SampleFramework/framework/include
SampleRenderer-MT_debug_hpaths    += ./../../../Source/foundation/include
SampleRenderer-MT_debug_hpaths    += ./../../../Source/foundation/include/unix
SampleRenderer-MT_debug_hpaths    += ./../../../Include
SampleRenderer-MT_debug_hpaths    += ./../../../Include
SampleRenderer-MT_debug_hpaths    += ./../../../Include
SampleRenderer-MT_debug_hpaths    += ./../../../externals/glew/include
SampleRenderer-MT_debug_hpaths    += ./../../../externals/cg/2.2/include
SampleRenderer-MT_debug_lpaths    := 
SampleRenderer-MT_debug_defines   := $(SampleRenderer-MT_custom_defines)
SampleRenderer-MT_debug_defines   += PHYSX_PROFILE_SDK
SampleRenderer-MT_debug_defines   += _DEBUG
SampleRenderer-MT_debug_defines   += PX_DEBUG
SampleRenderer-MT_debug_defines   += PX_CHECKED
SampleRenderer-MT_debug_defines   += PX_SUPPORT_VISUAL_DEBUGGER
SampleRenderer-MT_debug_libraries := 
SampleRenderer-MT_debug_common_cflags	:= $(SampleRenderer-MT_custom_cflags)
SampleRenderer-MT_debug_common_cflags    += -MMD
SampleRenderer-MT_debug_common_cflags    += $(addprefix -D, $(SampleRenderer-MT_debug_defines))
SampleRenderer-MT_debug_common_cflags    += $(addprefix -I, $(SampleRenderer-MT_debug_hpaths))
SampleRenderer-MT_debug_common_cflags  += -m64
SampleRenderer-MT_debug_common_cflags  += -Werror -m64 -fPIC -msse2 -mfpmath=sse -ffast-math -fno-exceptions -fno-rtti -fvisibility=hidden -fvisibility-inlines-hidden
SampleRenderer-MT_debug_common_cflags  += -Wall -Wextra -Wstrict-aliasing=2 -fdiagnostics-show-option
SampleRenderer-MT_debug_common_cflags  += -Wno-long-long
SampleRenderer-MT_debug_common_cflags  += -Wno-unknown-pragmas -Wno-char-subscripts -Wno-unused-variable -Wno-reorder -Wno-sign-compare
SampleRenderer-MT_debug_common_cflags  += -Wno-unused-parameter
SampleRenderer-MT_debug_common_cflags  += -g3 -gdwarf-2
SampleRenderer-MT_debug_cflags	:= $(SampleRenderer-MT_debug_common_cflags)
SampleRenderer-MT_debug_cppflags	:= $(SampleRenderer-MT_debug_common_cflags)
SampleRenderer-MT_debug_lflags    := $(SampleRenderer-MT_custom_lflags)
SampleRenderer-MT_debug_lflags    += $(addprefix -L, $(SampleRenderer-MT_debug_lpaths))
SampleRenderer-MT_debug_lflags    += -Wl,--start-group $(addprefix -l, $(SampleRenderer-MT_debug_libraries)) -Wl,--end-group
SampleRenderer-MT_debug_lflags  += -lrt
SampleRenderer-MT_debug_lflags  += -m64
SampleRenderer-MT_debug_objsdir  = $(OBJS_DIR)/SampleRenderer-MT_debug
SampleRenderer-MT_debug_cpp_o    = $(addprefix $(SampleRenderer-MT_debug_objsdir)/, $(subst ./, , $(subst ../, , $(patsubst %.cpp, %.cpp.o, $(SampleRenderer-MT_cppfiles)))))
SampleRenderer-MT_debug_cc_o    = $(addprefix $(SampleRenderer-MT_debug_objsdir)/, $(subst ./, , $(subst ../, , $(patsubst %.cc, %.cc.o, $(SampleRenderer-MT_ccfiles)))))
SampleRenderer-MT_debug_c_o      = $(addprefix $(SampleRenderer-MT_debug_objsdir)/, $(subst ./, , $(subst ../, , $(patsubst %.c, %.c.o, $(SampleRenderer-MT_cfiles)))))
SampleRenderer-MT_debug_obj      = $(SampleRenderer-MT_debug_cpp_o) $(SampleRenderer-MT_debug_cc_o) $(SampleRenderer-MT_debug_c_o)
SampleRenderer-MT_debug_bin      := ./../../SampleFramework/renderer/lib/linux64/libSampleRenderer-MTDEBUG.a

clean_SampleRenderer-MT_debug: 
	@$(ECHO) clean SampleRenderer-MT debug
	@$(RMDIR) $(SampleRenderer-MT_debug_objsdir)
	@$(RMDIR) $(SampleRenderer-MT_debug_bin)
	@$(RMDIR) $(DEPSDIR)/SampleRenderer-MT/debug

build_SampleRenderer-MT_debug: postbuild_SampleRenderer-MT_debug
postbuild_SampleRenderer-MT_debug: mainbuild_SampleRenderer-MT_debug
mainbuild_SampleRenderer-MT_debug: prebuild_SampleRenderer-MT_debug $(SampleRenderer-MT_debug_bin)
prebuild_SampleRenderer-MT_debug:

$(SampleRenderer-MT_debug_bin): $(SampleRenderer-MT_debug_obj) 
	mkdir -p `dirname ./../../SampleFramework/renderer/lib/linux64/libSampleRenderer-MTDEBUG.a`
	@$(AR) rcs $(SampleRenderer-MT_debug_bin) $(SampleRenderer-MT_debug_obj)
	$(ECHO) building $@ complete!

SampleRenderer-MT_debug_DEPDIR = $(dir $(@))/$(*F)
$(SampleRenderer-MT_debug_cpp_o): $(SampleRenderer-MT_debug_objsdir)/%.o:
	$(ECHO) SampleRenderer-MT: compiling debug $(filter %$(strip $(subst .cpp.o,.cpp, $(subst $(SampleRenderer-MT_debug_objsdir),, $@))), $(SampleRenderer-MT_cppfiles))...
	mkdir -p $(dir $(@))
	$(CXX) $(SampleRenderer-MT_debug_cppflags) -c $(filter %$(strip $(subst .cpp.o,.cpp, $(subst $(SampleRenderer-MT_debug_objsdir),, $@))), $(SampleRenderer-MT_cppfiles)) -o $@
	@mkdir -p $(dir $(addprefix $(DEPSDIR)/SampleRenderer-MT/debug/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cpp.o,.cpp, $(subst $(SampleRenderer-MT_debug_objsdir),, $@))), $(SampleRenderer-MT_cppfiles))))))
	cp $(SampleRenderer-MT_debug_DEPDIR).d $(addprefix $(DEPSDIR)/SampleRenderer-MT/debug/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cpp.o,.cpp, $(subst $(SampleRenderer-MT_debug_objsdir),, $@))), $(SampleRenderer-MT_cppfiles))))).P; \
	  sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' \
		-e '/^$$/ d' -e 's/$$/ :/' < $(SampleRenderer-MT_debug_DEPDIR).d >> $(addprefix $(DEPSDIR)/SampleRenderer-MT/debug/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cpp.o,.cpp, $(subst $(SampleRenderer-MT_debug_objsdir),, $@))), $(SampleRenderer-MT_cppfiles))))).P; \
	  rm -f $(SampleRenderer-MT_debug_DEPDIR).d

$(SampleRenderer-MT_debug_cc_o): $(SampleRenderer-MT_debug_objsdir)/%.o:
	$(ECHO) SampleRenderer-MT: compiling debug $(filter %$(strip $(subst .cc.o,.cc, $(subst $(SampleRenderer-MT_debug_objsdir),, $@))), $(SampleRenderer-MT_ccfiles))...
	mkdir -p $(dir $(@))
	$(CXX) $(SampleRenderer-MT_debug_cppflags) -c $(filter %$(strip $(subst .cc.o,.cc, $(subst $(SampleRenderer-MT_debug_objsdir),, $@))), $(SampleRenderer-MT_ccfiles)) -o $@
	mkdir -p $(dir $(addprefix $(DEPSDIR)/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cc.o,.cc, $(subst $(SampleRenderer-MT_debug_objsdir),, $@))), $(SampleRenderer-MT_ccfiles))))))
	cp $(SampleRenderer-MT_debug_DEPDIR).d $(addprefix $(DEPSDIR)/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cc.o,.cc, $(subst $(SampleRenderer-MT_debug_objsdir),, $@))), $(SampleRenderer-MT_ccfiles))))).debug.P; \
	  sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' \
		-e '/^$$/ d' -e 's/$$/ :/' < $(SampleRenderer-MT_debug_DEPDIR).d >> $(addprefix $(DEPSDIR)/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cc.o,.cc, $(subst $(SampleRenderer-MT_debug_objsdir),, $@))), $(SampleRenderer-MT_ccfiles))))).debug.P; \
	  rm -f $(SampleRenderer-MT_debug_DEPDIR).d

$(SampleRenderer-MT_debug_c_o): $(SampleRenderer-MT_debug_objsdir)/%.o:
	$(ECHO) SampleRenderer-MT: compiling debug $(filter %$(strip $(subst .c.o,.c, $(subst $(SampleRenderer-MT_debug_objsdir),, $@))), $(SampleRenderer-MT_cfiles))...
	mkdir -p $(dir $(@))
	$(CC) $(SampleRenderer-MT_debug_cflags) -c $(filter %$(strip $(subst .c.o,.c, $(subst $(SampleRenderer-MT_debug_objsdir),, $@))), $(SampleRenderer-MT_cfiles)) -o $@ 
	@mkdir -p $(dir $(addprefix $(DEPSDIR)/SampleRenderer-MT/debug/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .c.o,.c, $(subst $(SampleRenderer-MT_debug_objsdir),, $@))), $(SampleRenderer-MT_cfiles))))))
	cp $(SampleRenderer-MT_debug_DEPDIR).d $(addprefix $(DEPSDIR)/SampleRenderer-MT/debug/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .c.o,.c, $(subst $(SampleRenderer-MT_debug_objsdir),, $@))), $(SampleRenderer-MT_cfiles))))).P; \
	  sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' \
		-e '/^$$/ d' -e 's/$$/ :/' < $(SampleRenderer-MT_debug_DEPDIR).d >> $(addprefix $(DEPSDIR)/SampleRenderer-MT/debug/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .c.o,.c, $(subst $(SampleRenderer-MT_debug_objsdir),, $@))), $(SampleRenderer-MT_cfiles))))).P; \
	  rm -f $(SampleRenderer-MT_debug_DEPDIR).d

SampleRenderer-MT_release_hpaths    := 
SampleRenderer-MT_release_hpaths    += ./../../SampleFramework/renderer/include
SampleRenderer-MT_release_hpaths    += ./../../SampleFramework/platform/include
SampleRenderer-MT_release_hpaths    += ./../../SampleFramework/framework/include
SampleRenderer-MT_release_hpaths    += ./../../../Source/foundation/include
SampleRenderer-MT_release_hpaths    += ./../../../Source/foundation/include/unix
SampleRenderer-MT_release_hpaths    += ./../../../Include
SampleRenderer-MT_release_hpaths    += ./../../../Include
SampleRenderer-MT_release_hpaths    += ./../../../Include
SampleRenderer-MT_release_hpaths    += ./../../../externals/glew/include
SampleRenderer-MT_release_hpaths    += ./../../../externals/cg/2.2/include
SampleRenderer-MT_release_lpaths    := 
SampleRenderer-MT_release_defines   := $(SampleRenderer-MT_custom_defines)
SampleRenderer-MT_release_defines   += PHYSX_PROFILE_SDK
SampleRenderer-MT_release_defines   += NDEBUG
SampleRenderer-MT_release_libraries := 
SampleRenderer-MT_release_common_cflags	:= $(SampleRenderer-MT_custom_cflags)
SampleRenderer-MT_release_common_cflags    += -MMD
SampleRenderer-MT_release_common_cflags    += $(addprefix -D, $(SampleRenderer-MT_release_defines))
SampleRenderer-MT_release_common_cflags    += $(addprefix -I, $(SampleRenderer-MT_release_hpaths))
SampleRenderer-MT_release_common_cflags  += -m64
SampleRenderer-MT_release_common_cflags  += -Werror -m64 -fPIC -msse2 -mfpmath=sse -ffast-math -fno-exceptions -fno-rtti -fvisibility=hidden -fvisibility-inlines-hidden
SampleRenderer-MT_release_common_cflags  += -Wall -Wextra -Wstrict-aliasing=2 -fdiagnostics-show-option
SampleRenderer-MT_release_common_cflags  += -Wno-long-long
SampleRenderer-MT_release_common_cflags  += -Wno-unknown-pragmas -Wno-char-subscripts -Wno-unused-variable -Wno-reorder -Wno-sign-compare
SampleRenderer-MT_release_common_cflags  += -Wno-unused-parameter
SampleRenderer-MT_release_common_cflags  += -O3 -fno-strict-aliasing
SampleRenderer-MT_release_cflags	:= $(SampleRenderer-MT_release_common_cflags)
SampleRenderer-MT_release_cppflags	:= $(SampleRenderer-MT_release_common_cflags)
SampleRenderer-MT_release_lflags    := $(SampleRenderer-MT_custom_lflags)
SampleRenderer-MT_release_lflags    += $(addprefix -L, $(SampleRenderer-MT_release_lpaths))
SampleRenderer-MT_release_lflags    += -Wl,--start-group $(addprefix -l, $(SampleRenderer-MT_release_libraries)) -Wl,--end-group
SampleRenderer-MT_release_lflags  += -lrt
SampleRenderer-MT_release_lflags  += -m64
SampleRenderer-MT_release_objsdir  = $(OBJS_DIR)/SampleRenderer-MT_release
SampleRenderer-MT_release_cpp_o    = $(addprefix $(SampleRenderer-MT_release_objsdir)/, $(subst ./, , $(subst ../, , $(patsubst %.cpp, %.cpp.o, $(SampleRenderer-MT_cppfiles)))))
SampleRenderer-MT_release_cc_o    = $(addprefix $(SampleRenderer-MT_release_objsdir)/, $(subst ./, , $(subst ../, , $(patsubst %.cc, %.cc.o, $(SampleRenderer-MT_ccfiles)))))
SampleRenderer-MT_release_c_o      = $(addprefix $(SampleRenderer-MT_release_objsdir)/, $(subst ./, , $(subst ../, , $(patsubst %.c, %.c.o, $(SampleRenderer-MT_cfiles)))))
SampleRenderer-MT_release_obj      = $(SampleRenderer-MT_release_cpp_o) $(SampleRenderer-MT_release_cc_o) $(SampleRenderer-MT_release_c_o)
SampleRenderer-MT_release_bin      := ./../../SampleFramework/renderer/lib/linux64/libSampleRenderer-MT.a

clean_SampleRenderer-MT_release: 
	@$(ECHO) clean SampleRenderer-MT release
	@$(RMDIR) $(SampleRenderer-MT_release_objsdir)
	@$(RMDIR) $(SampleRenderer-MT_release_bin)
	@$(RMDIR) $(DEPSDIR)/SampleRenderer-MT/release

build_SampleRenderer-MT_release: postbuild_SampleRenderer-MT_release
postbuild_SampleRenderer-MT_release: mainbuild_SampleRenderer-MT_release
mainbuild_SampleRenderer-MT_release: prebuild_SampleRenderer-MT_release $(SampleRenderer-MT_release_bin)
prebuild_SampleRenderer-MT_release:

$(SampleRenderer-MT_release_bin): $(SampleRenderer-MT_release_obj) 
	mkdir -p `dirname ./../../SampleFramework/renderer/lib/linux64/libSampleRenderer-MT.a`
	@$(AR) rcs $(SampleRenderer-MT_release_bin) $(SampleRenderer-MT_release_obj)
	$(ECHO) building $@ complete!

SampleRenderer-MT_release_DEPDIR = $(dir $(@))/$(*F)
$(SampleRenderer-MT_release_cpp_o): $(SampleRenderer-MT_release_objsdir)/%.o:
	$(ECHO) SampleRenderer-MT: compiling release $(filter %$(strip $(subst .cpp.o,.cpp, $(subst $(SampleRenderer-MT_release_objsdir),, $@))), $(SampleRenderer-MT_cppfiles))...
	mkdir -p $(dir $(@))
	$(CXX) $(SampleRenderer-MT_release_cppflags) -c $(filter %$(strip $(subst .cpp.o,.cpp, $(subst $(SampleRenderer-MT_release_objsdir),, $@))), $(SampleRenderer-MT_cppfiles)) -o $@
	@mkdir -p $(dir $(addprefix $(DEPSDIR)/SampleRenderer-MT/release/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cpp.o,.cpp, $(subst $(SampleRenderer-MT_release_objsdir),, $@))), $(SampleRenderer-MT_cppfiles))))))
	cp $(SampleRenderer-MT_release_DEPDIR).d $(addprefix $(DEPSDIR)/SampleRenderer-MT/release/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cpp.o,.cpp, $(subst $(SampleRenderer-MT_release_objsdir),, $@))), $(SampleRenderer-MT_cppfiles))))).P; \
	  sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' \
		-e '/^$$/ d' -e 's/$$/ :/' < $(SampleRenderer-MT_release_DEPDIR).d >> $(addprefix $(DEPSDIR)/SampleRenderer-MT/release/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cpp.o,.cpp, $(subst $(SampleRenderer-MT_release_objsdir),, $@))), $(SampleRenderer-MT_cppfiles))))).P; \
	  rm -f $(SampleRenderer-MT_release_DEPDIR).d

$(SampleRenderer-MT_release_cc_o): $(SampleRenderer-MT_release_objsdir)/%.o:
	$(ECHO) SampleRenderer-MT: compiling release $(filter %$(strip $(subst .cc.o,.cc, $(subst $(SampleRenderer-MT_release_objsdir),, $@))), $(SampleRenderer-MT_ccfiles))...
	mkdir -p $(dir $(@))
	$(CXX) $(SampleRenderer-MT_release_cppflags) -c $(filter %$(strip $(subst .cc.o,.cc, $(subst $(SampleRenderer-MT_release_objsdir),, $@))), $(SampleRenderer-MT_ccfiles)) -o $@
	mkdir -p $(dir $(addprefix $(DEPSDIR)/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cc.o,.cc, $(subst $(SampleRenderer-MT_release_objsdir),, $@))), $(SampleRenderer-MT_ccfiles))))))
	cp $(SampleRenderer-MT_release_DEPDIR).d $(addprefix $(DEPSDIR)/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cc.o,.cc, $(subst $(SampleRenderer-MT_release_objsdir),, $@))), $(SampleRenderer-MT_ccfiles))))).release.P; \
	  sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' \
		-e '/^$$/ d' -e 's/$$/ :/' < $(SampleRenderer-MT_release_DEPDIR).d >> $(addprefix $(DEPSDIR)/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cc.o,.cc, $(subst $(SampleRenderer-MT_release_objsdir),, $@))), $(SampleRenderer-MT_ccfiles))))).release.P; \
	  rm -f $(SampleRenderer-MT_release_DEPDIR).d

$(SampleRenderer-MT_release_c_o): $(SampleRenderer-MT_release_objsdir)/%.o:
	$(ECHO) SampleRenderer-MT: compiling release $(filter %$(strip $(subst .c.o,.c, $(subst $(SampleRenderer-MT_release_objsdir),, $@))), $(SampleRenderer-MT_cfiles))...
	mkdir -p $(dir $(@))
	$(CC) $(SampleRenderer-MT_release_cflags) -c $(filter %$(strip $(subst .c.o,.c, $(subst $(SampleRenderer-MT_release_objsdir),, $@))), $(SampleRenderer-MT_cfiles)) -o $@ 
	@mkdir -p $(dir $(addprefix $(DEPSDIR)/SampleRenderer-MT/release/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .c.o,.c, $(subst $(SampleRenderer-MT_release_objsdir),, $@))), $(SampleRenderer-MT_cfiles))))))
	cp $(SampleRenderer-MT_release_DEPDIR).d $(addprefix $(DEPSDIR)/SampleRenderer-MT/release/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .c.o,.c, $(subst $(SampleRenderer-MT_release_objsdir),, $@))), $(SampleRenderer-MT_cfiles))))).P; \
	  sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' \
		-e '/^$$/ d' -e 's/$$/ :/' < $(SampleRenderer-MT_release_DEPDIR).d >> $(addprefix $(DEPSDIR)/SampleRenderer-MT/release/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .c.o,.c, $(subst $(SampleRenderer-MT_release_objsdir),, $@))), $(SampleRenderer-MT_cfiles))))).P; \
	  rm -f $(SampleRenderer-MT_release_DEPDIR).d

SampleRenderer-MT_checked_hpaths    := 
SampleRenderer-MT_checked_hpaths    += ./../../SampleFramework/renderer/include
SampleRenderer-MT_checked_hpaths    += ./../../SampleFramework/platform/include
SampleRenderer-MT_checked_hpaths    += ./../../SampleFramework/framework/include
SampleRenderer-MT_checked_hpaths    += ./../../../Source/foundation/include
SampleRenderer-MT_checked_hpaths    += ./../../../Source/foundation/include/unix
SampleRenderer-MT_checked_hpaths    += ./../../../Include
SampleRenderer-MT_checked_hpaths    += ./../../../Include
SampleRenderer-MT_checked_hpaths    += ./../../../Include
SampleRenderer-MT_checked_hpaths    += ./../../../externals/glew/include
SampleRenderer-MT_checked_hpaths    += ./../../../externals/cg/2.2/include
SampleRenderer-MT_checked_lpaths    := 
SampleRenderer-MT_checked_defines   := $(SampleRenderer-MT_custom_defines)
SampleRenderer-MT_checked_defines   += PHYSX_PROFILE_SDK
SampleRenderer-MT_checked_defines   += NDEBUG
SampleRenderer-MT_checked_defines   += PX_CHECKED
SampleRenderer-MT_checked_defines   += PX_SUPPORT_VISUAL_DEBUGGER
SampleRenderer-MT_checked_libraries := 
SampleRenderer-MT_checked_common_cflags	:= $(SampleRenderer-MT_custom_cflags)
SampleRenderer-MT_checked_common_cflags    += -MMD
SampleRenderer-MT_checked_common_cflags    += $(addprefix -D, $(SampleRenderer-MT_checked_defines))
SampleRenderer-MT_checked_common_cflags    += $(addprefix -I, $(SampleRenderer-MT_checked_hpaths))
SampleRenderer-MT_checked_common_cflags  += -m64
SampleRenderer-MT_checked_common_cflags  += -Werror -m64 -fPIC -msse2 -mfpmath=sse -ffast-math -fno-exceptions -fno-rtti -fvisibility=hidden -fvisibility-inlines-hidden
SampleRenderer-MT_checked_common_cflags  += -Wall -Wextra -Wstrict-aliasing=2 -fdiagnostics-show-option
SampleRenderer-MT_checked_common_cflags  += -Wno-long-long
SampleRenderer-MT_checked_common_cflags  += -Wno-unknown-pragmas -Wno-char-subscripts -Wno-unused-variable -Wno-reorder -Wno-sign-compare
SampleRenderer-MT_checked_common_cflags  += -Wno-unused-parameter
SampleRenderer-MT_checked_common_cflags  += -g3 -gdwarf-2 -O3 -fno-strict-aliasing
SampleRenderer-MT_checked_cflags	:= $(SampleRenderer-MT_checked_common_cflags)
SampleRenderer-MT_checked_cppflags	:= $(SampleRenderer-MT_checked_common_cflags)
SampleRenderer-MT_checked_lflags    := $(SampleRenderer-MT_custom_lflags)
SampleRenderer-MT_checked_lflags    += $(addprefix -L, $(SampleRenderer-MT_checked_lpaths))
SampleRenderer-MT_checked_lflags    += -Wl,--start-group $(addprefix -l, $(SampleRenderer-MT_checked_libraries)) -Wl,--end-group
SampleRenderer-MT_checked_lflags  += -lrt
SampleRenderer-MT_checked_lflags  += -m64
SampleRenderer-MT_checked_objsdir  = $(OBJS_DIR)/SampleRenderer-MT_checked
SampleRenderer-MT_checked_cpp_o    = $(addprefix $(SampleRenderer-MT_checked_objsdir)/, $(subst ./, , $(subst ../, , $(patsubst %.cpp, %.cpp.o, $(SampleRenderer-MT_cppfiles)))))
SampleRenderer-MT_checked_cc_o    = $(addprefix $(SampleRenderer-MT_checked_objsdir)/, $(subst ./, , $(subst ../, , $(patsubst %.cc, %.cc.o, $(SampleRenderer-MT_ccfiles)))))
SampleRenderer-MT_checked_c_o      = $(addprefix $(SampleRenderer-MT_checked_objsdir)/, $(subst ./, , $(subst ../, , $(patsubst %.c, %.c.o, $(SampleRenderer-MT_cfiles)))))
SampleRenderer-MT_checked_obj      = $(SampleRenderer-MT_checked_cpp_o) $(SampleRenderer-MT_checked_cc_o) $(SampleRenderer-MT_checked_c_o)
SampleRenderer-MT_checked_bin      := ./../../SampleFramework/renderer/lib/linux64/libSampleRenderer-MTCHECKED.a

clean_SampleRenderer-MT_checked: 
	@$(ECHO) clean SampleRenderer-MT checked
	@$(RMDIR) $(SampleRenderer-MT_checked_objsdir)
	@$(RMDIR) $(SampleRenderer-MT_checked_bin)
	@$(RMDIR) $(DEPSDIR)/SampleRenderer-MT/checked

build_SampleRenderer-MT_checked: postbuild_SampleRenderer-MT_checked
postbuild_SampleRenderer-MT_checked: mainbuild_SampleRenderer-MT_checked
mainbuild_SampleRenderer-MT_checked: prebuild_SampleRenderer-MT_checked $(SampleRenderer-MT_checked_bin)
prebuild_SampleRenderer-MT_checked:

$(SampleRenderer-MT_checked_bin): $(SampleRenderer-MT_checked_obj) 
	mkdir -p `dirname ./../../SampleFramework/renderer/lib/linux64/libSampleRenderer-MTCHECKED.a`
	@$(AR) rcs $(SampleRenderer-MT_checked_bin) $(SampleRenderer-MT_checked_obj)
	$(ECHO) building $@ complete!

SampleRenderer-MT_checked_DEPDIR = $(dir $(@))/$(*F)
$(SampleRenderer-MT_checked_cpp_o): $(SampleRenderer-MT_checked_objsdir)/%.o:
	$(ECHO) SampleRenderer-MT: compiling checked $(filter %$(strip $(subst .cpp.o,.cpp, $(subst $(SampleRenderer-MT_checked_objsdir),, $@))), $(SampleRenderer-MT_cppfiles))...
	mkdir -p $(dir $(@))
	$(CXX) $(SampleRenderer-MT_checked_cppflags) -c $(filter %$(strip $(subst .cpp.o,.cpp, $(subst $(SampleRenderer-MT_checked_objsdir),, $@))), $(SampleRenderer-MT_cppfiles)) -o $@
	@mkdir -p $(dir $(addprefix $(DEPSDIR)/SampleRenderer-MT/checked/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cpp.o,.cpp, $(subst $(SampleRenderer-MT_checked_objsdir),, $@))), $(SampleRenderer-MT_cppfiles))))))
	cp $(SampleRenderer-MT_checked_DEPDIR).d $(addprefix $(DEPSDIR)/SampleRenderer-MT/checked/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cpp.o,.cpp, $(subst $(SampleRenderer-MT_checked_objsdir),, $@))), $(SampleRenderer-MT_cppfiles))))).P; \
	  sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' \
		-e '/^$$/ d' -e 's/$$/ :/' < $(SampleRenderer-MT_checked_DEPDIR).d >> $(addprefix $(DEPSDIR)/SampleRenderer-MT/checked/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cpp.o,.cpp, $(subst $(SampleRenderer-MT_checked_objsdir),, $@))), $(SampleRenderer-MT_cppfiles))))).P; \
	  rm -f $(SampleRenderer-MT_checked_DEPDIR).d

$(SampleRenderer-MT_checked_cc_o): $(SampleRenderer-MT_checked_objsdir)/%.o:
	$(ECHO) SampleRenderer-MT: compiling checked $(filter %$(strip $(subst .cc.o,.cc, $(subst $(SampleRenderer-MT_checked_objsdir),, $@))), $(SampleRenderer-MT_ccfiles))...
	mkdir -p $(dir $(@))
	$(CXX) $(SampleRenderer-MT_checked_cppflags) -c $(filter %$(strip $(subst .cc.o,.cc, $(subst $(SampleRenderer-MT_checked_objsdir),, $@))), $(SampleRenderer-MT_ccfiles)) -o $@
	mkdir -p $(dir $(addprefix $(DEPSDIR)/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cc.o,.cc, $(subst $(SampleRenderer-MT_checked_objsdir),, $@))), $(SampleRenderer-MT_ccfiles))))))
	cp $(SampleRenderer-MT_checked_DEPDIR).d $(addprefix $(DEPSDIR)/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cc.o,.cc, $(subst $(SampleRenderer-MT_checked_objsdir),, $@))), $(SampleRenderer-MT_ccfiles))))).checked.P; \
	  sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' \
		-e '/^$$/ d' -e 's/$$/ :/' < $(SampleRenderer-MT_checked_DEPDIR).d >> $(addprefix $(DEPSDIR)/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cc.o,.cc, $(subst $(SampleRenderer-MT_checked_objsdir),, $@))), $(SampleRenderer-MT_ccfiles))))).checked.P; \
	  rm -f $(SampleRenderer-MT_checked_DEPDIR).d

$(SampleRenderer-MT_checked_c_o): $(SampleRenderer-MT_checked_objsdir)/%.o:
	$(ECHO) SampleRenderer-MT: compiling checked $(filter %$(strip $(subst .c.o,.c, $(subst $(SampleRenderer-MT_checked_objsdir),, $@))), $(SampleRenderer-MT_cfiles))...
	mkdir -p $(dir $(@))
	$(CC) $(SampleRenderer-MT_checked_cflags) -c $(filter %$(strip $(subst .c.o,.c, $(subst $(SampleRenderer-MT_checked_objsdir),, $@))), $(SampleRenderer-MT_cfiles)) -o $@ 
	@mkdir -p $(dir $(addprefix $(DEPSDIR)/SampleRenderer-MT/checked/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .c.o,.c, $(subst $(SampleRenderer-MT_checked_objsdir),, $@))), $(SampleRenderer-MT_cfiles))))))
	cp $(SampleRenderer-MT_checked_DEPDIR).d $(addprefix $(DEPSDIR)/SampleRenderer-MT/checked/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .c.o,.c, $(subst $(SampleRenderer-MT_checked_objsdir),, $@))), $(SampleRenderer-MT_cfiles))))).P; \
	  sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' \
		-e '/^$$/ d' -e 's/$$/ :/' < $(SampleRenderer-MT_checked_DEPDIR).d >> $(addprefix $(DEPSDIR)/SampleRenderer-MT/checked/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .c.o,.c, $(subst $(SampleRenderer-MT_checked_objsdir),, $@))), $(SampleRenderer-MT_cfiles))))).P; \
	  rm -f $(SampleRenderer-MT_checked_DEPDIR).d

SampleRenderer-MT_profile_hpaths    := 
SampleRenderer-MT_profile_hpaths    += ./../../SampleFramework/renderer/include
SampleRenderer-MT_profile_hpaths    += ./../../SampleFramework/platform/include
SampleRenderer-MT_profile_hpaths    += ./../../SampleFramework/framework/include
SampleRenderer-MT_profile_hpaths    += ./../../../Source/foundation/include
SampleRenderer-MT_profile_hpaths    += ./../../../Source/foundation/include/unix
SampleRenderer-MT_profile_hpaths    += ./../../../Include
SampleRenderer-MT_profile_hpaths    += ./../../../Include
SampleRenderer-MT_profile_hpaths    += ./../../../Include
SampleRenderer-MT_profile_hpaths    += ./../../../externals/glew/include
SampleRenderer-MT_profile_hpaths    += ./../../../externals/cg/2.2/include
SampleRenderer-MT_profile_lpaths    := 
SampleRenderer-MT_profile_defines   := $(SampleRenderer-MT_custom_defines)
SampleRenderer-MT_profile_defines   += PHYSX_PROFILE_SDK
SampleRenderer-MT_profile_defines   += NDEBUG
SampleRenderer-MT_profile_defines   += PX_PROFILE
SampleRenderer-MT_profile_defines   += PX_SUPPORT_VISUAL_DEBUGGER
SampleRenderer-MT_profile_libraries := 
SampleRenderer-MT_profile_common_cflags	:= $(SampleRenderer-MT_custom_cflags)
SampleRenderer-MT_profile_common_cflags    += -MMD
SampleRenderer-MT_profile_common_cflags    += $(addprefix -D, $(SampleRenderer-MT_profile_defines))
SampleRenderer-MT_profile_common_cflags    += $(addprefix -I, $(SampleRenderer-MT_profile_hpaths))
SampleRenderer-MT_profile_common_cflags  += -m64
SampleRenderer-MT_profile_common_cflags  += -Werror -m64 -fPIC -msse2 -mfpmath=sse -ffast-math -fno-exceptions -fno-rtti -fvisibility=hidden -fvisibility-inlines-hidden
SampleRenderer-MT_profile_common_cflags  += -Wall -Wextra -Wstrict-aliasing=2 -fdiagnostics-show-option
SampleRenderer-MT_profile_common_cflags  += -Wno-long-long
SampleRenderer-MT_profile_common_cflags  += -Wno-unknown-pragmas -Wno-char-subscripts -Wno-unused-variable -Wno-reorder -Wno-sign-compare
SampleRenderer-MT_profile_common_cflags  += -Wno-unused-parameter
SampleRenderer-MT_profile_common_cflags  += -O3 -fno-strict-aliasing
SampleRenderer-MT_profile_cflags	:= $(SampleRenderer-MT_profile_common_cflags)
SampleRenderer-MT_profile_cppflags	:= $(SampleRenderer-MT_profile_common_cflags)
SampleRenderer-MT_profile_lflags    := $(SampleRenderer-MT_custom_lflags)
SampleRenderer-MT_profile_lflags    += $(addprefix -L, $(SampleRenderer-MT_profile_lpaths))
SampleRenderer-MT_profile_lflags    += -Wl,--start-group $(addprefix -l, $(SampleRenderer-MT_profile_libraries)) -Wl,--end-group
SampleRenderer-MT_profile_lflags  += -lrt
SampleRenderer-MT_profile_lflags  += -m64
SampleRenderer-MT_profile_objsdir  = $(OBJS_DIR)/SampleRenderer-MT_profile
SampleRenderer-MT_profile_cpp_o    = $(addprefix $(SampleRenderer-MT_profile_objsdir)/, $(subst ./, , $(subst ../, , $(patsubst %.cpp, %.cpp.o, $(SampleRenderer-MT_cppfiles)))))
SampleRenderer-MT_profile_cc_o    = $(addprefix $(SampleRenderer-MT_profile_objsdir)/, $(subst ./, , $(subst ../, , $(patsubst %.cc, %.cc.o, $(SampleRenderer-MT_ccfiles)))))
SampleRenderer-MT_profile_c_o      = $(addprefix $(SampleRenderer-MT_profile_objsdir)/, $(subst ./, , $(subst ../, , $(patsubst %.c, %.c.o, $(SampleRenderer-MT_cfiles)))))
SampleRenderer-MT_profile_obj      = $(SampleRenderer-MT_profile_cpp_o) $(SampleRenderer-MT_profile_cc_o) $(SampleRenderer-MT_profile_c_o)
SampleRenderer-MT_profile_bin      := ./../../SampleFramework/renderer/lib/linux64/libSampleRenderer-MTPROFILE.a

clean_SampleRenderer-MT_profile: 
	@$(ECHO) clean SampleRenderer-MT profile
	@$(RMDIR) $(SampleRenderer-MT_profile_objsdir)
	@$(RMDIR) $(SampleRenderer-MT_profile_bin)
	@$(RMDIR) $(DEPSDIR)/SampleRenderer-MT/profile

build_SampleRenderer-MT_profile: postbuild_SampleRenderer-MT_profile
postbuild_SampleRenderer-MT_profile: mainbuild_SampleRenderer-MT_profile
mainbuild_SampleRenderer-MT_profile: prebuild_SampleRenderer-MT_profile $(SampleRenderer-MT_profile_bin)
prebuild_SampleRenderer-MT_profile:

$(SampleRenderer-MT_profile_bin): $(SampleRenderer-MT_profile_obj) 
	mkdir -p `dirname ./../../SampleFramework/renderer/lib/linux64/libSampleRenderer-MTPROFILE.a`
	@$(AR) rcs $(SampleRenderer-MT_profile_bin) $(SampleRenderer-MT_profile_obj)
	$(ECHO) building $@ complete!

SampleRenderer-MT_profile_DEPDIR = $(dir $(@))/$(*F)
$(SampleRenderer-MT_profile_cpp_o): $(SampleRenderer-MT_profile_objsdir)/%.o:
	$(ECHO) SampleRenderer-MT: compiling profile $(filter %$(strip $(subst .cpp.o,.cpp, $(subst $(SampleRenderer-MT_profile_objsdir),, $@))), $(SampleRenderer-MT_cppfiles))...
	mkdir -p $(dir $(@))
	$(CXX) $(SampleRenderer-MT_profile_cppflags) -c $(filter %$(strip $(subst .cpp.o,.cpp, $(subst $(SampleRenderer-MT_profile_objsdir),, $@))), $(SampleRenderer-MT_cppfiles)) -o $@
	@mkdir -p $(dir $(addprefix $(DEPSDIR)/SampleRenderer-MT/profile/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cpp.o,.cpp, $(subst $(SampleRenderer-MT_profile_objsdir),, $@))), $(SampleRenderer-MT_cppfiles))))))
	cp $(SampleRenderer-MT_profile_DEPDIR).d $(addprefix $(DEPSDIR)/SampleRenderer-MT/profile/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cpp.o,.cpp, $(subst $(SampleRenderer-MT_profile_objsdir),, $@))), $(SampleRenderer-MT_cppfiles))))).P; \
	  sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' \
		-e '/^$$/ d' -e 's/$$/ :/' < $(SampleRenderer-MT_profile_DEPDIR).d >> $(addprefix $(DEPSDIR)/SampleRenderer-MT/profile/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cpp.o,.cpp, $(subst $(SampleRenderer-MT_profile_objsdir),, $@))), $(SampleRenderer-MT_cppfiles))))).P; \
	  rm -f $(SampleRenderer-MT_profile_DEPDIR).d

$(SampleRenderer-MT_profile_cc_o): $(SampleRenderer-MT_profile_objsdir)/%.o:
	$(ECHO) SampleRenderer-MT: compiling profile $(filter %$(strip $(subst .cc.o,.cc, $(subst $(SampleRenderer-MT_profile_objsdir),, $@))), $(SampleRenderer-MT_ccfiles))...
	mkdir -p $(dir $(@))
	$(CXX) $(SampleRenderer-MT_profile_cppflags) -c $(filter %$(strip $(subst .cc.o,.cc, $(subst $(SampleRenderer-MT_profile_objsdir),, $@))), $(SampleRenderer-MT_ccfiles)) -o $@
	mkdir -p $(dir $(addprefix $(DEPSDIR)/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cc.o,.cc, $(subst $(SampleRenderer-MT_profile_objsdir),, $@))), $(SampleRenderer-MT_ccfiles))))))
	cp $(SampleRenderer-MT_profile_DEPDIR).d $(addprefix $(DEPSDIR)/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cc.o,.cc, $(subst $(SampleRenderer-MT_profile_objsdir),, $@))), $(SampleRenderer-MT_ccfiles))))).profile.P; \
	  sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' \
		-e '/^$$/ d' -e 's/$$/ :/' < $(SampleRenderer-MT_profile_DEPDIR).d >> $(addprefix $(DEPSDIR)/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cc.o,.cc, $(subst $(SampleRenderer-MT_profile_objsdir),, $@))), $(SampleRenderer-MT_ccfiles))))).profile.P; \
	  rm -f $(SampleRenderer-MT_profile_DEPDIR).d

$(SampleRenderer-MT_profile_c_o): $(SampleRenderer-MT_profile_objsdir)/%.o:
	$(ECHO) SampleRenderer-MT: compiling profile $(filter %$(strip $(subst .c.o,.c, $(subst $(SampleRenderer-MT_profile_objsdir),, $@))), $(SampleRenderer-MT_cfiles))...
	mkdir -p $(dir $(@))
	$(CC) $(SampleRenderer-MT_profile_cflags) -c $(filter %$(strip $(subst .c.o,.c, $(subst $(SampleRenderer-MT_profile_objsdir),, $@))), $(SampleRenderer-MT_cfiles)) -o $@ 
	@mkdir -p $(dir $(addprefix $(DEPSDIR)/SampleRenderer-MT/profile/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .c.o,.c, $(subst $(SampleRenderer-MT_profile_objsdir),, $@))), $(SampleRenderer-MT_cfiles))))))
	cp $(SampleRenderer-MT_profile_DEPDIR).d $(addprefix $(DEPSDIR)/SampleRenderer-MT/profile/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .c.o,.c, $(subst $(SampleRenderer-MT_profile_objsdir),, $@))), $(SampleRenderer-MT_cfiles))))).P; \
	  sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' \
		-e '/^$$/ d' -e 's/$$/ :/' < $(SampleRenderer-MT_profile_DEPDIR).d >> $(addprefix $(DEPSDIR)/SampleRenderer-MT/profile/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .c.o,.c, $(subst $(SampleRenderer-MT_profile_objsdir),, $@))), $(SampleRenderer-MT_cfiles))))).P; \
	  rm -f $(SampleRenderer-MT_profile_DEPDIR).d

clean_SampleRenderer-MT:  clean_SampleRenderer-MT_debug clean_SampleRenderer-MT_release clean_SampleRenderer-MT_checked clean_SampleRenderer-MT_profile
	rm -rf $(DEPSDIR)

export VERBOSE
ifndef VERBOSE
.SILENT:
endif
