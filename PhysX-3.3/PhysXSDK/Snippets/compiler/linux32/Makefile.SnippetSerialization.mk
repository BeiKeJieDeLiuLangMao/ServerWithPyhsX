# Makefile generated by XPJ for linux32
-include Makefile.custom
ProjectName = SnippetSerialization
SnippetSerialization_cppfiles   += ./../../SnippetCommon/ClassicMain.cpp
SnippetSerialization_cppfiles   += ./../../SnippetSerialization/SnippetSerialization.cpp
SnippetSerialization_cppfiles   += ./../../SnippetSerialization/SnippetSerializationRender.cpp

SnippetSerialization_cpp_debug_dep    = $(addprefix $(DEPSDIR)/SnippetSerialization/debug/, $(subst ./, , $(subst ../, , $(patsubst %.cpp, %.cpp.P, $(SnippetSerialization_cppfiles)))))
SnippetSerialization_cc_debug_dep    = $(addprefix $(DEPSDIR)/, $(subst ./, , $(subst ../, , $(patsubst %.cc, %.cc.debug.P, $(SnippetSerialization_ccfiles)))))
SnippetSerialization_c_debug_dep      = $(addprefix $(DEPSDIR)/SnippetSerialization/debug/, $(subst ./, , $(subst ../, , $(patsubst %.c, %.c.P, $(SnippetSerialization_cfiles)))))
SnippetSerialization_debug_dep      = $(SnippetSerialization_cpp_debug_dep) $(SnippetSerialization_cc_debug_dep) $(SnippetSerialization_c_debug_dep)
-include $(SnippetSerialization_debug_dep)
SnippetSerialization_cpp_checked_dep    = $(addprefix $(DEPSDIR)/SnippetSerialization/checked/, $(subst ./, , $(subst ../, , $(patsubst %.cpp, %.cpp.P, $(SnippetSerialization_cppfiles)))))
SnippetSerialization_cc_checked_dep    = $(addprefix $(DEPSDIR)/, $(subst ./, , $(subst ../, , $(patsubst %.cc, %.cc.checked.P, $(SnippetSerialization_ccfiles)))))
SnippetSerialization_c_checked_dep      = $(addprefix $(DEPSDIR)/SnippetSerialization/checked/, $(subst ./, , $(subst ../, , $(patsubst %.c, %.c.P, $(SnippetSerialization_cfiles)))))
SnippetSerialization_checked_dep      = $(SnippetSerialization_cpp_checked_dep) $(SnippetSerialization_cc_checked_dep) $(SnippetSerialization_c_checked_dep)
-include $(SnippetSerialization_checked_dep)
SnippetSerialization_cpp_profile_dep    = $(addprefix $(DEPSDIR)/SnippetSerialization/profile/, $(subst ./, , $(subst ../, , $(patsubst %.cpp, %.cpp.P, $(SnippetSerialization_cppfiles)))))
SnippetSerialization_cc_profile_dep    = $(addprefix $(DEPSDIR)/, $(subst ./, , $(subst ../, , $(patsubst %.cc, %.cc.profile.P, $(SnippetSerialization_ccfiles)))))
SnippetSerialization_c_profile_dep      = $(addprefix $(DEPSDIR)/SnippetSerialization/profile/, $(subst ./, , $(subst ../, , $(patsubst %.c, %.c.P, $(SnippetSerialization_cfiles)))))
SnippetSerialization_profile_dep      = $(SnippetSerialization_cpp_profile_dep) $(SnippetSerialization_cc_profile_dep) $(SnippetSerialization_c_profile_dep)
-include $(SnippetSerialization_profile_dep)
SnippetSerialization_cpp_release_dep    = $(addprefix $(DEPSDIR)/SnippetSerialization/release/, $(subst ./, , $(subst ../, , $(patsubst %.cpp, %.cpp.P, $(SnippetSerialization_cppfiles)))))
SnippetSerialization_cc_release_dep    = $(addprefix $(DEPSDIR)/, $(subst ./, , $(subst ../, , $(patsubst %.cc, %.cc.release.P, $(SnippetSerialization_ccfiles)))))
SnippetSerialization_c_release_dep      = $(addprefix $(DEPSDIR)/SnippetSerialization/release/, $(subst ./, , $(subst ../, , $(patsubst %.c, %.c.P, $(SnippetSerialization_cfiles)))))
SnippetSerialization_release_dep      = $(SnippetSerialization_cpp_release_dep) $(SnippetSerialization_cc_release_dep) $(SnippetSerialization_c_release_dep)
-include $(SnippetSerialization_release_dep)
SnippetSerialization_debug_hpaths    := 
SnippetSerialization_debug_hpaths    += ./../../../Include
SnippetSerialization_debug_lpaths    := 
SnippetSerialization_debug_lpaths    += ./../../../Lib/linux32
SnippetSerialization_debug_lpaths    += ./../../lib/linux32
SnippetSerialization_debug_lpaths    += ./../../../Bin/linux32
SnippetSerialization_debug_lpaths    += ./../../lib/linux32
SnippetSerialization_debug_defines   := $(SnippetSerialization_custom_defines)
SnippetSerialization_debug_defines   += PHYSX_PROFILE_SDK
SnippetSerialization_debug_defines   += RENDER_SNIPPET
SnippetSerialization_debug_defines   += _DEBUG
SnippetSerialization_debug_defines   += PX_DEBUG
SnippetSerialization_debug_defines   += PX_CHECKED
SnippetSerialization_debug_defines   += PX_SUPPORT_VISUAL_DEBUGGER
SnippetSerialization_debug_libraries := 
SnippetSerialization_debug_libraries += SnippetRenderDEBUG
SnippetSerialization_debug_libraries += SnippetUtilsDEBUG
SnippetSerialization_debug_libraries += PhysX3DEBUG_x86
SnippetSerialization_debug_libraries += PhysX3CommonDEBUG_x86
SnippetSerialization_debug_libraries += PhysX3CookingDEBUG_x86
SnippetSerialization_debug_libraries += PhysX3CharacterKinematicDEBUG_x86
SnippetSerialization_debug_libraries += PhysX3ExtensionsDEBUG
SnippetSerialization_debug_libraries += PhysX3VehicleDEBUG
SnippetSerialization_debug_libraries += PhysXProfileSDKDEBUG
SnippetSerialization_debug_libraries += PhysXVisualDebuggerSDKDEBUG
SnippetSerialization_debug_libraries += PxTaskDEBUG
SnippetSerialization_debug_libraries += SnippetUtilsDEBUG
SnippetSerialization_debug_libraries += SnippetRenderDEBUG
SnippetSerialization_debug_libraries += GL
SnippetSerialization_debug_libraries += GLU
SnippetSerialization_debug_libraries += glut
SnippetSerialization_debug_libraries += X11
SnippetSerialization_debug_libraries += rt
SnippetSerialization_debug_libraries += pthread
SnippetSerialization_debug_common_cflags	:= $(SnippetSerialization_custom_cflags)
SnippetSerialization_debug_common_cflags    += -MMD
SnippetSerialization_debug_common_cflags    += $(addprefix -D, $(SnippetSerialization_debug_defines))
SnippetSerialization_debug_common_cflags    += $(addprefix -I, $(SnippetSerialization_debug_hpaths))
SnippetSerialization_debug_common_cflags  += -m32
SnippetSerialization_debug_common_cflags  += -Werror -m32 -fPIC -msse2 -mfpmath=sse -malign-double -ffast-math -fno-exceptions -fno-rtti -fvisibility=hidden -fvisibility-inlines-hidden
SnippetSerialization_debug_common_cflags  += -Wall -Wextra -Wstrict-aliasing=2 -fdiagnostics-show-option
SnippetSerialization_debug_common_cflags  += -Wno-long-long
SnippetSerialization_debug_common_cflags  += -Wno-unknown-pragmas -Wno-invalid-offsetof -Wno-uninitialized
SnippetSerialization_debug_common_cflags  += -Wno-unused-parameter
SnippetSerialization_debug_common_cflags  += -g3 -gdwarf-2
SnippetSerialization_debug_cflags	:= $(SnippetSerialization_debug_common_cflags)
SnippetSerialization_debug_cppflags	:= $(SnippetSerialization_debug_common_cflags)
SnippetSerialization_debug_lflags    := $(SnippetSerialization_custom_lflags)
SnippetSerialization_debug_lflags    += $(addprefix -L, $(SnippetSerialization_debug_lpaths))
SnippetSerialization_debug_lflags    += -Wl,--start-group $(addprefix -l, $(SnippetSerialization_debug_libraries)) -Wl,--end-group
SnippetSerialization_debug_lflags  += -lrt
SnippetSerialization_debug_lflags  += -Wl,-rpath ./
SnippetSerialization_debug_lflags  += -m32
SnippetSerialization_debug_objsdir  = $(OBJS_DIR)/SnippetSerialization_debug
SnippetSerialization_debug_cpp_o    = $(addprefix $(SnippetSerialization_debug_objsdir)/, $(subst ./, , $(subst ../, , $(patsubst %.cpp, %.cpp.o, $(SnippetSerialization_cppfiles)))))
SnippetSerialization_debug_cc_o    = $(addprefix $(SnippetSerialization_debug_objsdir)/, $(subst ./, , $(subst ../, , $(patsubst %.cc, %.cc.o, $(SnippetSerialization_ccfiles)))))
SnippetSerialization_debug_c_o      = $(addprefix $(SnippetSerialization_debug_objsdir)/, $(subst ./, , $(subst ../, , $(patsubst %.c, %.c.o, $(SnippetSerialization_cfiles)))))
SnippetSerialization_debug_obj      = $(SnippetSerialization_debug_cpp_o) $(SnippetSerialization_debug_cc_o) $(SnippetSerialization_debug_c_o)
SnippetSerialization_debug_bin      := ./../../../Bin/linux32/SnippetSerializationDEBUG

clean_SnippetSerialization_debug: 
	@$(ECHO) clean SnippetSerialization debug
	@$(RMDIR) $(SnippetSerialization_debug_objsdir)
	@$(RMDIR) $(SnippetSerialization_debug_bin)
	@$(RMDIR) $(DEPSDIR)/SnippetSerialization/debug

build_SnippetSerialization_debug: postbuild_SnippetSerialization_debug
postbuild_SnippetSerialization_debug: mainbuild_SnippetSerialization_debug
mainbuild_SnippetSerialization_debug: prebuild_SnippetSerialization_debug $(SnippetSerialization_debug_bin)
prebuild_SnippetSerialization_debug:

$(SnippetSerialization_debug_bin): $(SnippetSerialization_debug_obj) build_SnippetRender_debug build_SnippetUtils_debug 
	mkdir -p `dirname ./../../../Bin/linux32/SnippetSerializationDEBUG`
	$(CCLD) $(SnippetSerialization_debug_obj) $(SnippetSerialization_debug_lflags) -o $(SnippetSerialization_debug_bin) 
	$(ECHO) building $@ complete!

SnippetSerialization_debug_DEPDIR = $(dir $(@))/$(*F)
$(SnippetSerialization_debug_cpp_o): $(SnippetSerialization_debug_objsdir)/%.o:
	$(ECHO) SnippetSerialization: compiling debug $(filter %$(strip $(subst .cpp.o,.cpp, $(subst $(SnippetSerialization_debug_objsdir),, $@))), $(SnippetSerialization_cppfiles))...
	mkdir -p $(dir $(@))
	$(CXX) $(SnippetSerialization_debug_cppflags) -c $(filter %$(strip $(subst .cpp.o,.cpp, $(subst $(SnippetSerialization_debug_objsdir),, $@))), $(SnippetSerialization_cppfiles)) -o $@
	@mkdir -p $(dir $(addprefix $(DEPSDIR)/SnippetSerialization/debug/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cpp.o,.cpp, $(subst $(SnippetSerialization_debug_objsdir),, $@))), $(SnippetSerialization_cppfiles))))))
	cp $(SnippetSerialization_debug_DEPDIR).d $(addprefix $(DEPSDIR)/SnippetSerialization/debug/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cpp.o,.cpp, $(subst $(SnippetSerialization_debug_objsdir),, $@))), $(SnippetSerialization_cppfiles))))).P; \
	  sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' \
		-e '/^$$/ d' -e 's/$$/ :/' < $(SnippetSerialization_debug_DEPDIR).d >> $(addprefix $(DEPSDIR)/SnippetSerialization/debug/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cpp.o,.cpp, $(subst $(SnippetSerialization_debug_objsdir),, $@))), $(SnippetSerialization_cppfiles))))).P; \
	  rm -f $(SnippetSerialization_debug_DEPDIR).d

$(SnippetSerialization_debug_cc_o): $(SnippetSerialization_debug_objsdir)/%.o:
	$(ECHO) SnippetSerialization: compiling debug $(filter %$(strip $(subst .cc.o,.cc, $(subst $(SnippetSerialization_debug_objsdir),, $@))), $(SnippetSerialization_ccfiles))...
	mkdir -p $(dir $(@))
	$(CXX) $(SnippetSerialization_debug_cppflags) -c $(filter %$(strip $(subst .cc.o,.cc, $(subst $(SnippetSerialization_debug_objsdir),, $@))), $(SnippetSerialization_ccfiles)) -o $@
	mkdir -p $(dir $(addprefix $(DEPSDIR)/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cc.o,.cc, $(subst $(SnippetSerialization_debug_objsdir),, $@))), $(SnippetSerialization_ccfiles))))))
	cp $(SnippetSerialization_debug_DEPDIR).d $(addprefix $(DEPSDIR)/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cc.o,.cc, $(subst $(SnippetSerialization_debug_objsdir),, $@))), $(SnippetSerialization_ccfiles))))).debug.P; \
	  sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' \
		-e '/^$$/ d' -e 's/$$/ :/' < $(SnippetSerialization_debug_DEPDIR).d >> $(addprefix $(DEPSDIR)/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cc.o,.cc, $(subst $(SnippetSerialization_debug_objsdir),, $@))), $(SnippetSerialization_ccfiles))))).debug.P; \
	  rm -f $(SnippetSerialization_debug_DEPDIR).d

$(SnippetSerialization_debug_c_o): $(SnippetSerialization_debug_objsdir)/%.o:
	$(ECHO) SnippetSerialization: compiling debug $(filter %$(strip $(subst .c.o,.c, $(subst $(SnippetSerialization_debug_objsdir),, $@))), $(SnippetSerialization_cfiles))...
	mkdir -p $(dir $(@))
	$(CC) $(SnippetSerialization_debug_cflags) -c $(filter %$(strip $(subst .c.o,.c, $(subst $(SnippetSerialization_debug_objsdir),, $@))), $(SnippetSerialization_cfiles)) -o $@ 
	@mkdir -p $(dir $(addprefix $(DEPSDIR)/SnippetSerialization/debug/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .c.o,.c, $(subst $(SnippetSerialization_debug_objsdir),, $@))), $(SnippetSerialization_cfiles))))))
	cp $(SnippetSerialization_debug_DEPDIR).d $(addprefix $(DEPSDIR)/SnippetSerialization/debug/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .c.o,.c, $(subst $(SnippetSerialization_debug_objsdir),, $@))), $(SnippetSerialization_cfiles))))).P; \
	  sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' \
		-e '/^$$/ d' -e 's/$$/ :/' < $(SnippetSerialization_debug_DEPDIR).d >> $(addprefix $(DEPSDIR)/SnippetSerialization/debug/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .c.o,.c, $(subst $(SnippetSerialization_debug_objsdir),, $@))), $(SnippetSerialization_cfiles))))).P; \
	  rm -f $(SnippetSerialization_debug_DEPDIR).d

SnippetSerialization_checked_hpaths    := 
SnippetSerialization_checked_hpaths    += ./../../../Include
SnippetSerialization_checked_lpaths    := 
SnippetSerialization_checked_lpaths    += ./../../../Lib/linux32
SnippetSerialization_checked_lpaths    += ./../../lib/linux32
SnippetSerialization_checked_lpaths    += ./../../../Bin/linux32
SnippetSerialization_checked_lpaths    += ./../../lib/linux32
SnippetSerialization_checked_defines   := $(SnippetSerialization_custom_defines)
SnippetSerialization_checked_defines   += PHYSX_PROFILE_SDK
SnippetSerialization_checked_defines   += RENDER_SNIPPET
SnippetSerialization_checked_defines   += NDEBUG
SnippetSerialization_checked_defines   += PX_CHECKED
SnippetSerialization_checked_defines   += PX_SUPPORT_VISUAL_DEBUGGER
SnippetSerialization_checked_libraries := 
SnippetSerialization_checked_libraries += SnippetRenderCHECKED
SnippetSerialization_checked_libraries += SnippetUtilsCHECKED
SnippetSerialization_checked_libraries += PhysX3CHECKED_x86
SnippetSerialization_checked_libraries += PhysX3CommonCHECKED_x86
SnippetSerialization_checked_libraries += PhysX3CookingCHECKED_x86
SnippetSerialization_checked_libraries += PhysX3CharacterKinematicCHECKED_x86
SnippetSerialization_checked_libraries += PhysX3ExtensionsCHECKED
SnippetSerialization_checked_libraries += PhysX3VehicleCHECKED
SnippetSerialization_checked_libraries += PhysXProfileSDKCHECKED
SnippetSerialization_checked_libraries += PhysXVisualDebuggerSDKCHECKED
SnippetSerialization_checked_libraries += PxTaskCHECKED
SnippetSerialization_checked_libraries += SnippetUtilsCHECKED
SnippetSerialization_checked_libraries += SnippetRenderCHECKED
SnippetSerialization_checked_libraries += GL
SnippetSerialization_checked_libraries += GLU
SnippetSerialization_checked_libraries += glut
SnippetSerialization_checked_libraries += X11
SnippetSerialization_checked_libraries += rt
SnippetSerialization_checked_libraries += pthread
SnippetSerialization_checked_common_cflags	:= $(SnippetSerialization_custom_cflags)
SnippetSerialization_checked_common_cflags    += -MMD
SnippetSerialization_checked_common_cflags    += $(addprefix -D, $(SnippetSerialization_checked_defines))
SnippetSerialization_checked_common_cflags    += $(addprefix -I, $(SnippetSerialization_checked_hpaths))
SnippetSerialization_checked_common_cflags  += -m32
SnippetSerialization_checked_common_cflags  += -Werror -m32 -fPIC -msse2 -mfpmath=sse -malign-double -ffast-math -fno-exceptions -fno-rtti -fvisibility=hidden -fvisibility-inlines-hidden
SnippetSerialization_checked_common_cflags  += -Wall -Wextra -Wstrict-aliasing=2 -fdiagnostics-show-option
SnippetSerialization_checked_common_cflags  += -Wno-long-long
SnippetSerialization_checked_common_cflags  += -Wno-unknown-pragmas -Wno-invalid-offsetof -Wno-uninitialized
SnippetSerialization_checked_common_cflags  += -Wno-unused-parameter
SnippetSerialization_checked_common_cflags  += -g3 -gdwarf-2 -O3 -fno-strict-aliasing
SnippetSerialization_checked_cflags	:= $(SnippetSerialization_checked_common_cflags)
SnippetSerialization_checked_cppflags	:= $(SnippetSerialization_checked_common_cflags)
SnippetSerialization_checked_lflags    := $(SnippetSerialization_custom_lflags)
SnippetSerialization_checked_lflags    += $(addprefix -L, $(SnippetSerialization_checked_lpaths))
SnippetSerialization_checked_lflags    += -Wl,--start-group $(addprefix -l, $(SnippetSerialization_checked_libraries)) -Wl,--end-group
SnippetSerialization_checked_lflags  += -lrt
SnippetSerialization_checked_lflags  += -Wl,-rpath ./
SnippetSerialization_checked_lflags  += -m32
SnippetSerialization_checked_objsdir  = $(OBJS_DIR)/SnippetSerialization_checked
SnippetSerialization_checked_cpp_o    = $(addprefix $(SnippetSerialization_checked_objsdir)/, $(subst ./, , $(subst ../, , $(patsubst %.cpp, %.cpp.o, $(SnippetSerialization_cppfiles)))))
SnippetSerialization_checked_cc_o    = $(addprefix $(SnippetSerialization_checked_objsdir)/, $(subst ./, , $(subst ../, , $(patsubst %.cc, %.cc.o, $(SnippetSerialization_ccfiles)))))
SnippetSerialization_checked_c_o      = $(addprefix $(SnippetSerialization_checked_objsdir)/, $(subst ./, , $(subst ../, , $(patsubst %.c, %.c.o, $(SnippetSerialization_cfiles)))))
SnippetSerialization_checked_obj      = $(SnippetSerialization_checked_cpp_o) $(SnippetSerialization_checked_cc_o) $(SnippetSerialization_checked_c_o)
SnippetSerialization_checked_bin      := ./../../../Bin/linux32/SnippetSerializationCHECKED

clean_SnippetSerialization_checked: 
	@$(ECHO) clean SnippetSerialization checked
	@$(RMDIR) $(SnippetSerialization_checked_objsdir)
	@$(RMDIR) $(SnippetSerialization_checked_bin)
	@$(RMDIR) $(DEPSDIR)/SnippetSerialization/checked

build_SnippetSerialization_checked: postbuild_SnippetSerialization_checked
postbuild_SnippetSerialization_checked: mainbuild_SnippetSerialization_checked
mainbuild_SnippetSerialization_checked: prebuild_SnippetSerialization_checked $(SnippetSerialization_checked_bin)
prebuild_SnippetSerialization_checked:

$(SnippetSerialization_checked_bin): $(SnippetSerialization_checked_obj) build_SnippetRender_checked build_SnippetUtils_checked 
	mkdir -p `dirname ./../../../Bin/linux32/SnippetSerializationCHECKED`
	$(CCLD) $(SnippetSerialization_checked_obj) $(SnippetSerialization_checked_lflags) -o $(SnippetSerialization_checked_bin) 
	$(ECHO) building $@ complete!

SnippetSerialization_checked_DEPDIR = $(dir $(@))/$(*F)
$(SnippetSerialization_checked_cpp_o): $(SnippetSerialization_checked_objsdir)/%.o:
	$(ECHO) SnippetSerialization: compiling checked $(filter %$(strip $(subst .cpp.o,.cpp, $(subst $(SnippetSerialization_checked_objsdir),, $@))), $(SnippetSerialization_cppfiles))...
	mkdir -p $(dir $(@))
	$(CXX) $(SnippetSerialization_checked_cppflags) -c $(filter %$(strip $(subst .cpp.o,.cpp, $(subst $(SnippetSerialization_checked_objsdir),, $@))), $(SnippetSerialization_cppfiles)) -o $@
	@mkdir -p $(dir $(addprefix $(DEPSDIR)/SnippetSerialization/checked/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cpp.o,.cpp, $(subst $(SnippetSerialization_checked_objsdir),, $@))), $(SnippetSerialization_cppfiles))))))
	cp $(SnippetSerialization_checked_DEPDIR).d $(addprefix $(DEPSDIR)/SnippetSerialization/checked/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cpp.o,.cpp, $(subst $(SnippetSerialization_checked_objsdir),, $@))), $(SnippetSerialization_cppfiles))))).P; \
	  sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' \
		-e '/^$$/ d' -e 's/$$/ :/' < $(SnippetSerialization_checked_DEPDIR).d >> $(addprefix $(DEPSDIR)/SnippetSerialization/checked/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cpp.o,.cpp, $(subst $(SnippetSerialization_checked_objsdir),, $@))), $(SnippetSerialization_cppfiles))))).P; \
	  rm -f $(SnippetSerialization_checked_DEPDIR).d

$(SnippetSerialization_checked_cc_o): $(SnippetSerialization_checked_objsdir)/%.o:
	$(ECHO) SnippetSerialization: compiling checked $(filter %$(strip $(subst .cc.o,.cc, $(subst $(SnippetSerialization_checked_objsdir),, $@))), $(SnippetSerialization_ccfiles))...
	mkdir -p $(dir $(@))
	$(CXX) $(SnippetSerialization_checked_cppflags) -c $(filter %$(strip $(subst .cc.o,.cc, $(subst $(SnippetSerialization_checked_objsdir),, $@))), $(SnippetSerialization_ccfiles)) -o $@
	mkdir -p $(dir $(addprefix $(DEPSDIR)/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cc.o,.cc, $(subst $(SnippetSerialization_checked_objsdir),, $@))), $(SnippetSerialization_ccfiles))))))
	cp $(SnippetSerialization_checked_DEPDIR).d $(addprefix $(DEPSDIR)/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cc.o,.cc, $(subst $(SnippetSerialization_checked_objsdir),, $@))), $(SnippetSerialization_ccfiles))))).checked.P; \
	  sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' \
		-e '/^$$/ d' -e 's/$$/ :/' < $(SnippetSerialization_checked_DEPDIR).d >> $(addprefix $(DEPSDIR)/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cc.o,.cc, $(subst $(SnippetSerialization_checked_objsdir),, $@))), $(SnippetSerialization_ccfiles))))).checked.P; \
	  rm -f $(SnippetSerialization_checked_DEPDIR).d

$(SnippetSerialization_checked_c_o): $(SnippetSerialization_checked_objsdir)/%.o:
	$(ECHO) SnippetSerialization: compiling checked $(filter %$(strip $(subst .c.o,.c, $(subst $(SnippetSerialization_checked_objsdir),, $@))), $(SnippetSerialization_cfiles))...
	mkdir -p $(dir $(@))
	$(CC) $(SnippetSerialization_checked_cflags) -c $(filter %$(strip $(subst .c.o,.c, $(subst $(SnippetSerialization_checked_objsdir),, $@))), $(SnippetSerialization_cfiles)) -o $@ 
	@mkdir -p $(dir $(addprefix $(DEPSDIR)/SnippetSerialization/checked/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .c.o,.c, $(subst $(SnippetSerialization_checked_objsdir),, $@))), $(SnippetSerialization_cfiles))))))
	cp $(SnippetSerialization_checked_DEPDIR).d $(addprefix $(DEPSDIR)/SnippetSerialization/checked/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .c.o,.c, $(subst $(SnippetSerialization_checked_objsdir),, $@))), $(SnippetSerialization_cfiles))))).P; \
	  sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' \
		-e '/^$$/ d' -e 's/$$/ :/' < $(SnippetSerialization_checked_DEPDIR).d >> $(addprefix $(DEPSDIR)/SnippetSerialization/checked/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .c.o,.c, $(subst $(SnippetSerialization_checked_objsdir),, $@))), $(SnippetSerialization_cfiles))))).P; \
	  rm -f $(SnippetSerialization_checked_DEPDIR).d

SnippetSerialization_profile_hpaths    := 
SnippetSerialization_profile_hpaths    += ./../../../Include
SnippetSerialization_profile_lpaths    := 
SnippetSerialization_profile_lpaths    += ./../../../Lib/linux32
SnippetSerialization_profile_lpaths    += ./../../lib/linux32
SnippetSerialization_profile_lpaths    += ./../../../Bin/linux32
SnippetSerialization_profile_lpaths    += ./../../lib/linux32
SnippetSerialization_profile_defines   := $(SnippetSerialization_custom_defines)
SnippetSerialization_profile_defines   += PHYSX_PROFILE_SDK
SnippetSerialization_profile_defines   += RENDER_SNIPPET
SnippetSerialization_profile_defines   += NDEBUG
SnippetSerialization_profile_defines   += PX_PROFILE
SnippetSerialization_profile_defines   += PX_SUPPORT_VISUAL_DEBUGGER
SnippetSerialization_profile_libraries := 
SnippetSerialization_profile_libraries += SnippetRenderPROFILE
SnippetSerialization_profile_libraries += SnippetUtilsPROFILE
SnippetSerialization_profile_libraries += PhysX3PROFILE_x86
SnippetSerialization_profile_libraries += PhysX3CommonPROFILE_x86
SnippetSerialization_profile_libraries += PhysX3CookingPROFILE_x86
SnippetSerialization_profile_libraries += PhysX3CharacterKinematicPROFILE_x86
SnippetSerialization_profile_libraries += PhysX3ExtensionsPROFILE
SnippetSerialization_profile_libraries += PhysX3VehiclePROFILE
SnippetSerialization_profile_libraries += PhysXProfileSDKPROFILE
SnippetSerialization_profile_libraries += PhysXVisualDebuggerSDKPROFILE
SnippetSerialization_profile_libraries += PxTaskPROFILE
SnippetSerialization_profile_libraries += SnippetUtilsPROFILE
SnippetSerialization_profile_libraries += SnippetRenderPROFILE
SnippetSerialization_profile_libraries += GL
SnippetSerialization_profile_libraries += GLU
SnippetSerialization_profile_libraries += glut
SnippetSerialization_profile_libraries += X11
SnippetSerialization_profile_libraries += rt
SnippetSerialization_profile_libraries += pthread
SnippetSerialization_profile_common_cflags	:= $(SnippetSerialization_custom_cflags)
SnippetSerialization_profile_common_cflags    += -MMD
SnippetSerialization_profile_common_cflags    += $(addprefix -D, $(SnippetSerialization_profile_defines))
SnippetSerialization_profile_common_cflags    += $(addprefix -I, $(SnippetSerialization_profile_hpaths))
SnippetSerialization_profile_common_cflags  += -m32
SnippetSerialization_profile_common_cflags  += -Werror -m32 -fPIC -msse2 -mfpmath=sse -malign-double -ffast-math -fno-exceptions -fno-rtti -fvisibility=hidden -fvisibility-inlines-hidden
SnippetSerialization_profile_common_cflags  += -Wall -Wextra -Wstrict-aliasing=2 -fdiagnostics-show-option
SnippetSerialization_profile_common_cflags  += -Wno-long-long
SnippetSerialization_profile_common_cflags  += -Wno-unknown-pragmas -Wno-invalid-offsetof -Wno-uninitialized
SnippetSerialization_profile_common_cflags  += -Wno-unused-parameter
SnippetSerialization_profile_common_cflags  += -O3 -fno-strict-aliasing
SnippetSerialization_profile_cflags	:= $(SnippetSerialization_profile_common_cflags)
SnippetSerialization_profile_cppflags	:= $(SnippetSerialization_profile_common_cflags)
SnippetSerialization_profile_lflags    := $(SnippetSerialization_custom_lflags)
SnippetSerialization_profile_lflags    += $(addprefix -L, $(SnippetSerialization_profile_lpaths))
SnippetSerialization_profile_lflags    += -Wl,--start-group $(addprefix -l, $(SnippetSerialization_profile_libraries)) -Wl,--end-group
SnippetSerialization_profile_lflags  += -lrt
SnippetSerialization_profile_lflags  += -Wl,-rpath ./
SnippetSerialization_profile_lflags  += -m32
SnippetSerialization_profile_objsdir  = $(OBJS_DIR)/SnippetSerialization_profile
SnippetSerialization_profile_cpp_o    = $(addprefix $(SnippetSerialization_profile_objsdir)/, $(subst ./, , $(subst ../, , $(patsubst %.cpp, %.cpp.o, $(SnippetSerialization_cppfiles)))))
SnippetSerialization_profile_cc_o    = $(addprefix $(SnippetSerialization_profile_objsdir)/, $(subst ./, , $(subst ../, , $(patsubst %.cc, %.cc.o, $(SnippetSerialization_ccfiles)))))
SnippetSerialization_profile_c_o      = $(addprefix $(SnippetSerialization_profile_objsdir)/, $(subst ./, , $(subst ../, , $(patsubst %.c, %.c.o, $(SnippetSerialization_cfiles)))))
SnippetSerialization_profile_obj      = $(SnippetSerialization_profile_cpp_o) $(SnippetSerialization_profile_cc_o) $(SnippetSerialization_profile_c_o)
SnippetSerialization_profile_bin      := ./../../../Bin/linux32/SnippetSerializationPROFILE

clean_SnippetSerialization_profile: 
	@$(ECHO) clean SnippetSerialization profile
	@$(RMDIR) $(SnippetSerialization_profile_objsdir)
	@$(RMDIR) $(SnippetSerialization_profile_bin)
	@$(RMDIR) $(DEPSDIR)/SnippetSerialization/profile

build_SnippetSerialization_profile: postbuild_SnippetSerialization_profile
postbuild_SnippetSerialization_profile: mainbuild_SnippetSerialization_profile
mainbuild_SnippetSerialization_profile: prebuild_SnippetSerialization_profile $(SnippetSerialization_profile_bin)
prebuild_SnippetSerialization_profile:

$(SnippetSerialization_profile_bin): $(SnippetSerialization_profile_obj) build_SnippetRender_profile build_SnippetUtils_profile 
	mkdir -p `dirname ./../../../Bin/linux32/SnippetSerializationPROFILE`
	$(CCLD) $(SnippetSerialization_profile_obj) $(SnippetSerialization_profile_lflags) -o $(SnippetSerialization_profile_bin) 
	$(ECHO) building $@ complete!

SnippetSerialization_profile_DEPDIR = $(dir $(@))/$(*F)
$(SnippetSerialization_profile_cpp_o): $(SnippetSerialization_profile_objsdir)/%.o:
	$(ECHO) SnippetSerialization: compiling profile $(filter %$(strip $(subst .cpp.o,.cpp, $(subst $(SnippetSerialization_profile_objsdir),, $@))), $(SnippetSerialization_cppfiles))...
	mkdir -p $(dir $(@))
	$(CXX) $(SnippetSerialization_profile_cppflags) -c $(filter %$(strip $(subst .cpp.o,.cpp, $(subst $(SnippetSerialization_profile_objsdir),, $@))), $(SnippetSerialization_cppfiles)) -o $@
	@mkdir -p $(dir $(addprefix $(DEPSDIR)/SnippetSerialization/profile/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cpp.o,.cpp, $(subst $(SnippetSerialization_profile_objsdir),, $@))), $(SnippetSerialization_cppfiles))))))
	cp $(SnippetSerialization_profile_DEPDIR).d $(addprefix $(DEPSDIR)/SnippetSerialization/profile/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cpp.o,.cpp, $(subst $(SnippetSerialization_profile_objsdir),, $@))), $(SnippetSerialization_cppfiles))))).P; \
	  sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' \
		-e '/^$$/ d' -e 's/$$/ :/' < $(SnippetSerialization_profile_DEPDIR).d >> $(addprefix $(DEPSDIR)/SnippetSerialization/profile/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cpp.o,.cpp, $(subst $(SnippetSerialization_profile_objsdir),, $@))), $(SnippetSerialization_cppfiles))))).P; \
	  rm -f $(SnippetSerialization_profile_DEPDIR).d

$(SnippetSerialization_profile_cc_o): $(SnippetSerialization_profile_objsdir)/%.o:
	$(ECHO) SnippetSerialization: compiling profile $(filter %$(strip $(subst .cc.o,.cc, $(subst $(SnippetSerialization_profile_objsdir),, $@))), $(SnippetSerialization_ccfiles))...
	mkdir -p $(dir $(@))
	$(CXX) $(SnippetSerialization_profile_cppflags) -c $(filter %$(strip $(subst .cc.o,.cc, $(subst $(SnippetSerialization_profile_objsdir),, $@))), $(SnippetSerialization_ccfiles)) -o $@
	mkdir -p $(dir $(addprefix $(DEPSDIR)/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cc.o,.cc, $(subst $(SnippetSerialization_profile_objsdir),, $@))), $(SnippetSerialization_ccfiles))))))
	cp $(SnippetSerialization_profile_DEPDIR).d $(addprefix $(DEPSDIR)/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cc.o,.cc, $(subst $(SnippetSerialization_profile_objsdir),, $@))), $(SnippetSerialization_ccfiles))))).profile.P; \
	  sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' \
		-e '/^$$/ d' -e 's/$$/ :/' < $(SnippetSerialization_profile_DEPDIR).d >> $(addprefix $(DEPSDIR)/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cc.o,.cc, $(subst $(SnippetSerialization_profile_objsdir),, $@))), $(SnippetSerialization_ccfiles))))).profile.P; \
	  rm -f $(SnippetSerialization_profile_DEPDIR).d

$(SnippetSerialization_profile_c_o): $(SnippetSerialization_profile_objsdir)/%.o:
	$(ECHO) SnippetSerialization: compiling profile $(filter %$(strip $(subst .c.o,.c, $(subst $(SnippetSerialization_profile_objsdir),, $@))), $(SnippetSerialization_cfiles))...
	mkdir -p $(dir $(@))
	$(CC) $(SnippetSerialization_profile_cflags) -c $(filter %$(strip $(subst .c.o,.c, $(subst $(SnippetSerialization_profile_objsdir),, $@))), $(SnippetSerialization_cfiles)) -o $@ 
	@mkdir -p $(dir $(addprefix $(DEPSDIR)/SnippetSerialization/profile/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .c.o,.c, $(subst $(SnippetSerialization_profile_objsdir),, $@))), $(SnippetSerialization_cfiles))))))
	cp $(SnippetSerialization_profile_DEPDIR).d $(addprefix $(DEPSDIR)/SnippetSerialization/profile/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .c.o,.c, $(subst $(SnippetSerialization_profile_objsdir),, $@))), $(SnippetSerialization_cfiles))))).P; \
	  sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' \
		-e '/^$$/ d' -e 's/$$/ :/' < $(SnippetSerialization_profile_DEPDIR).d >> $(addprefix $(DEPSDIR)/SnippetSerialization/profile/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .c.o,.c, $(subst $(SnippetSerialization_profile_objsdir),, $@))), $(SnippetSerialization_cfiles))))).P; \
	  rm -f $(SnippetSerialization_profile_DEPDIR).d

SnippetSerialization_release_hpaths    := 
SnippetSerialization_release_hpaths    += ./../../../Include
SnippetSerialization_release_lpaths    := 
SnippetSerialization_release_lpaths    += ./../../../Lib/linux32
SnippetSerialization_release_lpaths    += ./../../lib/linux32
SnippetSerialization_release_lpaths    += ./../../../Bin/linux32
SnippetSerialization_release_lpaths    += ./../../lib/linux32
SnippetSerialization_release_defines   := $(SnippetSerialization_custom_defines)
SnippetSerialization_release_defines   += PHYSX_PROFILE_SDK
SnippetSerialization_release_defines   += RENDER_SNIPPET
SnippetSerialization_release_defines   += NDEBUG
SnippetSerialization_release_libraries := 
SnippetSerialization_release_libraries += SnippetRender
SnippetSerialization_release_libraries += SnippetUtils
SnippetSerialization_release_libraries += PhysX3_x86
SnippetSerialization_release_libraries += PhysX3Common_x86
SnippetSerialization_release_libraries += PhysX3Cooking_x86
SnippetSerialization_release_libraries += PhysX3CharacterKinematic_x86
SnippetSerialization_release_libraries += PhysX3Extensions
SnippetSerialization_release_libraries += PhysX3Vehicle
SnippetSerialization_release_libraries += PhysXProfileSDK
SnippetSerialization_release_libraries += PhysXVisualDebuggerSDK
SnippetSerialization_release_libraries += PxTask
SnippetSerialization_release_libraries += SnippetUtils
SnippetSerialization_release_libraries += SnippetRender
SnippetSerialization_release_libraries += GL
SnippetSerialization_release_libraries += GLU
SnippetSerialization_release_libraries += glut
SnippetSerialization_release_libraries += X11
SnippetSerialization_release_libraries += rt
SnippetSerialization_release_libraries += pthread
SnippetSerialization_release_common_cflags	:= $(SnippetSerialization_custom_cflags)
SnippetSerialization_release_common_cflags    += -MMD
SnippetSerialization_release_common_cflags    += $(addprefix -D, $(SnippetSerialization_release_defines))
SnippetSerialization_release_common_cflags    += $(addprefix -I, $(SnippetSerialization_release_hpaths))
SnippetSerialization_release_common_cflags  += -m32
SnippetSerialization_release_common_cflags  += -Werror -m32 -fPIC -msse2 -mfpmath=sse -malign-double -ffast-math -fno-exceptions -fno-rtti -fvisibility=hidden -fvisibility-inlines-hidden
SnippetSerialization_release_common_cflags  += -Wall -Wextra -Wstrict-aliasing=2 -fdiagnostics-show-option
SnippetSerialization_release_common_cflags  += -Wno-long-long
SnippetSerialization_release_common_cflags  += -Wno-unknown-pragmas -Wno-invalid-offsetof -Wno-uninitialized
SnippetSerialization_release_common_cflags  += -Wno-unused-parameter
SnippetSerialization_release_common_cflags  += -O3 -fno-strict-aliasing
SnippetSerialization_release_cflags	:= $(SnippetSerialization_release_common_cflags)
SnippetSerialization_release_cppflags	:= $(SnippetSerialization_release_common_cflags)
SnippetSerialization_release_lflags    := $(SnippetSerialization_custom_lflags)
SnippetSerialization_release_lflags    += $(addprefix -L, $(SnippetSerialization_release_lpaths))
SnippetSerialization_release_lflags    += -Wl,--start-group $(addprefix -l, $(SnippetSerialization_release_libraries)) -Wl,--end-group
SnippetSerialization_release_lflags  += -lrt
SnippetSerialization_release_lflags  += -Wl,-rpath ./
SnippetSerialization_release_lflags  += -m32
SnippetSerialization_release_objsdir  = $(OBJS_DIR)/SnippetSerialization_release
SnippetSerialization_release_cpp_o    = $(addprefix $(SnippetSerialization_release_objsdir)/, $(subst ./, , $(subst ../, , $(patsubst %.cpp, %.cpp.o, $(SnippetSerialization_cppfiles)))))
SnippetSerialization_release_cc_o    = $(addprefix $(SnippetSerialization_release_objsdir)/, $(subst ./, , $(subst ../, , $(patsubst %.cc, %.cc.o, $(SnippetSerialization_ccfiles)))))
SnippetSerialization_release_c_o      = $(addprefix $(SnippetSerialization_release_objsdir)/, $(subst ./, , $(subst ../, , $(patsubst %.c, %.c.o, $(SnippetSerialization_cfiles)))))
SnippetSerialization_release_obj      = $(SnippetSerialization_release_cpp_o) $(SnippetSerialization_release_cc_o) $(SnippetSerialization_release_c_o)
SnippetSerialization_release_bin      := ./../../../Bin/linux32/SnippetSerialization

clean_SnippetSerialization_release: 
	@$(ECHO) clean SnippetSerialization release
	@$(RMDIR) $(SnippetSerialization_release_objsdir)
	@$(RMDIR) $(SnippetSerialization_release_bin)
	@$(RMDIR) $(DEPSDIR)/SnippetSerialization/release

build_SnippetSerialization_release: postbuild_SnippetSerialization_release
postbuild_SnippetSerialization_release: mainbuild_SnippetSerialization_release
mainbuild_SnippetSerialization_release: prebuild_SnippetSerialization_release $(SnippetSerialization_release_bin)
prebuild_SnippetSerialization_release:

$(SnippetSerialization_release_bin): $(SnippetSerialization_release_obj) build_SnippetRender_release build_SnippetUtils_release 
	mkdir -p `dirname ./../../../Bin/linux32/SnippetSerialization`
	$(CCLD) $(SnippetSerialization_release_obj) $(SnippetSerialization_release_lflags) -o $(SnippetSerialization_release_bin) 
	$(ECHO) building $@ complete!

SnippetSerialization_release_DEPDIR = $(dir $(@))/$(*F)
$(SnippetSerialization_release_cpp_o): $(SnippetSerialization_release_objsdir)/%.o:
	$(ECHO) SnippetSerialization: compiling release $(filter %$(strip $(subst .cpp.o,.cpp, $(subst $(SnippetSerialization_release_objsdir),, $@))), $(SnippetSerialization_cppfiles))...
	mkdir -p $(dir $(@))
	$(CXX) $(SnippetSerialization_release_cppflags) -c $(filter %$(strip $(subst .cpp.o,.cpp, $(subst $(SnippetSerialization_release_objsdir),, $@))), $(SnippetSerialization_cppfiles)) -o $@
	@mkdir -p $(dir $(addprefix $(DEPSDIR)/SnippetSerialization/release/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cpp.o,.cpp, $(subst $(SnippetSerialization_release_objsdir),, $@))), $(SnippetSerialization_cppfiles))))))
	cp $(SnippetSerialization_release_DEPDIR).d $(addprefix $(DEPSDIR)/SnippetSerialization/release/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cpp.o,.cpp, $(subst $(SnippetSerialization_release_objsdir),, $@))), $(SnippetSerialization_cppfiles))))).P; \
	  sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' \
		-e '/^$$/ d' -e 's/$$/ :/' < $(SnippetSerialization_release_DEPDIR).d >> $(addprefix $(DEPSDIR)/SnippetSerialization/release/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cpp.o,.cpp, $(subst $(SnippetSerialization_release_objsdir),, $@))), $(SnippetSerialization_cppfiles))))).P; \
	  rm -f $(SnippetSerialization_release_DEPDIR).d

$(SnippetSerialization_release_cc_o): $(SnippetSerialization_release_objsdir)/%.o:
	$(ECHO) SnippetSerialization: compiling release $(filter %$(strip $(subst .cc.o,.cc, $(subst $(SnippetSerialization_release_objsdir),, $@))), $(SnippetSerialization_ccfiles))...
	mkdir -p $(dir $(@))
	$(CXX) $(SnippetSerialization_release_cppflags) -c $(filter %$(strip $(subst .cc.o,.cc, $(subst $(SnippetSerialization_release_objsdir),, $@))), $(SnippetSerialization_ccfiles)) -o $@
	mkdir -p $(dir $(addprefix $(DEPSDIR)/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cc.o,.cc, $(subst $(SnippetSerialization_release_objsdir),, $@))), $(SnippetSerialization_ccfiles))))))
	cp $(SnippetSerialization_release_DEPDIR).d $(addprefix $(DEPSDIR)/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cc.o,.cc, $(subst $(SnippetSerialization_release_objsdir),, $@))), $(SnippetSerialization_ccfiles))))).release.P; \
	  sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' \
		-e '/^$$/ d' -e 's/$$/ :/' < $(SnippetSerialization_release_DEPDIR).d >> $(addprefix $(DEPSDIR)/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cc.o,.cc, $(subst $(SnippetSerialization_release_objsdir),, $@))), $(SnippetSerialization_ccfiles))))).release.P; \
	  rm -f $(SnippetSerialization_release_DEPDIR).d

$(SnippetSerialization_release_c_o): $(SnippetSerialization_release_objsdir)/%.o:
	$(ECHO) SnippetSerialization: compiling release $(filter %$(strip $(subst .c.o,.c, $(subst $(SnippetSerialization_release_objsdir),, $@))), $(SnippetSerialization_cfiles))...
	mkdir -p $(dir $(@))
	$(CC) $(SnippetSerialization_release_cflags) -c $(filter %$(strip $(subst .c.o,.c, $(subst $(SnippetSerialization_release_objsdir),, $@))), $(SnippetSerialization_cfiles)) -o $@ 
	@mkdir -p $(dir $(addprefix $(DEPSDIR)/SnippetSerialization/release/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .c.o,.c, $(subst $(SnippetSerialization_release_objsdir),, $@))), $(SnippetSerialization_cfiles))))))
	cp $(SnippetSerialization_release_DEPDIR).d $(addprefix $(DEPSDIR)/SnippetSerialization/release/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .c.o,.c, $(subst $(SnippetSerialization_release_objsdir),, $@))), $(SnippetSerialization_cfiles))))).P; \
	  sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' \
		-e '/^$$/ d' -e 's/$$/ :/' < $(SnippetSerialization_release_DEPDIR).d >> $(addprefix $(DEPSDIR)/SnippetSerialization/release/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .c.o,.c, $(subst $(SnippetSerialization_release_objsdir),, $@))), $(SnippetSerialization_cfiles))))).P; \
	  rm -f $(SnippetSerialization_release_DEPDIR).d

clean_SnippetSerialization:  clean_SnippetSerialization_debug clean_SnippetSerialization_checked clean_SnippetSerialization_profile clean_SnippetSerialization_release
	rm -rf $(DEPSDIR)

export VERBOSE
ifndef VERBOSE
.SILENT:
endif
