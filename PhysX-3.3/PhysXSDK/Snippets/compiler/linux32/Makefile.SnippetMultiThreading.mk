# Makefile generated by XPJ for linux32
-include Makefile.custom
ProjectName = SnippetMultiThreading
SnippetMultiThreading_cppfiles   += ./../../SnippetCommon/ClassicMain.cpp
SnippetMultiThreading_cppfiles   += ./../../SnippetMultiThreading/SnippetMultiThreading.cpp

SnippetMultiThreading_cpp_debug_dep    = $(addprefix $(DEPSDIR)/SnippetMultiThreading/debug/, $(subst ./, , $(subst ../, , $(patsubst %.cpp, %.cpp.P, $(SnippetMultiThreading_cppfiles)))))
SnippetMultiThreading_cc_debug_dep    = $(addprefix $(DEPSDIR)/, $(subst ./, , $(subst ../, , $(patsubst %.cc, %.cc.debug.P, $(SnippetMultiThreading_ccfiles)))))
SnippetMultiThreading_c_debug_dep      = $(addprefix $(DEPSDIR)/SnippetMultiThreading/debug/, $(subst ./, , $(subst ../, , $(patsubst %.c, %.c.P, $(SnippetMultiThreading_cfiles)))))
SnippetMultiThreading_debug_dep      = $(SnippetMultiThreading_cpp_debug_dep) $(SnippetMultiThreading_cc_debug_dep) $(SnippetMultiThreading_c_debug_dep)
-include $(SnippetMultiThreading_debug_dep)
SnippetMultiThreading_cpp_checked_dep    = $(addprefix $(DEPSDIR)/SnippetMultiThreading/checked/, $(subst ./, , $(subst ../, , $(patsubst %.cpp, %.cpp.P, $(SnippetMultiThreading_cppfiles)))))
SnippetMultiThreading_cc_checked_dep    = $(addprefix $(DEPSDIR)/, $(subst ./, , $(subst ../, , $(patsubst %.cc, %.cc.checked.P, $(SnippetMultiThreading_ccfiles)))))
SnippetMultiThreading_c_checked_dep      = $(addprefix $(DEPSDIR)/SnippetMultiThreading/checked/, $(subst ./, , $(subst ../, , $(patsubst %.c, %.c.P, $(SnippetMultiThreading_cfiles)))))
SnippetMultiThreading_checked_dep      = $(SnippetMultiThreading_cpp_checked_dep) $(SnippetMultiThreading_cc_checked_dep) $(SnippetMultiThreading_c_checked_dep)
-include $(SnippetMultiThreading_checked_dep)
SnippetMultiThreading_cpp_profile_dep    = $(addprefix $(DEPSDIR)/SnippetMultiThreading/profile/, $(subst ./, , $(subst ../, , $(patsubst %.cpp, %.cpp.P, $(SnippetMultiThreading_cppfiles)))))
SnippetMultiThreading_cc_profile_dep    = $(addprefix $(DEPSDIR)/, $(subst ./, , $(subst ../, , $(patsubst %.cc, %.cc.profile.P, $(SnippetMultiThreading_ccfiles)))))
SnippetMultiThreading_c_profile_dep      = $(addprefix $(DEPSDIR)/SnippetMultiThreading/profile/, $(subst ./, , $(subst ../, , $(patsubst %.c, %.c.P, $(SnippetMultiThreading_cfiles)))))
SnippetMultiThreading_profile_dep      = $(SnippetMultiThreading_cpp_profile_dep) $(SnippetMultiThreading_cc_profile_dep) $(SnippetMultiThreading_c_profile_dep)
-include $(SnippetMultiThreading_profile_dep)
SnippetMultiThreading_cpp_release_dep    = $(addprefix $(DEPSDIR)/SnippetMultiThreading/release/, $(subst ./, , $(subst ../, , $(patsubst %.cpp, %.cpp.P, $(SnippetMultiThreading_cppfiles)))))
SnippetMultiThreading_cc_release_dep    = $(addprefix $(DEPSDIR)/, $(subst ./, , $(subst ../, , $(patsubst %.cc, %.cc.release.P, $(SnippetMultiThreading_ccfiles)))))
SnippetMultiThreading_c_release_dep      = $(addprefix $(DEPSDIR)/SnippetMultiThreading/release/, $(subst ./, , $(subst ../, , $(patsubst %.c, %.c.P, $(SnippetMultiThreading_cfiles)))))
SnippetMultiThreading_release_dep      = $(SnippetMultiThreading_cpp_release_dep) $(SnippetMultiThreading_cc_release_dep) $(SnippetMultiThreading_c_release_dep)
-include $(SnippetMultiThreading_release_dep)
SnippetMultiThreading_debug_hpaths    := 
SnippetMultiThreading_debug_hpaths    += ./../../../Include
SnippetMultiThreading_debug_lpaths    := 
SnippetMultiThreading_debug_lpaths    += ./../../../Lib/linux32
SnippetMultiThreading_debug_lpaths    += ./../../lib/linux32
SnippetMultiThreading_debug_lpaths    += ./../../../Bin/linux32
SnippetMultiThreading_debug_lpaths    += ./../../lib/linux32
SnippetMultiThreading_debug_defines   := $(SnippetMultiThreading_custom_defines)
SnippetMultiThreading_debug_defines   += PHYSX_PROFILE_SDK
SnippetMultiThreading_debug_defines   += RENDER_SNIPPET
SnippetMultiThreading_debug_defines   += _DEBUG
SnippetMultiThreading_debug_defines   += PX_DEBUG
SnippetMultiThreading_debug_defines   += PX_CHECKED
SnippetMultiThreading_debug_defines   += PX_SUPPORT_VISUAL_DEBUGGER
SnippetMultiThreading_debug_libraries := 
SnippetMultiThreading_debug_libraries += SnippetRenderDEBUG
SnippetMultiThreading_debug_libraries += SnippetUtilsDEBUG
SnippetMultiThreading_debug_libraries += PhysX3DEBUG_x86
SnippetMultiThreading_debug_libraries += PhysX3CommonDEBUG_x86
SnippetMultiThreading_debug_libraries += PhysX3CookingDEBUG_x86
SnippetMultiThreading_debug_libraries += PhysX3CharacterKinematicDEBUG_x86
SnippetMultiThreading_debug_libraries += PhysX3ExtensionsDEBUG
SnippetMultiThreading_debug_libraries += PhysX3VehicleDEBUG
SnippetMultiThreading_debug_libraries += PhysXProfileSDKDEBUG
SnippetMultiThreading_debug_libraries += PhysXVisualDebuggerSDKDEBUG
SnippetMultiThreading_debug_libraries += PxTaskDEBUG
SnippetMultiThreading_debug_libraries += SnippetUtilsDEBUG
SnippetMultiThreading_debug_libraries += SnippetRenderDEBUG
SnippetMultiThreading_debug_libraries += GL
SnippetMultiThreading_debug_libraries += GLU
SnippetMultiThreading_debug_libraries += glut
SnippetMultiThreading_debug_libraries += X11
SnippetMultiThreading_debug_libraries += rt
SnippetMultiThreading_debug_libraries += pthread
SnippetMultiThreading_debug_common_cflags	:= $(SnippetMultiThreading_custom_cflags)
SnippetMultiThreading_debug_common_cflags    += -MMD
SnippetMultiThreading_debug_common_cflags    += $(addprefix -D, $(SnippetMultiThreading_debug_defines))
SnippetMultiThreading_debug_common_cflags    += $(addprefix -I, $(SnippetMultiThreading_debug_hpaths))
SnippetMultiThreading_debug_common_cflags  += -m32
SnippetMultiThreading_debug_common_cflags  += -Werror -m32 -fPIC -msse2 -mfpmath=sse -malign-double -ffast-math -fno-exceptions -fno-rtti -fvisibility=hidden -fvisibility-inlines-hidden
SnippetMultiThreading_debug_common_cflags  += -Wall -Wextra -Wstrict-aliasing=2 -fdiagnostics-show-option
SnippetMultiThreading_debug_common_cflags  += -Wno-long-long
SnippetMultiThreading_debug_common_cflags  += -Wno-unknown-pragmas -Wno-invalid-offsetof -Wno-uninitialized
SnippetMultiThreading_debug_common_cflags  += -Wno-unused-parameter
SnippetMultiThreading_debug_common_cflags  += -g3 -gdwarf-2
SnippetMultiThreading_debug_cflags	:= $(SnippetMultiThreading_debug_common_cflags)
SnippetMultiThreading_debug_cppflags	:= $(SnippetMultiThreading_debug_common_cflags)
SnippetMultiThreading_debug_lflags    := $(SnippetMultiThreading_custom_lflags)
SnippetMultiThreading_debug_lflags    += $(addprefix -L, $(SnippetMultiThreading_debug_lpaths))
SnippetMultiThreading_debug_lflags    += -Wl,--start-group $(addprefix -l, $(SnippetMultiThreading_debug_libraries)) -Wl,--end-group
SnippetMultiThreading_debug_lflags  += -lrt
SnippetMultiThreading_debug_lflags  += -Wl,-rpath ./
SnippetMultiThreading_debug_lflags  += -m32
SnippetMultiThreading_debug_objsdir  = $(OBJS_DIR)/SnippetMultiThreading_debug
SnippetMultiThreading_debug_cpp_o    = $(addprefix $(SnippetMultiThreading_debug_objsdir)/, $(subst ./, , $(subst ../, , $(patsubst %.cpp, %.cpp.o, $(SnippetMultiThreading_cppfiles)))))
SnippetMultiThreading_debug_cc_o    = $(addprefix $(SnippetMultiThreading_debug_objsdir)/, $(subst ./, , $(subst ../, , $(patsubst %.cc, %.cc.o, $(SnippetMultiThreading_ccfiles)))))
SnippetMultiThreading_debug_c_o      = $(addprefix $(SnippetMultiThreading_debug_objsdir)/, $(subst ./, , $(subst ../, , $(patsubst %.c, %.c.o, $(SnippetMultiThreading_cfiles)))))
SnippetMultiThreading_debug_obj      = $(SnippetMultiThreading_debug_cpp_o) $(SnippetMultiThreading_debug_cc_o) $(SnippetMultiThreading_debug_c_o)
SnippetMultiThreading_debug_bin      := ./../../../Bin/linux32/SnippetMultiThreadingDEBUG

clean_SnippetMultiThreading_debug: 
	@$(ECHO) clean SnippetMultiThreading debug
	@$(RMDIR) $(SnippetMultiThreading_debug_objsdir)
	@$(RMDIR) $(SnippetMultiThreading_debug_bin)
	@$(RMDIR) $(DEPSDIR)/SnippetMultiThreading/debug

build_SnippetMultiThreading_debug: postbuild_SnippetMultiThreading_debug
postbuild_SnippetMultiThreading_debug: mainbuild_SnippetMultiThreading_debug
mainbuild_SnippetMultiThreading_debug: prebuild_SnippetMultiThreading_debug $(SnippetMultiThreading_debug_bin)
prebuild_SnippetMultiThreading_debug:

$(SnippetMultiThreading_debug_bin): $(SnippetMultiThreading_debug_obj) build_SnippetRender_debug build_SnippetUtils_debug 
	mkdir -p `dirname ./../../../Bin/linux32/SnippetMultiThreadingDEBUG`
	$(CCLD) $(SnippetMultiThreading_debug_obj) $(SnippetMultiThreading_debug_lflags) -o $(SnippetMultiThreading_debug_bin) 
	$(ECHO) building $@ complete!

SnippetMultiThreading_debug_DEPDIR = $(dir $(@))/$(*F)
$(SnippetMultiThreading_debug_cpp_o): $(SnippetMultiThreading_debug_objsdir)/%.o:
	$(ECHO) SnippetMultiThreading: compiling debug $(filter %$(strip $(subst .cpp.o,.cpp, $(subst $(SnippetMultiThreading_debug_objsdir),, $@))), $(SnippetMultiThreading_cppfiles))...
	mkdir -p $(dir $(@))
	$(CXX) $(SnippetMultiThreading_debug_cppflags) -c $(filter %$(strip $(subst .cpp.o,.cpp, $(subst $(SnippetMultiThreading_debug_objsdir),, $@))), $(SnippetMultiThreading_cppfiles)) -o $@
	@mkdir -p $(dir $(addprefix $(DEPSDIR)/SnippetMultiThreading/debug/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cpp.o,.cpp, $(subst $(SnippetMultiThreading_debug_objsdir),, $@))), $(SnippetMultiThreading_cppfiles))))))
	cp $(SnippetMultiThreading_debug_DEPDIR).d $(addprefix $(DEPSDIR)/SnippetMultiThreading/debug/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cpp.o,.cpp, $(subst $(SnippetMultiThreading_debug_objsdir),, $@))), $(SnippetMultiThreading_cppfiles))))).P; \
	  sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' \
		-e '/^$$/ d' -e 's/$$/ :/' < $(SnippetMultiThreading_debug_DEPDIR).d >> $(addprefix $(DEPSDIR)/SnippetMultiThreading/debug/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cpp.o,.cpp, $(subst $(SnippetMultiThreading_debug_objsdir),, $@))), $(SnippetMultiThreading_cppfiles))))).P; \
	  rm -f $(SnippetMultiThreading_debug_DEPDIR).d

$(SnippetMultiThreading_debug_cc_o): $(SnippetMultiThreading_debug_objsdir)/%.o:
	$(ECHO) SnippetMultiThreading: compiling debug $(filter %$(strip $(subst .cc.o,.cc, $(subst $(SnippetMultiThreading_debug_objsdir),, $@))), $(SnippetMultiThreading_ccfiles))...
	mkdir -p $(dir $(@))
	$(CXX) $(SnippetMultiThreading_debug_cppflags) -c $(filter %$(strip $(subst .cc.o,.cc, $(subst $(SnippetMultiThreading_debug_objsdir),, $@))), $(SnippetMultiThreading_ccfiles)) -o $@
	mkdir -p $(dir $(addprefix $(DEPSDIR)/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cc.o,.cc, $(subst $(SnippetMultiThreading_debug_objsdir),, $@))), $(SnippetMultiThreading_ccfiles))))))
	cp $(SnippetMultiThreading_debug_DEPDIR).d $(addprefix $(DEPSDIR)/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cc.o,.cc, $(subst $(SnippetMultiThreading_debug_objsdir),, $@))), $(SnippetMultiThreading_ccfiles))))).debug.P; \
	  sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' \
		-e '/^$$/ d' -e 's/$$/ :/' < $(SnippetMultiThreading_debug_DEPDIR).d >> $(addprefix $(DEPSDIR)/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cc.o,.cc, $(subst $(SnippetMultiThreading_debug_objsdir),, $@))), $(SnippetMultiThreading_ccfiles))))).debug.P; \
	  rm -f $(SnippetMultiThreading_debug_DEPDIR).d

$(SnippetMultiThreading_debug_c_o): $(SnippetMultiThreading_debug_objsdir)/%.o:
	$(ECHO) SnippetMultiThreading: compiling debug $(filter %$(strip $(subst .c.o,.c, $(subst $(SnippetMultiThreading_debug_objsdir),, $@))), $(SnippetMultiThreading_cfiles))...
	mkdir -p $(dir $(@))
	$(CC) $(SnippetMultiThreading_debug_cflags) -c $(filter %$(strip $(subst .c.o,.c, $(subst $(SnippetMultiThreading_debug_objsdir),, $@))), $(SnippetMultiThreading_cfiles)) -o $@ 
	@mkdir -p $(dir $(addprefix $(DEPSDIR)/SnippetMultiThreading/debug/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .c.o,.c, $(subst $(SnippetMultiThreading_debug_objsdir),, $@))), $(SnippetMultiThreading_cfiles))))))
	cp $(SnippetMultiThreading_debug_DEPDIR).d $(addprefix $(DEPSDIR)/SnippetMultiThreading/debug/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .c.o,.c, $(subst $(SnippetMultiThreading_debug_objsdir),, $@))), $(SnippetMultiThreading_cfiles))))).P; \
	  sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' \
		-e '/^$$/ d' -e 's/$$/ :/' < $(SnippetMultiThreading_debug_DEPDIR).d >> $(addprefix $(DEPSDIR)/SnippetMultiThreading/debug/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .c.o,.c, $(subst $(SnippetMultiThreading_debug_objsdir),, $@))), $(SnippetMultiThreading_cfiles))))).P; \
	  rm -f $(SnippetMultiThreading_debug_DEPDIR).d

SnippetMultiThreading_checked_hpaths    := 
SnippetMultiThreading_checked_hpaths    += ./../../../Include
SnippetMultiThreading_checked_lpaths    := 
SnippetMultiThreading_checked_lpaths    += ./../../../Lib/linux32
SnippetMultiThreading_checked_lpaths    += ./../../lib/linux32
SnippetMultiThreading_checked_lpaths    += ./../../../Bin/linux32
SnippetMultiThreading_checked_lpaths    += ./../../lib/linux32
SnippetMultiThreading_checked_defines   := $(SnippetMultiThreading_custom_defines)
SnippetMultiThreading_checked_defines   += PHYSX_PROFILE_SDK
SnippetMultiThreading_checked_defines   += RENDER_SNIPPET
SnippetMultiThreading_checked_defines   += NDEBUG
SnippetMultiThreading_checked_defines   += PX_CHECKED
SnippetMultiThreading_checked_defines   += PX_SUPPORT_VISUAL_DEBUGGER
SnippetMultiThreading_checked_libraries := 
SnippetMultiThreading_checked_libraries += SnippetRenderCHECKED
SnippetMultiThreading_checked_libraries += SnippetUtilsCHECKED
SnippetMultiThreading_checked_libraries += PhysX3CHECKED_x86
SnippetMultiThreading_checked_libraries += PhysX3CommonCHECKED_x86
SnippetMultiThreading_checked_libraries += PhysX3CookingCHECKED_x86
SnippetMultiThreading_checked_libraries += PhysX3CharacterKinematicCHECKED_x86
SnippetMultiThreading_checked_libraries += PhysX3ExtensionsCHECKED
SnippetMultiThreading_checked_libraries += PhysX3VehicleCHECKED
SnippetMultiThreading_checked_libraries += PhysXProfileSDKCHECKED
SnippetMultiThreading_checked_libraries += PhysXVisualDebuggerSDKCHECKED
SnippetMultiThreading_checked_libraries += PxTaskCHECKED
SnippetMultiThreading_checked_libraries += SnippetUtilsCHECKED
SnippetMultiThreading_checked_libraries += SnippetRenderCHECKED
SnippetMultiThreading_checked_libraries += GL
SnippetMultiThreading_checked_libraries += GLU
SnippetMultiThreading_checked_libraries += glut
SnippetMultiThreading_checked_libraries += X11
SnippetMultiThreading_checked_libraries += rt
SnippetMultiThreading_checked_libraries += pthread
SnippetMultiThreading_checked_common_cflags	:= $(SnippetMultiThreading_custom_cflags)
SnippetMultiThreading_checked_common_cflags    += -MMD
SnippetMultiThreading_checked_common_cflags    += $(addprefix -D, $(SnippetMultiThreading_checked_defines))
SnippetMultiThreading_checked_common_cflags    += $(addprefix -I, $(SnippetMultiThreading_checked_hpaths))
SnippetMultiThreading_checked_common_cflags  += -m32
SnippetMultiThreading_checked_common_cflags  += -Werror -m32 -fPIC -msse2 -mfpmath=sse -malign-double -ffast-math -fno-exceptions -fno-rtti -fvisibility=hidden -fvisibility-inlines-hidden
SnippetMultiThreading_checked_common_cflags  += -Wall -Wextra -Wstrict-aliasing=2 -fdiagnostics-show-option
SnippetMultiThreading_checked_common_cflags  += -Wno-long-long
SnippetMultiThreading_checked_common_cflags  += -Wno-unknown-pragmas -Wno-invalid-offsetof -Wno-uninitialized
SnippetMultiThreading_checked_common_cflags  += -Wno-unused-parameter
SnippetMultiThreading_checked_common_cflags  += -g3 -gdwarf-2 -O3 -fno-strict-aliasing
SnippetMultiThreading_checked_cflags	:= $(SnippetMultiThreading_checked_common_cflags)
SnippetMultiThreading_checked_cppflags	:= $(SnippetMultiThreading_checked_common_cflags)
SnippetMultiThreading_checked_lflags    := $(SnippetMultiThreading_custom_lflags)
SnippetMultiThreading_checked_lflags    += $(addprefix -L, $(SnippetMultiThreading_checked_lpaths))
SnippetMultiThreading_checked_lflags    += -Wl,--start-group $(addprefix -l, $(SnippetMultiThreading_checked_libraries)) -Wl,--end-group
SnippetMultiThreading_checked_lflags  += -lrt
SnippetMultiThreading_checked_lflags  += -Wl,-rpath ./
SnippetMultiThreading_checked_lflags  += -m32
SnippetMultiThreading_checked_objsdir  = $(OBJS_DIR)/SnippetMultiThreading_checked
SnippetMultiThreading_checked_cpp_o    = $(addprefix $(SnippetMultiThreading_checked_objsdir)/, $(subst ./, , $(subst ../, , $(patsubst %.cpp, %.cpp.o, $(SnippetMultiThreading_cppfiles)))))
SnippetMultiThreading_checked_cc_o    = $(addprefix $(SnippetMultiThreading_checked_objsdir)/, $(subst ./, , $(subst ../, , $(patsubst %.cc, %.cc.o, $(SnippetMultiThreading_ccfiles)))))
SnippetMultiThreading_checked_c_o      = $(addprefix $(SnippetMultiThreading_checked_objsdir)/, $(subst ./, , $(subst ../, , $(patsubst %.c, %.c.o, $(SnippetMultiThreading_cfiles)))))
SnippetMultiThreading_checked_obj      = $(SnippetMultiThreading_checked_cpp_o) $(SnippetMultiThreading_checked_cc_o) $(SnippetMultiThreading_checked_c_o)
SnippetMultiThreading_checked_bin      := ./../../../Bin/linux32/SnippetMultiThreadingCHECKED

clean_SnippetMultiThreading_checked: 
	@$(ECHO) clean SnippetMultiThreading checked
	@$(RMDIR) $(SnippetMultiThreading_checked_objsdir)
	@$(RMDIR) $(SnippetMultiThreading_checked_bin)
	@$(RMDIR) $(DEPSDIR)/SnippetMultiThreading/checked

build_SnippetMultiThreading_checked: postbuild_SnippetMultiThreading_checked
postbuild_SnippetMultiThreading_checked: mainbuild_SnippetMultiThreading_checked
mainbuild_SnippetMultiThreading_checked: prebuild_SnippetMultiThreading_checked $(SnippetMultiThreading_checked_bin)
prebuild_SnippetMultiThreading_checked:

$(SnippetMultiThreading_checked_bin): $(SnippetMultiThreading_checked_obj) build_SnippetRender_checked build_SnippetUtils_checked 
	mkdir -p `dirname ./../../../Bin/linux32/SnippetMultiThreadingCHECKED`
	$(CCLD) $(SnippetMultiThreading_checked_obj) $(SnippetMultiThreading_checked_lflags) -o $(SnippetMultiThreading_checked_bin) 
	$(ECHO) building $@ complete!

SnippetMultiThreading_checked_DEPDIR = $(dir $(@))/$(*F)
$(SnippetMultiThreading_checked_cpp_o): $(SnippetMultiThreading_checked_objsdir)/%.o:
	$(ECHO) SnippetMultiThreading: compiling checked $(filter %$(strip $(subst .cpp.o,.cpp, $(subst $(SnippetMultiThreading_checked_objsdir),, $@))), $(SnippetMultiThreading_cppfiles))...
	mkdir -p $(dir $(@))
	$(CXX) $(SnippetMultiThreading_checked_cppflags) -c $(filter %$(strip $(subst .cpp.o,.cpp, $(subst $(SnippetMultiThreading_checked_objsdir),, $@))), $(SnippetMultiThreading_cppfiles)) -o $@
	@mkdir -p $(dir $(addprefix $(DEPSDIR)/SnippetMultiThreading/checked/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cpp.o,.cpp, $(subst $(SnippetMultiThreading_checked_objsdir),, $@))), $(SnippetMultiThreading_cppfiles))))))
	cp $(SnippetMultiThreading_checked_DEPDIR).d $(addprefix $(DEPSDIR)/SnippetMultiThreading/checked/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cpp.o,.cpp, $(subst $(SnippetMultiThreading_checked_objsdir),, $@))), $(SnippetMultiThreading_cppfiles))))).P; \
	  sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' \
		-e '/^$$/ d' -e 's/$$/ :/' < $(SnippetMultiThreading_checked_DEPDIR).d >> $(addprefix $(DEPSDIR)/SnippetMultiThreading/checked/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cpp.o,.cpp, $(subst $(SnippetMultiThreading_checked_objsdir),, $@))), $(SnippetMultiThreading_cppfiles))))).P; \
	  rm -f $(SnippetMultiThreading_checked_DEPDIR).d

$(SnippetMultiThreading_checked_cc_o): $(SnippetMultiThreading_checked_objsdir)/%.o:
	$(ECHO) SnippetMultiThreading: compiling checked $(filter %$(strip $(subst .cc.o,.cc, $(subst $(SnippetMultiThreading_checked_objsdir),, $@))), $(SnippetMultiThreading_ccfiles))...
	mkdir -p $(dir $(@))
	$(CXX) $(SnippetMultiThreading_checked_cppflags) -c $(filter %$(strip $(subst .cc.o,.cc, $(subst $(SnippetMultiThreading_checked_objsdir),, $@))), $(SnippetMultiThreading_ccfiles)) -o $@
	mkdir -p $(dir $(addprefix $(DEPSDIR)/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cc.o,.cc, $(subst $(SnippetMultiThreading_checked_objsdir),, $@))), $(SnippetMultiThreading_ccfiles))))))
	cp $(SnippetMultiThreading_checked_DEPDIR).d $(addprefix $(DEPSDIR)/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cc.o,.cc, $(subst $(SnippetMultiThreading_checked_objsdir),, $@))), $(SnippetMultiThreading_ccfiles))))).checked.P; \
	  sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' \
		-e '/^$$/ d' -e 's/$$/ :/' < $(SnippetMultiThreading_checked_DEPDIR).d >> $(addprefix $(DEPSDIR)/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cc.o,.cc, $(subst $(SnippetMultiThreading_checked_objsdir),, $@))), $(SnippetMultiThreading_ccfiles))))).checked.P; \
	  rm -f $(SnippetMultiThreading_checked_DEPDIR).d

$(SnippetMultiThreading_checked_c_o): $(SnippetMultiThreading_checked_objsdir)/%.o:
	$(ECHO) SnippetMultiThreading: compiling checked $(filter %$(strip $(subst .c.o,.c, $(subst $(SnippetMultiThreading_checked_objsdir),, $@))), $(SnippetMultiThreading_cfiles))...
	mkdir -p $(dir $(@))
	$(CC) $(SnippetMultiThreading_checked_cflags) -c $(filter %$(strip $(subst .c.o,.c, $(subst $(SnippetMultiThreading_checked_objsdir),, $@))), $(SnippetMultiThreading_cfiles)) -o $@ 
	@mkdir -p $(dir $(addprefix $(DEPSDIR)/SnippetMultiThreading/checked/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .c.o,.c, $(subst $(SnippetMultiThreading_checked_objsdir),, $@))), $(SnippetMultiThreading_cfiles))))))
	cp $(SnippetMultiThreading_checked_DEPDIR).d $(addprefix $(DEPSDIR)/SnippetMultiThreading/checked/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .c.o,.c, $(subst $(SnippetMultiThreading_checked_objsdir),, $@))), $(SnippetMultiThreading_cfiles))))).P; \
	  sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' \
		-e '/^$$/ d' -e 's/$$/ :/' < $(SnippetMultiThreading_checked_DEPDIR).d >> $(addprefix $(DEPSDIR)/SnippetMultiThreading/checked/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .c.o,.c, $(subst $(SnippetMultiThreading_checked_objsdir),, $@))), $(SnippetMultiThreading_cfiles))))).P; \
	  rm -f $(SnippetMultiThreading_checked_DEPDIR).d

SnippetMultiThreading_profile_hpaths    := 
SnippetMultiThreading_profile_hpaths    += ./../../../Include
SnippetMultiThreading_profile_lpaths    := 
SnippetMultiThreading_profile_lpaths    += ./../../../Lib/linux32
SnippetMultiThreading_profile_lpaths    += ./../../lib/linux32
SnippetMultiThreading_profile_lpaths    += ./../../../Bin/linux32
SnippetMultiThreading_profile_lpaths    += ./../../lib/linux32
SnippetMultiThreading_profile_defines   := $(SnippetMultiThreading_custom_defines)
SnippetMultiThreading_profile_defines   += PHYSX_PROFILE_SDK
SnippetMultiThreading_profile_defines   += RENDER_SNIPPET
SnippetMultiThreading_profile_defines   += NDEBUG
SnippetMultiThreading_profile_defines   += PX_PROFILE
SnippetMultiThreading_profile_defines   += PX_SUPPORT_VISUAL_DEBUGGER
SnippetMultiThreading_profile_libraries := 
SnippetMultiThreading_profile_libraries += SnippetRenderPROFILE
SnippetMultiThreading_profile_libraries += SnippetUtilsPROFILE
SnippetMultiThreading_profile_libraries += PhysX3PROFILE_x86
SnippetMultiThreading_profile_libraries += PhysX3CommonPROFILE_x86
SnippetMultiThreading_profile_libraries += PhysX3CookingPROFILE_x86
SnippetMultiThreading_profile_libraries += PhysX3CharacterKinematicPROFILE_x86
SnippetMultiThreading_profile_libraries += PhysX3ExtensionsPROFILE
SnippetMultiThreading_profile_libraries += PhysX3VehiclePROFILE
SnippetMultiThreading_profile_libraries += PhysXProfileSDKPROFILE
SnippetMultiThreading_profile_libraries += PhysXVisualDebuggerSDKPROFILE
SnippetMultiThreading_profile_libraries += PxTaskPROFILE
SnippetMultiThreading_profile_libraries += SnippetUtilsPROFILE
SnippetMultiThreading_profile_libraries += SnippetRenderPROFILE
SnippetMultiThreading_profile_libraries += GL
SnippetMultiThreading_profile_libraries += GLU
SnippetMultiThreading_profile_libraries += glut
SnippetMultiThreading_profile_libraries += X11
SnippetMultiThreading_profile_libraries += rt
SnippetMultiThreading_profile_libraries += pthread
SnippetMultiThreading_profile_common_cflags	:= $(SnippetMultiThreading_custom_cflags)
SnippetMultiThreading_profile_common_cflags    += -MMD
SnippetMultiThreading_profile_common_cflags    += $(addprefix -D, $(SnippetMultiThreading_profile_defines))
SnippetMultiThreading_profile_common_cflags    += $(addprefix -I, $(SnippetMultiThreading_profile_hpaths))
SnippetMultiThreading_profile_common_cflags  += -m32
SnippetMultiThreading_profile_common_cflags  += -Werror -m32 -fPIC -msse2 -mfpmath=sse -malign-double -ffast-math -fno-exceptions -fno-rtti -fvisibility=hidden -fvisibility-inlines-hidden
SnippetMultiThreading_profile_common_cflags  += -Wall -Wextra -Wstrict-aliasing=2 -fdiagnostics-show-option
SnippetMultiThreading_profile_common_cflags  += -Wno-long-long
SnippetMultiThreading_profile_common_cflags  += -Wno-unknown-pragmas -Wno-invalid-offsetof -Wno-uninitialized
SnippetMultiThreading_profile_common_cflags  += -Wno-unused-parameter
SnippetMultiThreading_profile_common_cflags  += -O3 -fno-strict-aliasing
SnippetMultiThreading_profile_cflags	:= $(SnippetMultiThreading_profile_common_cflags)
SnippetMultiThreading_profile_cppflags	:= $(SnippetMultiThreading_profile_common_cflags)
SnippetMultiThreading_profile_lflags    := $(SnippetMultiThreading_custom_lflags)
SnippetMultiThreading_profile_lflags    += $(addprefix -L, $(SnippetMultiThreading_profile_lpaths))
SnippetMultiThreading_profile_lflags    += -Wl,--start-group $(addprefix -l, $(SnippetMultiThreading_profile_libraries)) -Wl,--end-group
SnippetMultiThreading_profile_lflags  += -lrt
SnippetMultiThreading_profile_lflags  += -Wl,-rpath ./
SnippetMultiThreading_profile_lflags  += -m32
SnippetMultiThreading_profile_objsdir  = $(OBJS_DIR)/SnippetMultiThreading_profile
SnippetMultiThreading_profile_cpp_o    = $(addprefix $(SnippetMultiThreading_profile_objsdir)/, $(subst ./, , $(subst ../, , $(patsubst %.cpp, %.cpp.o, $(SnippetMultiThreading_cppfiles)))))
SnippetMultiThreading_profile_cc_o    = $(addprefix $(SnippetMultiThreading_profile_objsdir)/, $(subst ./, , $(subst ../, , $(patsubst %.cc, %.cc.o, $(SnippetMultiThreading_ccfiles)))))
SnippetMultiThreading_profile_c_o      = $(addprefix $(SnippetMultiThreading_profile_objsdir)/, $(subst ./, , $(subst ../, , $(patsubst %.c, %.c.o, $(SnippetMultiThreading_cfiles)))))
SnippetMultiThreading_profile_obj      = $(SnippetMultiThreading_profile_cpp_o) $(SnippetMultiThreading_profile_cc_o) $(SnippetMultiThreading_profile_c_o)
SnippetMultiThreading_profile_bin      := ./../../../Bin/linux32/SnippetMultiThreadingPROFILE

clean_SnippetMultiThreading_profile: 
	@$(ECHO) clean SnippetMultiThreading profile
	@$(RMDIR) $(SnippetMultiThreading_profile_objsdir)
	@$(RMDIR) $(SnippetMultiThreading_profile_bin)
	@$(RMDIR) $(DEPSDIR)/SnippetMultiThreading/profile

build_SnippetMultiThreading_profile: postbuild_SnippetMultiThreading_profile
postbuild_SnippetMultiThreading_profile: mainbuild_SnippetMultiThreading_profile
mainbuild_SnippetMultiThreading_profile: prebuild_SnippetMultiThreading_profile $(SnippetMultiThreading_profile_bin)
prebuild_SnippetMultiThreading_profile:

$(SnippetMultiThreading_profile_bin): $(SnippetMultiThreading_profile_obj) build_SnippetRender_profile build_SnippetUtils_profile 
	mkdir -p `dirname ./../../../Bin/linux32/SnippetMultiThreadingPROFILE`
	$(CCLD) $(SnippetMultiThreading_profile_obj) $(SnippetMultiThreading_profile_lflags) -o $(SnippetMultiThreading_profile_bin) 
	$(ECHO) building $@ complete!

SnippetMultiThreading_profile_DEPDIR = $(dir $(@))/$(*F)
$(SnippetMultiThreading_profile_cpp_o): $(SnippetMultiThreading_profile_objsdir)/%.o:
	$(ECHO) SnippetMultiThreading: compiling profile $(filter %$(strip $(subst .cpp.o,.cpp, $(subst $(SnippetMultiThreading_profile_objsdir),, $@))), $(SnippetMultiThreading_cppfiles))...
	mkdir -p $(dir $(@))
	$(CXX) $(SnippetMultiThreading_profile_cppflags) -c $(filter %$(strip $(subst .cpp.o,.cpp, $(subst $(SnippetMultiThreading_profile_objsdir),, $@))), $(SnippetMultiThreading_cppfiles)) -o $@
	@mkdir -p $(dir $(addprefix $(DEPSDIR)/SnippetMultiThreading/profile/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cpp.o,.cpp, $(subst $(SnippetMultiThreading_profile_objsdir),, $@))), $(SnippetMultiThreading_cppfiles))))))
	cp $(SnippetMultiThreading_profile_DEPDIR).d $(addprefix $(DEPSDIR)/SnippetMultiThreading/profile/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cpp.o,.cpp, $(subst $(SnippetMultiThreading_profile_objsdir),, $@))), $(SnippetMultiThreading_cppfiles))))).P; \
	  sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' \
		-e '/^$$/ d' -e 's/$$/ :/' < $(SnippetMultiThreading_profile_DEPDIR).d >> $(addprefix $(DEPSDIR)/SnippetMultiThreading/profile/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cpp.o,.cpp, $(subst $(SnippetMultiThreading_profile_objsdir),, $@))), $(SnippetMultiThreading_cppfiles))))).P; \
	  rm -f $(SnippetMultiThreading_profile_DEPDIR).d

$(SnippetMultiThreading_profile_cc_o): $(SnippetMultiThreading_profile_objsdir)/%.o:
	$(ECHO) SnippetMultiThreading: compiling profile $(filter %$(strip $(subst .cc.o,.cc, $(subst $(SnippetMultiThreading_profile_objsdir),, $@))), $(SnippetMultiThreading_ccfiles))...
	mkdir -p $(dir $(@))
	$(CXX) $(SnippetMultiThreading_profile_cppflags) -c $(filter %$(strip $(subst .cc.o,.cc, $(subst $(SnippetMultiThreading_profile_objsdir),, $@))), $(SnippetMultiThreading_ccfiles)) -o $@
	mkdir -p $(dir $(addprefix $(DEPSDIR)/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cc.o,.cc, $(subst $(SnippetMultiThreading_profile_objsdir),, $@))), $(SnippetMultiThreading_ccfiles))))))
	cp $(SnippetMultiThreading_profile_DEPDIR).d $(addprefix $(DEPSDIR)/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cc.o,.cc, $(subst $(SnippetMultiThreading_profile_objsdir),, $@))), $(SnippetMultiThreading_ccfiles))))).profile.P; \
	  sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' \
		-e '/^$$/ d' -e 's/$$/ :/' < $(SnippetMultiThreading_profile_DEPDIR).d >> $(addprefix $(DEPSDIR)/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cc.o,.cc, $(subst $(SnippetMultiThreading_profile_objsdir),, $@))), $(SnippetMultiThreading_ccfiles))))).profile.P; \
	  rm -f $(SnippetMultiThreading_profile_DEPDIR).d

$(SnippetMultiThreading_profile_c_o): $(SnippetMultiThreading_profile_objsdir)/%.o:
	$(ECHO) SnippetMultiThreading: compiling profile $(filter %$(strip $(subst .c.o,.c, $(subst $(SnippetMultiThreading_profile_objsdir),, $@))), $(SnippetMultiThreading_cfiles))...
	mkdir -p $(dir $(@))
	$(CC) $(SnippetMultiThreading_profile_cflags) -c $(filter %$(strip $(subst .c.o,.c, $(subst $(SnippetMultiThreading_profile_objsdir),, $@))), $(SnippetMultiThreading_cfiles)) -o $@ 
	@mkdir -p $(dir $(addprefix $(DEPSDIR)/SnippetMultiThreading/profile/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .c.o,.c, $(subst $(SnippetMultiThreading_profile_objsdir),, $@))), $(SnippetMultiThreading_cfiles))))))
	cp $(SnippetMultiThreading_profile_DEPDIR).d $(addprefix $(DEPSDIR)/SnippetMultiThreading/profile/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .c.o,.c, $(subst $(SnippetMultiThreading_profile_objsdir),, $@))), $(SnippetMultiThreading_cfiles))))).P; \
	  sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' \
		-e '/^$$/ d' -e 's/$$/ :/' < $(SnippetMultiThreading_profile_DEPDIR).d >> $(addprefix $(DEPSDIR)/SnippetMultiThreading/profile/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .c.o,.c, $(subst $(SnippetMultiThreading_profile_objsdir),, $@))), $(SnippetMultiThreading_cfiles))))).P; \
	  rm -f $(SnippetMultiThreading_profile_DEPDIR).d

SnippetMultiThreading_release_hpaths    := 
SnippetMultiThreading_release_hpaths    += ./../../../Include
SnippetMultiThreading_release_lpaths    := 
SnippetMultiThreading_release_lpaths    += ./../../../Lib/linux32
SnippetMultiThreading_release_lpaths    += ./../../lib/linux32
SnippetMultiThreading_release_lpaths    += ./../../../Bin/linux32
SnippetMultiThreading_release_lpaths    += ./../../lib/linux32
SnippetMultiThreading_release_defines   := $(SnippetMultiThreading_custom_defines)
SnippetMultiThreading_release_defines   += PHYSX_PROFILE_SDK
SnippetMultiThreading_release_defines   += RENDER_SNIPPET
SnippetMultiThreading_release_defines   += NDEBUG
SnippetMultiThreading_release_libraries := 
SnippetMultiThreading_release_libraries += SnippetRender
SnippetMultiThreading_release_libraries += SnippetUtils
SnippetMultiThreading_release_libraries += PhysX3_x86
SnippetMultiThreading_release_libraries += PhysX3Common_x86
SnippetMultiThreading_release_libraries += PhysX3Cooking_x86
SnippetMultiThreading_release_libraries += PhysX3CharacterKinematic_x86
SnippetMultiThreading_release_libraries += PhysX3Extensions
SnippetMultiThreading_release_libraries += PhysX3Vehicle
SnippetMultiThreading_release_libraries += PhysXProfileSDK
SnippetMultiThreading_release_libraries += PhysXVisualDebuggerSDK
SnippetMultiThreading_release_libraries += PxTask
SnippetMultiThreading_release_libraries += SnippetUtils
SnippetMultiThreading_release_libraries += SnippetRender
SnippetMultiThreading_release_libraries += GL
SnippetMultiThreading_release_libraries += GLU
SnippetMultiThreading_release_libraries += glut
SnippetMultiThreading_release_libraries += X11
SnippetMultiThreading_release_libraries += rt
SnippetMultiThreading_release_libraries += pthread
SnippetMultiThreading_release_common_cflags	:= $(SnippetMultiThreading_custom_cflags)
SnippetMultiThreading_release_common_cflags    += -MMD
SnippetMultiThreading_release_common_cflags    += $(addprefix -D, $(SnippetMultiThreading_release_defines))
SnippetMultiThreading_release_common_cflags    += $(addprefix -I, $(SnippetMultiThreading_release_hpaths))
SnippetMultiThreading_release_common_cflags  += -m32
SnippetMultiThreading_release_common_cflags  += -Werror -m32 -fPIC -msse2 -mfpmath=sse -malign-double -ffast-math -fno-exceptions -fno-rtti -fvisibility=hidden -fvisibility-inlines-hidden
SnippetMultiThreading_release_common_cflags  += -Wall -Wextra -Wstrict-aliasing=2 -fdiagnostics-show-option
SnippetMultiThreading_release_common_cflags  += -Wno-long-long
SnippetMultiThreading_release_common_cflags  += -Wno-unknown-pragmas -Wno-invalid-offsetof -Wno-uninitialized
SnippetMultiThreading_release_common_cflags  += -Wno-unused-parameter
SnippetMultiThreading_release_common_cflags  += -O3 -fno-strict-aliasing
SnippetMultiThreading_release_cflags	:= $(SnippetMultiThreading_release_common_cflags)
SnippetMultiThreading_release_cppflags	:= $(SnippetMultiThreading_release_common_cflags)
SnippetMultiThreading_release_lflags    := $(SnippetMultiThreading_custom_lflags)
SnippetMultiThreading_release_lflags    += $(addprefix -L, $(SnippetMultiThreading_release_lpaths))
SnippetMultiThreading_release_lflags    += -Wl,--start-group $(addprefix -l, $(SnippetMultiThreading_release_libraries)) -Wl,--end-group
SnippetMultiThreading_release_lflags  += -lrt
SnippetMultiThreading_release_lflags  += -Wl,-rpath ./
SnippetMultiThreading_release_lflags  += -m32
SnippetMultiThreading_release_objsdir  = $(OBJS_DIR)/SnippetMultiThreading_release
SnippetMultiThreading_release_cpp_o    = $(addprefix $(SnippetMultiThreading_release_objsdir)/, $(subst ./, , $(subst ../, , $(patsubst %.cpp, %.cpp.o, $(SnippetMultiThreading_cppfiles)))))
SnippetMultiThreading_release_cc_o    = $(addprefix $(SnippetMultiThreading_release_objsdir)/, $(subst ./, , $(subst ../, , $(patsubst %.cc, %.cc.o, $(SnippetMultiThreading_ccfiles)))))
SnippetMultiThreading_release_c_o      = $(addprefix $(SnippetMultiThreading_release_objsdir)/, $(subst ./, , $(subst ../, , $(patsubst %.c, %.c.o, $(SnippetMultiThreading_cfiles)))))
SnippetMultiThreading_release_obj      = $(SnippetMultiThreading_release_cpp_o) $(SnippetMultiThreading_release_cc_o) $(SnippetMultiThreading_release_c_o)
SnippetMultiThreading_release_bin      := ./../../../Bin/linux32/SnippetMultiThreading

clean_SnippetMultiThreading_release: 
	@$(ECHO) clean SnippetMultiThreading release
	@$(RMDIR) $(SnippetMultiThreading_release_objsdir)
	@$(RMDIR) $(SnippetMultiThreading_release_bin)
	@$(RMDIR) $(DEPSDIR)/SnippetMultiThreading/release

build_SnippetMultiThreading_release: postbuild_SnippetMultiThreading_release
postbuild_SnippetMultiThreading_release: mainbuild_SnippetMultiThreading_release
mainbuild_SnippetMultiThreading_release: prebuild_SnippetMultiThreading_release $(SnippetMultiThreading_release_bin)
prebuild_SnippetMultiThreading_release:

$(SnippetMultiThreading_release_bin): $(SnippetMultiThreading_release_obj) build_SnippetRender_release build_SnippetUtils_release 
	mkdir -p `dirname ./../../../Bin/linux32/SnippetMultiThreading`
	$(CCLD) $(SnippetMultiThreading_release_obj) $(SnippetMultiThreading_release_lflags) -o $(SnippetMultiThreading_release_bin) 
	$(ECHO) building $@ complete!

SnippetMultiThreading_release_DEPDIR = $(dir $(@))/$(*F)
$(SnippetMultiThreading_release_cpp_o): $(SnippetMultiThreading_release_objsdir)/%.o:
	$(ECHO) SnippetMultiThreading: compiling release $(filter %$(strip $(subst .cpp.o,.cpp, $(subst $(SnippetMultiThreading_release_objsdir),, $@))), $(SnippetMultiThreading_cppfiles))...
	mkdir -p $(dir $(@))
	$(CXX) $(SnippetMultiThreading_release_cppflags) -c $(filter %$(strip $(subst .cpp.o,.cpp, $(subst $(SnippetMultiThreading_release_objsdir),, $@))), $(SnippetMultiThreading_cppfiles)) -o $@
	@mkdir -p $(dir $(addprefix $(DEPSDIR)/SnippetMultiThreading/release/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cpp.o,.cpp, $(subst $(SnippetMultiThreading_release_objsdir),, $@))), $(SnippetMultiThreading_cppfiles))))))
	cp $(SnippetMultiThreading_release_DEPDIR).d $(addprefix $(DEPSDIR)/SnippetMultiThreading/release/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cpp.o,.cpp, $(subst $(SnippetMultiThreading_release_objsdir),, $@))), $(SnippetMultiThreading_cppfiles))))).P; \
	  sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' \
		-e '/^$$/ d' -e 's/$$/ :/' < $(SnippetMultiThreading_release_DEPDIR).d >> $(addprefix $(DEPSDIR)/SnippetMultiThreading/release/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cpp.o,.cpp, $(subst $(SnippetMultiThreading_release_objsdir),, $@))), $(SnippetMultiThreading_cppfiles))))).P; \
	  rm -f $(SnippetMultiThreading_release_DEPDIR).d

$(SnippetMultiThreading_release_cc_o): $(SnippetMultiThreading_release_objsdir)/%.o:
	$(ECHO) SnippetMultiThreading: compiling release $(filter %$(strip $(subst .cc.o,.cc, $(subst $(SnippetMultiThreading_release_objsdir),, $@))), $(SnippetMultiThreading_ccfiles))...
	mkdir -p $(dir $(@))
	$(CXX) $(SnippetMultiThreading_release_cppflags) -c $(filter %$(strip $(subst .cc.o,.cc, $(subst $(SnippetMultiThreading_release_objsdir),, $@))), $(SnippetMultiThreading_ccfiles)) -o $@
	mkdir -p $(dir $(addprefix $(DEPSDIR)/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cc.o,.cc, $(subst $(SnippetMultiThreading_release_objsdir),, $@))), $(SnippetMultiThreading_ccfiles))))))
	cp $(SnippetMultiThreading_release_DEPDIR).d $(addprefix $(DEPSDIR)/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cc.o,.cc, $(subst $(SnippetMultiThreading_release_objsdir),, $@))), $(SnippetMultiThreading_ccfiles))))).release.P; \
	  sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' \
		-e '/^$$/ d' -e 's/$$/ :/' < $(SnippetMultiThreading_release_DEPDIR).d >> $(addprefix $(DEPSDIR)/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cc.o,.cc, $(subst $(SnippetMultiThreading_release_objsdir),, $@))), $(SnippetMultiThreading_ccfiles))))).release.P; \
	  rm -f $(SnippetMultiThreading_release_DEPDIR).d

$(SnippetMultiThreading_release_c_o): $(SnippetMultiThreading_release_objsdir)/%.o:
	$(ECHO) SnippetMultiThreading: compiling release $(filter %$(strip $(subst .c.o,.c, $(subst $(SnippetMultiThreading_release_objsdir),, $@))), $(SnippetMultiThreading_cfiles))...
	mkdir -p $(dir $(@))
	$(CC) $(SnippetMultiThreading_release_cflags) -c $(filter %$(strip $(subst .c.o,.c, $(subst $(SnippetMultiThreading_release_objsdir),, $@))), $(SnippetMultiThreading_cfiles)) -o $@ 
	@mkdir -p $(dir $(addprefix $(DEPSDIR)/SnippetMultiThreading/release/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .c.o,.c, $(subst $(SnippetMultiThreading_release_objsdir),, $@))), $(SnippetMultiThreading_cfiles))))))
	cp $(SnippetMultiThreading_release_DEPDIR).d $(addprefix $(DEPSDIR)/SnippetMultiThreading/release/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .c.o,.c, $(subst $(SnippetMultiThreading_release_objsdir),, $@))), $(SnippetMultiThreading_cfiles))))).P; \
	  sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' \
		-e '/^$$/ d' -e 's/$$/ :/' < $(SnippetMultiThreading_release_DEPDIR).d >> $(addprefix $(DEPSDIR)/SnippetMultiThreading/release/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .c.o,.c, $(subst $(SnippetMultiThreading_release_objsdir),, $@))), $(SnippetMultiThreading_cfiles))))).P; \
	  rm -f $(SnippetMultiThreading_release_DEPDIR).d

clean_SnippetMultiThreading:  clean_SnippetMultiThreading_debug clean_SnippetMultiThreading_checked clean_SnippetMultiThreading_profile clean_SnippetMultiThreading_release
	rm -rf $(DEPSDIR)

export VERBOSE
ifndef VERBOSE
.SILENT:
endif
