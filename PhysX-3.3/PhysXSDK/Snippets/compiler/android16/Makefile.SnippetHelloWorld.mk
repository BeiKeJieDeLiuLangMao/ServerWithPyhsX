# Makefile generated by XPJ for android16
-include Makefile.custom
ProjectName = SnippetHelloWorld
SnippetHelloWorld_cppfiles   += ./../../SnippetCommon/ClassicMain.cpp
SnippetHelloWorld_cppfiles   += ./../../SnippetHelloWorld/SnippetHelloWorld.cpp
SnippetHelloWorld_cppfiles   += ./../../SnippetHelloWorld/SnippetHelloWorldRender.cpp

SnippetHelloWorld_cpp_debug_dep    = $(addprefix $(DEPSDIR)/SnippetHelloWorld/debug/, $(subst ./, , $(subst ../, , $(patsubst %.cpp, %.cpp.P, $(SnippetHelloWorld_cppfiles)))))
SnippetHelloWorld_cc_debug_dep    = $(addprefix $(DEPSDIR)/, $(subst ./, , $(subst ../, , $(patsubst %.cc, %.cc.debug.P, $(SnippetHelloWorld_ccfiles)))))
SnippetHelloWorld_c_debug_dep      = $(addprefix $(DEPSDIR)/SnippetHelloWorld/debug/, $(subst ./, , $(subst ../, , $(patsubst %.c, %.c.P, $(SnippetHelloWorld_cfiles)))))
SnippetHelloWorld_debug_dep      = $(SnippetHelloWorld_cpp_debug_dep) $(SnippetHelloWorld_cc_debug_dep) $(SnippetHelloWorld_c_debug_dep)
-include $(SnippetHelloWorld_debug_dep)
SnippetHelloWorld_cpp_checked_dep    = $(addprefix $(DEPSDIR)/SnippetHelloWorld/checked/, $(subst ./, , $(subst ../, , $(patsubst %.cpp, %.cpp.P, $(SnippetHelloWorld_cppfiles)))))
SnippetHelloWorld_cc_checked_dep    = $(addprefix $(DEPSDIR)/, $(subst ./, , $(subst ../, , $(patsubst %.cc, %.cc.checked.P, $(SnippetHelloWorld_ccfiles)))))
SnippetHelloWorld_c_checked_dep      = $(addprefix $(DEPSDIR)/SnippetHelloWorld/checked/, $(subst ./, , $(subst ../, , $(patsubst %.c, %.c.P, $(SnippetHelloWorld_cfiles)))))
SnippetHelloWorld_checked_dep      = $(SnippetHelloWorld_cpp_checked_dep) $(SnippetHelloWorld_cc_checked_dep) $(SnippetHelloWorld_c_checked_dep)
-include $(SnippetHelloWorld_checked_dep)
SnippetHelloWorld_cpp_profile_dep    = $(addprefix $(DEPSDIR)/SnippetHelloWorld/profile/, $(subst ./, , $(subst ../, , $(patsubst %.cpp, %.cpp.P, $(SnippetHelloWorld_cppfiles)))))
SnippetHelloWorld_cc_profile_dep    = $(addprefix $(DEPSDIR)/, $(subst ./, , $(subst ../, , $(patsubst %.cc, %.cc.profile.P, $(SnippetHelloWorld_ccfiles)))))
SnippetHelloWorld_c_profile_dep      = $(addprefix $(DEPSDIR)/SnippetHelloWorld/profile/, $(subst ./, , $(subst ../, , $(patsubst %.c, %.c.P, $(SnippetHelloWorld_cfiles)))))
SnippetHelloWorld_profile_dep      = $(SnippetHelloWorld_cpp_profile_dep) $(SnippetHelloWorld_cc_profile_dep) $(SnippetHelloWorld_c_profile_dep)
-include $(SnippetHelloWorld_profile_dep)
SnippetHelloWorld_cpp_release_dep    = $(addprefix $(DEPSDIR)/SnippetHelloWorld/release/, $(subst ./, , $(subst ../, , $(patsubst %.cpp, %.cpp.P, $(SnippetHelloWorld_cppfiles)))))
SnippetHelloWorld_cc_release_dep    = $(addprefix $(DEPSDIR)/, $(subst ./, , $(subst ../, , $(patsubst %.cc, %.cc.release.P, $(SnippetHelloWorld_ccfiles)))))
SnippetHelloWorld_c_release_dep      = $(addprefix $(DEPSDIR)/SnippetHelloWorld/release/, $(subst ./, , $(subst ../, , $(patsubst %.c, %.c.P, $(SnippetHelloWorld_cfiles)))))
SnippetHelloWorld_release_dep      = $(SnippetHelloWorld_cpp_release_dep) $(SnippetHelloWorld_cc_release_dep) $(SnippetHelloWorld_c_release_dep)
-include $(SnippetHelloWorld_release_dep)
SnippetHelloWorld_debug_hpaths    := 
SnippetHelloWorld_debug_hpaths    += ./../../../Include
SnippetHelloWorld_debug_hpaths    += ./../../../externals/android-ndk-r9d/sources/cxx-stl/gnu-libstdc++/4.8/include
SnippetHelloWorld_debug_hpaths    += ./../../../externals/android-ndk-r9d/sources/cxx-stl/gnu-libstdc++/4.8/libs/armeabi-v7a/include
SnippetHelloWorld_debug_lpaths    := 
SnippetHelloWorld_debug_lpaths    += ./../../../externals/nvToolsExt/1/lib/armv7
SnippetHelloWorld_debug_lpaths    += ./../../../Lib/android16
SnippetHelloWorld_debug_lpaths    += ./../../lib/android16
SnippetHelloWorld_debug_lpaths    += ./../../lib/android16
SnippetHelloWorld_debug_defines   := $(SnippetHelloWorld_custom_defines)
SnippetHelloWorld_debug_defines   += ANDROID
SnippetHelloWorld_debug_defines   += GLES2
SnippetHelloWorld_debug_defines   += __ARM_ARCH_5__
SnippetHelloWorld_debug_defines   += __ARM_ARCH_5T__
SnippetHelloWorld_debug_defines   += __ARM_ARCH_5E__
SnippetHelloWorld_debug_defines   += __ARM_ARCH_5TE__
SnippetHelloWorld_debug_defines   += _DEBUG
SnippetHelloWorld_debug_defines   += PX_DEBUG
SnippetHelloWorld_debug_defines   += PX_CHECKED
SnippetHelloWorld_debug_defines   += PX_SUPPORT_VISUAL_DEBUGGER
SnippetHelloWorld_debug_defines   += PX_NVTX
SnippetHelloWorld_debug_defines   += PHYSX_PROFILE_SDK
SnippetHelloWorld_debug_libraries := 
SnippetHelloWorld_debug_libraries += SnippetUtilsDEBUG
SnippetHelloWorld_debug_libraries += log
SnippetHelloWorld_debug_libraries += gnustl_static
SnippetHelloWorld_debug_libraries += supc++
SnippetHelloWorld_debug_libraries += m
SnippetHelloWorld_debug_libraries += c
SnippetHelloWorld_debug_libraries += nvToolsExt
SnippetHelloWorld_debug_libraries += PhysX3CommonDEBUG
SnippetHelloWorld_debug_libraries += PhysX3DEBUG
SnippetHelloWorld_debug_libraries += PhysX3VehicleDEBUG
SnippetHelloWorld_debug_libraries += PhysX3CookingDEBUG
SnippetHelloWorld_debug_libraries += PhysX3ExtensionsDEBUG
SnippetHelloWorld_debug_libraries += PhysX3CharacterKinematicDEBUG
SnippetHelloWorld_debug_libraries += SnippetUtilsDEBUG
SnippetHelloWorld_debug_common_cflags	:= $(SnippetHelloWorld_custom_cflags)
SnippetHelloWorld_debug_common_cflags    += -MMD
SnippetHelloWorld_debug_common_cflags    += $(addprefix -D, $(SnippetHelloWorld_debug_defines))
SnippetHelloWorld_debug_common_cflags    += $(addprefix -I, $(SnippetHelloWorld_debug_hpaths))
SnippetHelloWorld_debug_common_cflags  += -Werror
SnippetHelloWorld_debug_common_cflags  += -fpic -fno-exceptions
SnippetHelloWorld_debug_common_cflags  += -isysroot ../../../externals/android-ndk-r9d/platforms/android-16/arch-arm
SnippetHelloWorld_debug_common_cflags  += -march=armv7-a -mfpu=neon -marm -mfloat-abi=softfp -mthumb-interwork
SnippetHelloWorld_debug_common_cflags  += -Wall -Wextra -Wpedantic -Wstrict-aliasing=2
SnippetHelloWorld_debug_common_cflags  += -Wno-long-long
SnippetHelloWorld_debug_common_cflags  += -Wno-invalid-offsetof -Wno-unknown-pragmas -Wno-maybe-uninitialized
SnippetHelloWorld_debug_common_cflags  += -Wno-unused-parameter
SnippetHelloWorld_debug_common_cflags  += -Wno-pedantic
SnippetHelloWorld_debug_common_cflags  += -g3 -gdwarf-2
SnippetHelloWorld_debug_cflags	:= $(SnippetHelloWorld_debug_common_cflags)
SnippetHelloWorld_debug_cppflags	:= $(SnippetHelloWorld_debug_common_cflags)
SnippetHelloWorld_debug_cppflags  += -fno-rtti
SnippetHelloWorld_debug_lflags    := $(SnippetHelloWorld_custom_lflags)
SnippetHelloWorld_debug_lflags    += $(addprefix -L, $(SnippetHelloWorld_debug_lpaths))
SnippetHelloWorld_debug_lflags    += -Wl,--start-group $(addprefix -l, $(SnippetHelloWorld_debug_libraries)) -Wl,--end-group
SnippetHelloWorld_debug_lflags  += --sysroot=../../../externals/android-ndk-r9d/platforms/android-16/arch-arm
SnippetHelloWorld_debug_lflags  += -Wl,--no-undefined
SnippetHelloWorld_debug_lflags  += -Wl,-z,noexecstack -L../../../externals/android-ndk-r9d/sources/cxx-stl/gnu-libstdc++/4.8/libs/armeabi-v7a -Wl,-rpath-link=../../../externals/android-ndk-r9d/platforms/android-16/arch-arm/usr/lib
SnippetHelloWorld_debug_objsdir  = $(OBJS_DIR)/SnippetHelloWorld_debug
SnippetHelloWorld_debug_cpp_o    = $(addprefix $(SnippetHelloWorld_debug_objsdir)/, $(subst ./, , $(subst ../, , $(patsubst %.cpp, %.cpp.o, $(SnippetHelloWorld_cppfiles)))))
SnippetHelloWorld_debug_cc_o    = $(addprefix $(SnippetHelloWorld_debug_objsdir)/, $(subst ./, , $(subst ../, , $(patsubst %.cc, %.cc.o, $(SnippetHelloWorld_ccfiles)))))
SnippetHelloWorld_debug_c_o      = $(addprefix $(SnippetHelloWorld_debug_objsdir)/, $(subst ./, , $(subst ../, , $(patsubst %.c, %.c.o, $(SnippetHelloWorld_cfiles)))))
SnippetHelloWorld_debug_obj      = $(SnippetHelloWorld_debug_cpp_o) $(SnippetHelloWorld_debug_cc_o) $(SnippetHelloWorld_debug_c_o)
SnippetHelloWorld_debug_bin      := ./../../../Bin/android16/SnippetHelloWorldDEBUG

clean_SnippetHelloWorld_debug: 
	@$(ECHO) clean SnippetHelloWorld debug
	@$(RMDIR) $(SnippetHelloWorld_debug_objsdir)
	@$(RMDIR) $(SnippetHelloWorld_debug_bin)
	@$(RMDIR) $(DEPSDIR)/SnippetHelloWorld/debug

build_SnippetHelloWorld_debug: postbuild_SnippetHelloWorld_debug
postbuild_SnippetHelloWorld_debug: mainbuild_SnippetHelloWorld_debug
mainbuild_SnippetHelloWorld_debug: prebuild_SnippetHelloWorld_debug $(SnippetHelloWorld_debug_bin)
prebuild_SnippetHelloWorld_debug:

$(SnippetHelloWorld_debug_bin): $(SnippetHelloWorld_debug_obj) build_SnippetUtils_debug 
	mkdir -p `dirname ./../../../Bin/android16/SnippetHelloWorldDEBUG`
	$(CCLD) $(SnippetHelloWorld_debug_obj) $(SnippetHelloWorld_debug_lflags) -o $(SnippetHelloWorld_debug_bin) 
	$(ECHO) building $@ complete!

SnippetHelloWorld_debug_DEPDIR = $(dir $(@))/$(*F)
$(SnippetHelloWorld_debug_cpp_o): $(SnippetHelloWorld_debug_objsdir)/%.o:
	$(ECHO) SnippetHelloWorld: compiling debug $(filter %$(strip $(subst .cpp.o,.cpp, $(subst $(SnippetHelloWorld_debug_objsdir),, $@))), $(SnippetHelloWorld_cppfiles))...
	mkdir -p $(dir $(@))
	$(CXX) $(SnippetHelloWorld_debug_cppflags) -c $(filter %$(strip $(subst .cpp.o,.cpp, $(subst $(SnippetHelloWorld_debug_objsdir),, $@))), $(SnippetHelloWorld_cppfiles)) -o $@
	@mkdir -p $(dir $(addprefix $(DEPSDIR)/SnippetHelloWorld/debug/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cpp.o,.cpp, $(subst $(SnippetHelloWorld_debug_objsdir),, $@))), $(SnippetHelloWorld_cppfiles))))))
	cp $(SnippetHelloWorld_debug_DEPDIR).d $(addprefix $(DEPSDIR)/SnippetHelloWorld/debug/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cpp.o,.cpp, $(subst $(SnippetHelloWorld_debug_objsdir),, $@))), $(SnippetHelloWorld_cppfiles))))).P; \
	  sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' \
		-e '/^$$/ d' -e 's/$$/ :/' < $(SnippetHelloWorld_debug_DEPDIR).d >> $(addprefix $(DEPSDIR)/SnippetHelloWorld/debug/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cpp.o,.cpp, $(subst $(SnippetHelloWorld_debug_objsdir),, $@))), $(SnippetHelloWorld_cppfiles))))).P; \
	  rm -f $(SnippetHelloWorld_debug_DEPDIR).d

$(SnippetHelloWorld_debug_cc_o): $(SnippetHelloWorld_debug_objsdir)/%.o:
	$(ECHO) SnippetHelloWorld: compiling debug $(filter %$(strip $(subst .cc.o,.cc, $(subst $(SnippetHelloWorld_debug_objsdir),, $@))), $(SnippetHelloWorld_ccfiles))...
	mkdir -p $(dir $(@))
	$(CXX) $(SnippetHelloWorld_debug_cppflags) -c $(filter %$(strip $(subst .cc.o,.cc, $(subst $(SnippetHelloWorld_debug_objsdir),, $@))), $(SnippetHelloWorld_ccfiles)) -o $@
	mkdir -p $(dir $(addprefix $(DEPSDIR)/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cc.o,.cc, $(subst $(SnippetHelloWorld_debug_objsdir),, $@))), $(SnippetHelloWorld_ccfiles))))))
	cp $(SnippetHelloWorld_debug_DEPDIR).d $(addprefix $(DEPSDIR)/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cc.o,.cc, $(subst $(SnippetHelloWorld_debug_objsdir),, $@))), $(SnippetHelloWorld_ccfiles))))).debug.P; \
	  sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' \
		-e '/^$$/ d' -e 's/$$/ :/' < $(SnippetHelloWorld_debug_DEPDIR).d >> $(addprefix $(DEPSDIR)/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cc.o,.cc, $(subst $(SnippetHelloWorld_debug_objsdir),, $@))), $(SnippetHelloWorld_ccfiles))))).debug.P; \
	  rm -f $(SnippetHelloWorld_debug_DEPDIR).d

$(SnippetHelloWorld_debug_c_o): $(SnippetHelloWorld_debug_objsdir)/%.o:
	$(ECHO) SnippetHelloWorld: compiling debug $(filter %$(strip $(subst .c.o,.c, $(subst $(SnippetHelloWorld_debug_objsdir),, $@))), $(SnippetHelloWorld_cfiles))...
	mkdir -p $(dir $(@))
	$(CC) $(SnippetHelloWorld_debug_cflags) -c $(filter %$(strip $(subst .c.o,.c, $(subst $(SnippetHelloWorld_debug_objsdir),, $@))), $(SnippetHelloWorld_cfiles)) -o $@ 
	@mkdir -p $(dir $(addprefix $(DEPSDIR)/SnippetHelloWorld/debug/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .c.o,.c, $(subst $(SnippetHelloWorld_debug_objsdir),, $@))), $(SnippetHelloWorld_cfiles))))))
	cp $(SnippetHelloWorld_debug_DEPDIR).d $(addprefix $(DEPSDIR)/SnippetHelloWorld/debug/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .c.o,.c, $(subst $(SnippetHelloWorld_debug_objsdir),, $@))), $(SnippetHelloWorld_cfiles))))).P; \
	  sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' \
		-e '/^$$/ d' -e 's/$$/ :/' < $(SnippetHelloWorld_debug_DEPDIR).d >> $(addprefix $(DEPSDIR)/SnippetHelloWorld/debug/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .c.o,.c, $(subst $(SnippetHelloWorld_debug_objsdir),, $@))), $(SnippetHelloWorld_cfiles))))).P; \
	  rm -f $(SnippetHelloWorld_debug_DEPDIR).d

SnippetHelloWorld_checked_hpaths    := 
SnippetHelloWorld_checked_hpaths    += ./../../../Include
SnippetHelloWorld_checked_hpaths    += ./../../../externals/android-ndk-r9d/sources/cxx-stl/gnu-libstdc++/4.8/include
SnippetHelloWorld_checked_hpaths    += ./../../../externals/android-ndk-r9d/sources/cxx-stl/gnu-libstdc++/4.8/libs/armeabi-v7a/include
SnippetHelloWorld_checked_lpaths    := 
SnippetHelloWorld_checked_lpaths    += ./../../../externals/nvToolsExt/1/lib/armv7
SnippetHelloWorld_checked_lpaths    += ./../../../Lib/android16
SnippetHelloWorld_checked_lpaths    += ./../../lib/android16
SnippetHelloWorld_checked_lpaths    += ./../../lib/android16
SnippetHelloWorld_checked_defines   := $(SnippetHelloWorld_custom_defines)
SnippetHelloWorld_checked_defines   += ANDROID
SnippetHelloWorld_checked_defines   += GLES2
SnippetHelloWorld_checked_defines   += __ARM_ARCH_5__
SnippetHelloWorld_checked_defines   += __ARM_ARCH_5T__
SnippetHelloWorld_checked_defines   += __ARM_ARCH_5E__
SnippetHelloWorld_checked_defines   += __ARM_ARCH_5TE__
SnippetHelloWorld_checked_defines   += NDEBUG
SnippetHelloWorld_checked_defines   += PX_CHECKED
SnippetHelloWorld_checked_defines   += PX_SUPPORT_VISUAL_DEBUGGER
SnippetHelloWorld_checked_defines   += PX_NVTX
SnippetHelloWorld_checked_defines   += PHYSX_PROFILE_SDK
SnippetHelloWorld_checked_libraries := 
SnippetHelloWorld_checked_libraries += SnippetUtilsCHECKED
SnippetHelloWorld_checked_libraries += log
SnippetHelloWorld_checked_libraries += gnustl_static
SnippetHelloWorld_checked_libraries += supc++
SnippetHelloWorld_checked_libraries += m
SnippetHelloWorld_checked_libraries += c
SnippetHelloWorld_checked_libraries += nvToolsExt
SnippetHelloWorld_checked_libraries += PhysX3CommonCHECKED
SnippetHelloWorld_checked_libraries += PhysX3CHECKED
SnippetHelloWorld_checked_libraries += PhysX3VehicleCHECKED
SnippetHelloWorld_checked_libraries += PhysX3CookingCHECKED
SnippetHelloWorld_checked_libraries += PhysX3ExtensionsCHECKED
SnippetHelloWorld_checked_libraries += PhysX3CharacterKinematicCHECKED
SnippetHelloWorld_checked_libraries += SnippetUtilsCHECKED
SnippetHelloWorld_checked_common_cflags	:= $(SnippetHelloWorld_custom_cflags)
SnippetHelloWorld_checked_common_cflags    += -MMD
SnippetHelloWorld_checked_common_cflags    += $(addprefix -D, $(SnippetHelloWorld_checked_defines))
SnippetHelloWorld_checked_common_cflags    += $(addprefix -I, $(SnippetHelloWorld_checked_hpaths))
SnippetHelloWorld_checked_common_cflags  += -Werror
SnippetHelloWorld_checked_common_cflags  += -fpic -fno-exceptions
SnippetHelloWorld_checked_common_cflags  += -isysroot ../../../externals/android-ndk-r9d/platforms/android-16/arch-arm
SnippetHelloWorld_checked_common_cflags  += -march=armv7-a -mfpu=neon -marm -mfloat-abi=softfp -mthumb-interwork
SnippetHelloWorld_checked_common_cflags  += -Wall -Wextra -Wpedantic -Wstrict-aliasing=2
SnippetHelloWorld_checked_common_cflags  += -Wno-long-long
SnippetHelloWorld_checked_common_cflags  += -Wno-invalid-offsetof -Wno-unknown-pragmas -Wno-maybe-uninitialized
SnippetHelloWorld_checked_common_cflags  += -Wno-unused-parameter
SnippetHelloWorld_checked_common_cflags  += -Wno-pedantic
SnippetHelloWorld_checked_common_cflags  += -g3 -gdwarf-2 -O3 -fno-strict-aliasing
SnippetHelloWorld_checked_common_cflags  += -ffunction-sections -funwind-tables -fstack-protector
SnippetHelloWorld_checked_common_cflags  += -fomit-frame-pointer -funswitch-loops -finline-limit=300
SnippetHelloWorld_checked_cflags	:= $(SnippetHelloWorld_checked_common_cflags)
SnippetHelloWorld_checked_cppflags	:= $(SnippetHelloWorld_checked_common_cflags)
SnippetHelloWorld_checked_cppflags  += -fno-rtti
SnippetHelloWorld_checked_lflags    := $(SnippetHelloWorld_custom_lflags)
SnippetHelloWorld_checked_lflags    += $(addprefix -L, $(SnippetHelloWorld_checked_lpaths))
SnippetHelloWorld_checked_lflags    += -Wl,--start-group $(addprefix -l, $(SnippetHelloWorld_checked_libraries)) -Wl,--end-group
SnippetHelloWorld_checked_lflags  += --sysroot=../../../externals/android-ndk-r9d/platforms/android-16/arch-arm
SnippetHelloWorld_checked_lflags  += -Wl,--no-undefined
SnippetHelloWorld_checked_lflags  += -Wl,-z,noexecstack -L../../../externals/android-ndk-r9d/sources/cxx-stl/gnu-libstdc++/4.8/libs/armeabi-v7a -Wl,-rpath-link=../../../externals/android-ndk-r9d/platforms/android-16/arch-arm/usr/lib
SnippetHelloWorld_checked_objsdir  = $(OBJS_DIR)/SnippetHelloWorld_checked
SnippetHelloWorld_checked_cpp_o    = $(addprefix $(SnippetHelloWorld_checked_objsdir)/, $(subst ./, , $(subst ../, , $(patsubst %.cpp, %.cpp.o, $(SnippetHelloWorld_cppfiles)))))
SnippetHelloWorld_checked_cc_o    = $(addprefix $(SnippetHelloWorld_checked_objsdir)/, $(subst ./, , $(subst ../, , $(patsubst %.cc, %.cc.o, $(SnippetHelloWorld_ccfiles)))))
SnippetHelloWorld_checked_c_o      = $(addprefix $(SnippetHelloWorld_checked_objsdir)/, $(subst ./, , $(subst ../, , $(patsubst %.c, %.c.o, $(SnippetHelloWorld_cfiles)))))
SnippetHelloWorld_checked_obj      = $(SnippetHelloWorld_checked_cpp_o) $(SnippetHelloWorld_checked_cc_o) $(SnippetHelloWorld_checked_c_o)
SnippetHelloWorld_checked_bin      := ./../../../Bin/android16/SnippetHelloWorldCHECKED

clean_SnippetHelloWorld_checked: 
	@$(ECHO) clean SnippetHelloWorld checked
	@$(RMDIR) $(SnippetHelloWorld_checked_objsdir)
	@$(RMDIR) $(SnippetHelloWorld_checked_bin)
	@$(RMDIR) $(DEPSDIR)/SnippetHelloWorld/checked

build_SnippetHelloWorld_checked: postbuild_SnippetHelloWorld_checked
postbuild_SnippetHelloWorld_checked: mainbuild_SnippetHelloWorld_checked
mainbuild_SnippetHelloWorld_checked: prebuild_SnippetHelloWorld_checked $(SnippetHelloWorld_checked_bin)
prebuild_SnippetHelloWorld_checked:

$(SnippetHelloWorld_checked_bin): $(SnippetHelloWorld_checked_obj) build_SnippetUtils_checked 
	mkdir -p `dirname ./../../../Bin/android16/SnippetHelloWorldCHECKED`
	$(CCLD) $(SnippetHelloWorld_checked_obj) $(SnippetHelloWorld_checked_lflags) -o $(SnippetHelloWorld_checked_bin) 
	$(ECHO) building $@ complete!

SnippetHelloWorld_checked_DEPDIR = $(dir $(@))/$(*F)
$(SnippetHelloWorld_checked_cpp_o): $(SnippetHelloWorld_checked_objsdir)/%.o:
	$(ECHO) SnippetHelloWorld: compiling checked $(filter %$(strip $(subst .cpp.o,.cpp, $(subst $(SnippetHelloWorld_checked_objsdir),, $@))), $(SnippetHelloWorld_cppfiles))...
	mkdir -p $(dir $(@))
	$(CXX) $(SnippetHelloWorld_checked_cppflags) -c $(filter %$(strip $(subst .cpp.o,.cpp, $(subst $(SnippetHelloWorld_checked_objsdir),, $@))), $(SnippetHelloWorld_cppfiles)) -o $@
	@mkdir -p $(dir $(addprefix $(DEPSDIR)/SnippetHelloWorld/checked/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cpp.o,.cpp, $(subst $(SnippetHelloWorld_checked_objsdir),, $@))), $(SnippetHelloWorld_cppfiles))))))
	cp $(SnippetHelloWorld_checked_DEPDIR).d $(addprefix $(DEPSDIR)/SnippetHelloWorld/checked/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cpp.o,.cpp, $(subst $(SnippetHelloWorld_checked_objsdir),, $@))), $(SnippetHelloWorld_cppfiles))))).P; \
	  sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' \
		-e '/^$$/ d' -e 's/$$/ :/' < $(SnippetHelloWorld_checked_DEPDIR).d >> $(addprefix $(DEPSDIR)/SnippetHelloWorld/checked/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cpp.o,.cpp, $(subst $(SnippetHelloWorld_checked_objsdir),, $@))), $(SnippetHelloWorld_cppfiles))))).P; \
	  rm -f $(SnippetHelloWorld_checked_DEPDIR).d

$(SnippetHelloWorld_checked_cc_o): $(SnippetHelloWorld_checked_objsdir)/%.o:
	$(ECHO) SnippetHelloWorld: compiling checked $(filter %$(strip $(subst .cc.o,.cc, $(subst $(SnippetHelloWorld_checked_objsdir),, $@))), $(SnippetHelloWorld_ccfiles))...
	mkdir -p $(dir $(@))
	$(CXX) $(SnippetHelloWorld_checked_cppflags) -c $(filter %$(strip $(subst .cc.o,.cc, $(subst $(SnippetHelloWorld_checked_objsdir),, $@))), $(SnippetHelloWorld_ccfiles)) -o $@
	mkdir -p $(dir $(addprefix $(DEPSDIR)/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cc.o,.cc, $(subst $(SnippetHelloWorld_checked_objsdir),, $@))), $(SnippetHelloWorld_ccfiles))))))
	cp $(SnippetHelloWorld_checked_DEPDIR).d $(addprefix $(DEPSDIR)/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cc.o,.cc, $(subst $(SnippetHelloWorld_checked_objsdir),, $@))), $(SnippetHelloWorld_ccfiles))))).checked.P; \
	  sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' \
		-e '/^$$/ d' -e 's/$$/ :/' < $(SnippetHelloWorld_checked_DEPDIR).d >> $(addprefix $(DEPSDIR)/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cc.o,.cc, $(subst $(SnippetHelloWorld_checked_objsdir),, $@))), $(SnippetHelloWorld_ccfiles))))).checked.P; \
	  rm -f $(SnippetHelloWorld_checked_DEPDIR).d

$(SnippetHelloWorld_checked_c_o): $(SnippetHelloWorld_checked_objsdir)/%.o:
	$(ECHO) SnippetHelloWorld: compiling checked $(filter %$(strip $(subst .c.o,.c, $(subst $(SnippetHelloWorld_checked_objsdir),, $@))), $(SnippetHelloWorld_cfiles))...
	mkdir -p $(dir $(@))
	$(CC) $(SnippetHelloWorld_checked_cflags) -c $(filter %$(strip $(subst .c.o,.c, $(subst $(SnippetHelloWorld_checked_objsdir),, $@))), $(SnippetHelloWorld_cfiles)) -o $@ 
	@mkdir -p $(dir $(addprefix $(DEPSDIR)/SnippetHelloWorld/checked/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .c.o,.c, $(subst $(SnippetHelloWorld_checked_objsdir),, $@))), $(SnippetHelloWorld_cfiles))))))
	cp $(SnippetHelloWorld_checked_DEPDIR).d $(addprefix $(DEPSDIR)/SnippetHelloWorld/checked/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .c.o,.c, $(subst $(SnippetHelloWorld_checked_objsdir),, $@))), $(SnippetHelloWorld_cfiles))))).P; \
	  sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' \
		-e '/^$$/ d' -e 's/$$/ :/' < $(SnippetHelloWorld_checked_DEPDIR).d >> $(addprefix $(DEPSDIR)/SnippetHelloWorld/checked/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .c.o,.c, $(subst $(SnippetHelloWorld_checked_objsdir),, $@))), $(SnippetHelloWorld_cfiles))))).P; \
	  rm -f $(SnippetHelloWorld_checked_DEPDIR).d

SnippetHelloWorld_profile_hpaths    := 
SnippetHelloWorld_profile_hpaths    += ./../../../Include
SnippetHelloWorld_profile_hpaths    += ./../../../externals/android-ndk-r9d/sources/cxx-stl/gnu-libstdc++/4.8/include
SnippetHelloWorld_profile_hpaths    += ./../../../externals/android-ndk-r9d/sources/cxx-stl/gnu-libstdc++/4.8/libs/armeabi-v7a/include
SnippetHelloWorld_profile_lpaths    := 
SnippetHelloWorld_profile_lpaths    += ./../../../externals/nvToolsExt/1/lib/armv7
SnippetHelloWorld_profile_lpaths    += ./../../../Lib/android16
SnippetHelloWorld_profile_lpaths    += ./../../lib/android16
SnippetHelloWorld_profile_lpaths    += ./../../lib/android16
SnippetHelloWorld_profile_defines   := $(SnippetHelloWorld_custom_defines)
SnippetHelloWorld_profile_defines   += ANDROID
SnippetHelloWorld_profile_defines   += GLES2
SnippetHelloWorld_profile_defines   += __ARM_ARCH_5__
SnippetHelloWorld_profile_defines   += __ARM_ARCH_5T__
SnippetHelloWorld_profile_defines   += __ARM_ARCH_5E__
SnippetHelloWorld_profile_defines   += __ARM_ARCH_5TE__
SnippetHelloWorld_profile_defines   += NDEBUG
SnippetHelloWorld_profile_defines   += PX_PROFILE
SnippetHelloWorld_profile_defines   += PX_SUPPORT_VISUAL_DEBUGGER
SnippetHelloWorld_profile_defines   += PX_NVTX
SnippetHelloWorld_profile_defines   += PHYSX_PROFILE_SDK
SnippetHelloWorld_profile_libraries := 
SnippetHelloWorld_profile_libraries += SnippetUtilsPROFILE
SnippetHelloWorld_profile_libraries += log
SnippetHelloWorld_profile_libraries += gnustl_static
SnippetHelloWorld_profile_libraries += supc++
SnippetHelloWorld_profile_libraries += m
SnippetHelloWorld_profile_libraries += c
SnippetHelloWorld_profile_libraries += nvToolsExt
SnippetHelloWorld_profile_libraries += PhysX3CommonPROFILE
SnippetHelloWorld_profile_libraries += PhysX3PROFILE
SnippetHelloWorld_profile_libraries += PhysX3VehiclePROFILE
SnippetHelloWorld_profile_libraries += PhysX3CookingPROFILE
SnippetHelloWorld_profile_libraries += PhysX3ExtensionsPROFILE
SnippetHelloWorld_profile_libraries += PhysX3CharacterKinematicPROFILE
SnippetHelloWorld_profile_libraries += SnippetUtilsPROFILE
SnippetHelloWorld_profile_common_cflags	:= $(SnippetHelloWorld_custom_cflags)
SnippetHelloWorld_profile_common_cflags    += -MMD
SnippetHelloWorld_profile_common_cflags    += $(addprefix -D, $(SnippetHelloWorld_profile_defines))
SnippetHelloWorld_profile_common_cflags    += $(addprefix -I, $(SnippetHelloWorld_profile_hpaths))
SnippetHelloWorld_profile_common_cflags  += -Werror
SnippetHelloWorld_profile_common_cflags  += -fpic -fno-exceptions
SnippetHelloWorld_profile_common_cflags  += -isysroot ../../../externals/android-ndk-r9d/platforms/android-16/arch-arm
SnippetHelloWorld_profile_common_cflags  += -march=armv7-a -mfpu=neon -marm -mfloat-abi=softfp -mthumb-interwork
SnippetHelloWorld_profile_common_cflags  += -Wall -Wextra -Wpedantic -Wstrict-aliasing=2
SnippetHelloWorld_profile_common_cflags  += -Wno-long-long
SnippetHelloWorld_profile_common_cflags  += -Wno-invalid-offsetof -Wno-unknown-pragmas -Wno-maybe-uninitialized
SnippetHelloWorld_profile_common_cflags  += -Wno-unused-parameter
SnippetHelloWorld_profile_common_cflags  += -Wno-pedantic
SnippetHelloWorld_profile_common_cflags  += -O3 -fno-strict-aliasing
SnippetHelloWorld_profile_common_cflags  += -ffunction-sections -funwind-tables -fstack-protector
SnippetHelloWorld_profile_common_cflags  += -fno-omit-frame-pointer -funswitch-loops -finline-limit=300
SnippetHelloWorld_profile_cflags	:= $(SnippetHelloWorld_profile_common_cflags)
SnippetHelloWorld_profile_cppflags	:= $(SnippetHelloWorld_profile_common_cflags)
SnippetHelloWorld_profile_cppflags  += -fno-rtti
SnippetHelloWorld_profile_lflags    := $(SnippetHelloWorld_custom_lflags)
SnippetHelloWorld_profile_lflags    += $(addprefix -L, $(SnippetHelloWorld_profile_lpaths))
SnippetHelloWorld_profile_lflags    += -Wl,--start-group $(addprefix -l, $(SnippetHelloWorld_profile_libraries)) -Wl,--end-group
SnippetHelloWorld_profile_lflags  += --sysroot=../../../externals/android-ndk-r9d/platforms/android-16/arch-arm
SnippetHelloWorld_profile_lflags  += -Wl,--no-undefined
SnippetHelloWorld_profile_lflags  += -Wl,-z,noexecstack -L../../../externals/android-ndk-r9d/sources/cxx-stl/gnu-libstdc++/4.8/libs/armeabi-v7a -Wl,-rpath-link=../../../externals/android-ndk-r9d/platforms/android-16/arch-arm/usr/lib
SnippetHelloWorld_profile_objsdir  = $(OBJS_DIR)/SnippetHelloWorld_profile
SnippetHelloWorld_profile_cpp_o    = $(addprefix $(SnippetHelloWorld_profile_objsdir)/, $(subst ./, , $(subst ../, , $(patsubst %.cpp, %.cpp.o, $(SnippetHelloWorld_cppfiles)))))
SnippetHelloWorld_profile_cc_o    = $(addprefix $(SnippetHelloWorld_profile_objsdir)/, $(subst ./, , $(subst ../, , $(patsubst %.cc, %.cc.o, $(SnippetHelloWorld_ccfiles)))))
SnippetHelloWorld_profile_c_o      = $(addprefix $(SnippetHelloWorld_profile_objsdir)/, $(subst ./, , $(subst ../, , $(patsubst %.c, %.c.o, $(SnippetHelloWorld_cfiles)))))
SnippetHelloWorld_profile_obj      = $(SnippetHelloWorld_profile_cpp_o) $(SnippetHelloWorld_profile_cc_o) $(SnippetHelloWorld_profile_c_o)
SnippetHelloWorld_profile_bin      := ./../../../Bin/android16/SnippetHelloWorldPROFILE

clean_SnippetHelloWorld_profile: 
	@$(ECHO) clean SnippetHelloWorld profile
	@$(RMDIR) $(SnippetHelloWorld_profile_objsdir)
	@$(RMDIR) $(SnippetHelloWorld_profile_bin)
	@$(RMDIR) $(DEPSDIR)/SnippetHelloWorld/profile

build_SnippetHelloWorld_profile: postbuild_SnippetHelloWorld_profile
postbuild_SnippetHelloWorld_profile: mainbuild_SnippetHelloWorld_profile
mainbuild_SnippetHelloWorld_profile: prebuild_SnippetHelloWorld_profile $(SnippetHelloWorld_profile_bin)
prebuild_SnippetHelloWorld_profile:

$(SnippetHelloWorld_profile_bin): $(SnippetHelloWorld_profile_obj) build_SnippetUtils_profile 
	mkdir -p `dirname ./../../../Bin/android16/SnippetHelloWorldPROFILE`
	$(CCLD) $(SnippetHelloWorld_profile_obj) $(SnippetHelloWorld_profile_lflags) -o $(SnippetHelloWorld_profile_bin) 
	$(ECHO) building $@ complete!

SnippetHelloWorld_profile_DEPDIR = $(dir $(@))/$(*F)
$(SnippetHelloWorld_profile_cpp_o): $(SnippetHelloWorld_profile_objsdir)/%.o:
	$(ECHO) SnippetHelloWorld: compiling profile $(filter %$(strip $(subst .cpp.o,.cpp, $(subst $(SnippetHelloWorld_profile_objsdir),, $@))), $(SnippetHelloWorld_cppfiles))...
	mkdir -p $(dir $(@))
	$(CXX) $(SnippetHelloWorld_profile_cppflags) -c $(filter %$(strip $(subst .cpp.o,.cpp, $(subst $(SnippetHelloWorld_profile_objsdir),, $@))), $(SnippetHelloWorld_cppfiles)) -o $@
	@mkdir -p $(dir $(addprefix $(DEPSDIR)/SnippetHelloWorld/profile/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cpp.o,.cpp, $(subst $(SnippetHelloWorld_profile_objsdir),, $@))), $(SnippetHelloWorld_cppfiles))))))
	cp $(SnippetHelloWorld_profile_DEPDIR).d $(addprefix $(DEPSDIR)/SnippetHelloWorld/profile/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cpp.o,.cpp, $(subst $(SnippetHelloWorld_profile_objsdir),, $@))), $(SnippetHelloWorld_cppfiles))))).P; \
	  sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' \
		-e '/^$$/ d' -e 's/$$/ :/' < $(SnippetHelloWorld_profile_DEPDIR).d >> $(addprefix $(DEPSDIR)/SnippetHelloWorld/profile/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cpp.o,.cpp, $(subst $(SnippetHelloWorld_profile_objsdir),, $@))), $(SnippetHelloWorld_cppfiles))))).P; \
	  rm -f $(SnippetHelloWorld_profile_DEPDIR).d

$(SnippetHelloWorld_profile_cc_o): $(SnippetHelloWorld_profile_objsdir)/%.o:
	$(ECHO) SnippetHelloWorld: compiling profile $(filter %$(strip $(subst .cc.o,.cc, $(subst $(SnippetHelloWorld_profile_objsdir),, $@))), $(SnippetHelloWorld_ccfiles))...
	mkdir -p $(dir $(@))
	$(CXX) $(SnippetHelloWorld_profile_cppflags) -c $(filter %$(strip $(subst .cc.o,.cc, $(subst $(SnippetHelloWorld_profile_objsdir),, $@))), $(SnippetHelloWorld_ccfiles)) -o $@
	mkdir -p $(dir $(addprefix $(DEPSDIR)/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cc.o,.cc, $(subst $(SnippetHelloWorld_profile_objsdir),, $@))), $(SnippetHelloWorld_ccfiles))))))
	cp $(SnippetHelloWorld_profile_DEPDIR).d $(addprefix $(DEPSDIR)/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cc.o,.cc, $(subst $(SnippetHelloWorld_profile_objsdir),, $@))), $(SnippetHelloWorld_ccfiles))))).profile.P; \
	  sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' \
		-e '/^$$/ d' -e 's/$$/ :/' < $(SnippetHelloWorld_profile_DEPDIR).d >> $(addprefix $(DEPSDIR)/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cc.o,.cc, $(subst $(SnippetHelloWorld_profile_objsdir),, $@))), $(SnippetHelloWorld_ccfiles))))).profile.P; \
	  rm -f $(SnippetHelloWorld_profile_DEPDIR).d

$(SnippetHelloWorld_profile_c_o): $(SnippetHelloWorld_profile_objsdir)/%.o:
	$(ECHO) SnippetHelloWorld: compiling profile $(filter %$(strip $(subst .c.o,.c, $(subst $(SnippetHelloWorld_profile_objsdir),, $@))), $(SnippetHelloWorld_cfiles))...
	mkdir -p $(dir $(@))
	$(CC) $(SnippetHelloWorld_profile_cflags) -c $(filter %$(strip $(subst .c.o,.c, $(subst $(SnippetHelloWorld_profile_objsdir),, $@))), $(SnippetHelloWorld_cfiles)) -o $@ 
	@mkdir -p $(dir $(addprefix $(DEPSDIR)/SnippetHelloWorld/profile/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .c.o,.c, $(subst $(SnippetHelloWorld_profile_objsdir),, $@))), $(SnippetHelloWorld_cfiles))))))
	cp $(SnippetHelloWorld_profile_DEPDIR).d $(addprefix $(DEPSDIR)/SnippetHelloWorld/profile/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .c.o,.c, $(subst $(SnippetHelloWorld_profile_objsdir),, $@))), $(SnippetHelloWorld_cfiles))))).P; \
	  sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' \
		-e '/^$$/ d' -e 's/$$/ :/' < $(SnippetHelloWorld_profile_DEPDIR).d >> $(addprefix $(DEPSDIR)/SnippetHelloWorld/profile/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .c.o,.c, $(subst $(SnippetHelloWorld_profile_objsdir),, $@))), $(SnippetHelloWorld_cfiles))))).P; \
	  rm -f $(SnippetHelloWorld_profile_DEPDIR).d

SnippetHelloWorld_release_hpaths    := 
SnippetHelloWorld_release_hpaths    += ./../../../Include
SnippetHelloWorld_release_hpaths    += ./../../../externals/android-ndk-r9d/sources/cxx-stl/gnu-libstdc++/4.8/include
SnippetHelloWorld_release_hpaths    += ./../../../externals/android-ndk-r9d/sources/cxx-stl/gnu-libstdc++/4.8/libs/armeabi-v7a/include
SnippetHelloWorld_release_lpaths    := 
SnippetHelloWorld_release_lpaths    += ./../../../externals/nvToolsExt/1/lib/armv7
SnippetHelloWorld_release_lpaths    += ./../../../Lib/android16
SnippetHelloWorld_release_lpaths    += ./../../lib/android16
SnippetHelloWorld_release_lpaths    += ./../../lib/android16
SnippetHelloWorld_release_defines   := $(SnippetHelloWorld_custom_defines)
SnippetHelloWorld_release_defines   += ANDROID
SnippetHelloWorld_release_defines   += GLES2
SnippetHelloWorld_release_defines   += __ARM_ARCH_5__
SnippetHelloWorld_release_defines   += __ARM_ARCH_5T__
SnippetHelloWorld_release_defines   += __ARM_ARCH_5E__
SnippetHelloWorld_release_defines   += __ARM_ARCH_5TE__
SnippetHelloWorld_release_defines   += NDEBUG
SnippetHelloWorld_release_defines   += PHYSX_PROFILE_SDK
SnippetHelloWorld_release_libraries := 
SnippetHelloWorld_release_libraries += SnippetUtils
SnippetHelloWorld_release_libraries += log
SnippetHelloWorld_release_libraries += gnustl_static
SnippetHelloWorld_release_libraries += supc++
SnippetHelloWorld_release_libraries += m
SnippetHelloWorld_release_libraries += c
SnippetHelloWorld_release_libraries += nvToolsExt
SnippetHelloWorld_release_libraries += PhysX3Common
SnippetHelloWorld_release_libraries += PhysX3
SnippetHelloWorld_release_libraries += PhysX3Vehicle
SnippetHelloWorld_release_libraries += PhysX3Cooking
SnippetHelloWorld_release_libraries += PhysX3Extensions
SnippetHelloWorld_release_libraries += PhysX3CharacterKinematic
SnippetHelloWorld_release_libraries += SnippetUtils
SnippetHelloWorld_release_common_cflags	:= $(SnippetHelloWorld_custom_cflags)
SnippetHelloWorld_release_common_cflags    += -MMD
SnippetHelloWorld_release_common_cflags    += $(addprefix -D, $(SnippetHelloWorld_release_defines))
SnippetHelloWorld_release_common_cflags    += $(addprefix -I, $(SnippetHelloWorld_release_hpaths))
SnippetHelloWorld_release_common_cflags  += -Werror
SnippetHelloWorld_release_common_cflags  += -fpic -fno-exceptions
SnippetHelloWorld_release_common_cflags  += -isysroot ../../../externals/android-ndk-r9d/platforms/android-16/arch-arm
SnippetHelloWorld_release_common_cflags  += -march=armv7-a -mfpu=neon -marm -mfloat-abi=softfp -mthumb-interwork
SnippetHelloWorld_release_common_cflags  += -Wall -Wextra -Wpedantic -Wstrict-aliasing=2
SnippetHelloWorld_release_common_cflags  += -Wno-long-long
SnippetHelloWorld_release_common_cflags  += -Wno-invalid-offsetof -Wno-unknown-pragmas -Wno-maybe-uninitialized
SnippetHelloWorld_release_common_cflags  += -Wno-unused-parameter
SnippetHelloWorld_release_common_cflags  += -Wno-pedantic
SnippetHelloWorld_release_common_cflags  += -O3 -fno-strict-aliasing
SnippetHelloWorld_release_common_cflags  += -ffunction-sections -funwind-tables -fstack-protector
SnippetHelloWorld_release_common_cflags  += -fomit-frame-pointer -funswitch-loops -finline-limit=300
SnippetHelloWorld_release_cflags	:= $(SnippetHelloWorld_release_common_cflags)
SnippetHelloWorld_release_cppflags	:= $(SnippetHelloWorld_release_common_cflags)
SnippetHelloWorld_release_cppflags  += -fno-rtti
SnippetHelloWorld_release_lflags    := $(SnippetHelloWorld_custom_lflags)
SnippetHelloWorld_release_lflags    += $(addprefix -L, $(SnippetHelloWorld_release_lpaths))
SnippetHelloWorld_release_lflags    += -Wl,--start-group $(addprefix -l, $(SnippetHelloWorld_release_libraries)) -Wl,--end-group
SnippetHelloWorld_release_lflags  += --sysroot=../../../externals/android-ndk-r9d/platforms/android-16/arch-arm
SnippetHelloWorld_release_lflags  += -Wl,--no-undefined
SnippetHelloWorld_release_lflags  += -Wl,-z,noexecstack -L../../../externals/android-ndk-r9d/sources/cxx-stl/gnu-libstdc++/4.8/libs/armeabi-v7a -Wl,-rpath-link=../../../externals/android-ndk-r9d/platforms/android-16/arch-arm/usr/lib
SnippetHelloWorld_release_objsdir  = $(OBJS_DIR)/SnippetHelloWorld_release
SnippetHelloWorld_release_cpp_o    = $(addprefix $(SnippetHelloWorld_release_objsdir)/, $(subst ./, , $(subst ../, , $(patsubst %.cpp, %.cpp.o, $(SnippetHelloWorld_cppfiles)))))
SnippetHelloWorld_release_cc_o    = $(addprefix $(SnippetHelloWorld_release_objsdir)/, $(subst ./, , $(subst ../, , $(patsubst %.cc, %.cc.o, $(SnippetHelloWorld_ccfiles)))))
SnippetHelloWorld_release_c_o      = $(addprefix $(SnippetHelloWorld_release_objsdir)/, $(subst ./, , $(subst ../, , $(patsubst %.c, %.c.o, $(SnippetHelloWorld_cfiles)))))
SnippetHelloWorld_release_obj      = $(SnippetHelloWorld_release_cpp_o) $(SnippetHelloWorld_release_cc_o) $(SnippetHelloWorld_release_c_o)
SnippetHelloWorld_release_bin      := ./../../../Bin/android16/SnippetHelloWorld

clean_SnippetHelloWorld_release: 
	@$(ECHO) clean SnippetHelloWorld release
	@$(RMDIR) $(SnippetHelloWorld_release_objsdir)
	@$(RMDIR) $(SnippetHelloWorld_release_bin)
	@$(RMDIR) $(DEPSDIR)/SnippetHelloWorld/release

build_SnippetHelloWorld_release: postbuild_SnippetHelloWorld_release
postbuild_SnippetHelloWorld_release: mainbuild_SnippetHelloWorld_release
mainbuild_SnippetHelloWorld_release: prebuild_SnippetHelloWorld_release $(SnippetHelloWorld_release_bin)
prebuild_SnippetHelloWorld_release:

$(SnippetHelloWorld_release_bin): $(SnippetHelloWorld_release_obj) build_SnippetUtils_release 
	mkdir -p `dirname ./../../../Bin/android16/SnippetHelloWorld`
	$(CCLD) $(SnippetHelloWorld_release_obj) $(SnippetHelloWorld_release_lflags) -o $(SnippetHelloWorld_release_bin) 
	$(ECHO) building $@ complete!

SnippetHelloWorld_release_DEPDIR = $(dir $(@))/$(*F)
$(SnippetHelloWorld_release_cpp_o): $(SnippetHelloWorld_release_objsdir)/%.o:
	$(ECHO) SnippetHelloWorld: compiling release $(filter %$(strip $(subst .cpp.o,.cpp, $(subst $(SnippetHelloWorld_release_objsdir),, $@))), $(SnippetHelloWorld_cppfiles))...
	mkdir -p $(dir $(@))
	$(CXX) $(SnippetHelloWorld_release_cppflags) -c $(filter %$(strip $(subst .cpp.o,.cpp, $(subst $(SnippetHelloWorld_release_objsdir),, $@))), $(SnippetHelloWorld_cppfiles)) -o $@
	@mkdir -p $(dir $(addprefix $(DEPSDIR)/SnippetHelloWorld/release/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cpp.o,.cpp, $(subst $(SnippetHelloWorld_release_objsdir),, $@))), $(SnippetHelloWorld_cppfiles))))))
	cp $(SnippetHelloWorld_release_DEPDIR).d $(addprefix $(DEPSDIR)/SnippetHelloWorld/release/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cpp.o,.cpp, $(subst $(SnippetHelloWorld_release_objsdir),, $@))), $(SnippetHelloWorld_cppfiles))))).P; \
	  sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' \
		-e '/^$$/ d' -e 's/$$/ :/' < $(SnippetHelloWorld_release_DEPDIR).d >> $(addprefix $(DEPSDIR)/SnippetHelloWorld/release/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cpp.o,.cpp, $(subst $(SnippetHelloWorld_release_objsdir),, $@))), $(SnippetHelloWorld_cppfiles))))).P; \
	  rm -f $(SnippetHelloWorld_release_DEPDIR).d

$(SnippetHelloWorld_release_cc_o): $(SnippetHelloWorld_release_objsdir)/%.o:
	$(ECHO) SnippetHelloWorld: compiling release $(filter %$(strip $(subst .cc.o,.cc, $(subst $(SnippetHelloWorld_release_objsdir),, $@))), $(SnippetHelloWorld_ccfiles))...
	mkdir -p $(dir $(@))
	$(CXX) $(SnippetHelloWorld_release_cppflags) -c $(filter %$(strip $(subst .cc.o,.cc, $(subst $(SnippetHelloWorld_release_objsdir),, $@))), $(SnippetHelloWorld_ccfiles)) -o $@
	mkdir -p $(dir $(addprefix $(DEPSDIR)/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cc.o,.cc, $(subst $(SnippetHelloWorld_release_objsdir),, $@))), $(SnippetHelloWorld_ccfiles))))))
	cp $(SnippetHelloWorld_release_DEPDIR).d $(addprefix $(DEPSDIR)/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cc.o,.cc, $(subst $(SnippetHelloWorld_release_objsdir),, $@))), $(SnippetHelloWorld_ccfiles))))).release.P; \
	  sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' \
		-e '/^$$/ d' -e 's/$$/ :/' < $(SnippetHelloWorld_release_DEPDIR).d >> $(addprefix $(DEPSDIR)/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cc.o,.cc, $(subst $(SnippetHelloWorld_release_objsdir),, $@))), $(SnippetHelloWorld_ccfiles))))).release.P; \
	  rm -f $(SnippetHelloWorld_release_DEPDIR).d

$(SnippetHelloWorld_release_c_o): $(SnippetHelloWorld_release_objsdir)/%.o:
	$(ECHO) SnippetHelloWorld: compiling release $(filter %$(strip $(subst .c.o,.c, $(subst $(SnippetHelloWorld_release_objsdir),, $@))), $(SnippetHelloWorld_cfiles))...
	mkdir -p $(dir $(@))
	$(CC) $(SnippetHelloWorld_release_cflags) -c $(filter %$(strip $(subst .c.o,.c, $(subst $(SnippetHelloWorld_release_objsdir),, $@))), $(SnippetHelloWorld_cfiles)) -o $@ 
	@mkdir -p $(dir $(addprefix $(DEPSDIR)/SnippetHelloWorld/release/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .c.o,.c, $(subst $(SnippetHelloWorld_release_objsdir),, $@))), $(SnippetHelloWorld_cfiles))))))
	cp $(SnippetHelloWorld_release_DEPDIR).d $(addprefix $(DEPSDIR)/SnippetHelloWorld/release/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .c.o,.c, $(subst $(SnippetHelloWorld_release_objsdir),, $@))), $(SnippetHelloWorld_cfiles))))).P; \
	  sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' \
		-e '/^$$/ d' -e 's/$$/ :/' < $(SnippetHelloWorld_release_DEPDIR).d >> $(addprefix $(DEPSDIR)/SnippetHelloWorld/release/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .c.o,.c, $(subst $(SnippetHelloWorld_release_objsdir),, $@))), $(SnippetHelloWorld_cfiles))))).P; \
	  rm -f $(SnippetHelloWorld_release_DEPDIR).d

clean_SnippetHelloWorld:  clean_SnippetHelloWorld_debug clean_SnippetHelloWorld_checked clean_SnippetHelloWorld_profile clean_SnippetHelloWorld_release
	rm -rf $(DEPSDIR)

export VERBOSE
ifndef VERBOSE
.SILENT:
endif
