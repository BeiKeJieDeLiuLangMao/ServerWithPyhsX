# Makefile generated by XPJ for osx64
-include Makefile.custom
ProjectName = PhysXVehicle
PhysXVehicle_custom_cflags := -isysroot $(APPLE_OSX_SDK_CURRENT_VERSION)
PhysXVehicle_custom_lflags := -isysroot $(APPLE_OSX_SDK_CURRENT_VERSION)
PhysXVehicle_cppfiles   += ./../../PhysXVehicle/src/PxVehicleComponents.cpp
PhysXVehicle_cppfiles   += ./../../PhysXVehicle/src/PxVehicleDrive.cpp
PhysXVehicle_cppfiles   += ./../../PhysXVehicle/src/PxVehicleDrive4W.cpp
PhysXVehicle_cppfiles   += ./../../PhysXVehicle/src/PxVehicleDriveNW.cpp
PhysXVehicle_cppfiles   += ./../../PhysXVehicle/src/PxVehicleDriveTank.cpp
PhysXVehicle_cppfiles   += ./../../PhysXVehicle/src/PxVehicleMetaData.cpp
PhysXVehicle_cppfiles   += ./../../PhysXVehicle/src/PxVehicleNoDrive.cpp
PhysXVehicle_cppfiles   += ./../../PhysXVehicle/src/PxVehicleSDK.cpp
PhysXVehicle_cppfiles   += ./../../PhysXVehicle/src/PxVehicleSerialization.cpp
PhysXVehicle_cppfiles   += ./../../PhysXVehicle/src/PxVehicleSuspWheelTire4.cpp
PhysXVehicle_cppfiles   += ./../../PhysXVehicle/src/PxVehicleTireFriction.cpp
PhysXVehicle_cppfiles   += ./../../PhysXVehicle/src/PxVehicleUpdate.cpp
PhysXVehicle_cppfiles   += ./../../PhysXVehicle/src/PxVehicleWheels.cpp
PhysXVehicle_cppfiles   += ./../../PhysXVehicle/src/VehicleUtilControl.cpp
PhysXVehicle_cppfiles   += ./../../PhysXVehicle/src/VehicleUtilSetup.cpp
PhysXVehicle_cppfiles   += ./../../PhysXVehicle/src/VehicleUtilTelemetry.cpp
PhysXVehicle_cppfiles   += ./../../PhysXVehicle/src/PhysXMetaData/src/PxVehicleAutoGeneratedMetaDataObjects.cpp
PhysXVehicle_cppfiles   += ./../../PhysXVehicle/src/PhysXMetaData/src/PxVehicleMetaDataObjects.cpp

PhysXVehicle_cpp_debug_dep    = $(addprefix $(DEPSDIR)/PhysXVehicle/debug/, $(subst ./, , $(subst ../, , $(patsubst %.cpp, %.cpp.P, $(PhysXVehicle_cppfiles)))))
PhysXVehicle_cc_debug_dep    = $(addprefix $(DEPSDIR)/, $(subst ./, , $(subst ../, , $(patsubst %.cc, %.cc.debug.P, $(PhysXVehicle_ccfiles)))))
PhysXVehicle_c_debug_dep      = $(addprefix $(DEPSDIR)/PhysXVehicle/debug/, $(subst ./, , $(subst ../, , $(patsubst %.c, %.c.P, $(PhysXVehicle_cfiles)))))
PhysXVehicle_debug_dep      = $(PhysXVehicle_cpp_debug_dep) $(PhysXVehicle_cc_debug_dep) $(PhysXVehicle_c_debug_dep)
-include $(PhysXVehicle_debug_dep)
PhysXVehicle_cpp_checked_dep    = $(addprefix $(DEPSDIR)/PhysXVehicle/checked/, $(subst ./, , $(subst ../, , $(patsubst %.cpp, %.cpp.P, $(PhysXVehicle_cppfiles)))))
PhysXVehicle_cc_checked_dep    = $(addprefix $(DEPSDIR)/, $(subst ./, , $(subst ../, , $(patsubst %.cc, %.cc.checked.P, $(PhysXVehicle_ccfiles)))))
PhysXVehicle_c_checked_dep      = $(addprefix $(DEPSDIR)/PhysXVehicle/checked/, $(subst ./, , $(subst ../, , $(patsubst %.c, %.c.P, $(PhysXVehicle_cfiles)))))
PhysXVehicle_checked_dep      = $(PhysXVehicle_cpp_checked_dep) $(PhysXVehicle_cc_checked_dep) $(PhysXVehicle_c_checked_dep)
-include $(PhysXVehicle_checked_dep)
PhysXVehicle_cpp_profile_dep    = $(addprefix $(DEPSDIR)/PhysXVehicle/profile/, $(subst ./, , $(subst ../, , $(patsubst %.cpp, %.cpp.P, $(PhysXVehicle_cppfiles)))))
PhysXVehicle_cc_profile_dep    = $(addprefix $(DEPSDIR)/, $(subst ./, , $(subst ../, , $(patsubst %.cc, %.cc.profile.P, $(PhysXVehicle_ccfiles)))))
PhysXVehicle_c_profile_dep      = $(addprefix $(DEPSDIR)/PhysXVehicle/profile/, $(subst ./, , $(subst ../, , $(patsubst %.c, %.c.P, $(PhysXVehicle_cfiles)))))
PhysXVehicle_profile_dep      = $(PhysXVehicle_cpp_profile_dep) $(PhysXVehicle_cc_profile_dep) $(PhysXVehicle_c_profile_dep)
-include $(PhysXVehicle_profile_dep)
PhysXVehicle_cpp_release_dep    = $(addprefix $(DEPSDIR)/PhysXVehicle/release/, $(subst ./, , $(subst ../, , $(patsubst %.cpp, %.cpp.P, $(PhysXVehicle_cppfiles)))))
PhysXVehicle_cc_release_dep    = $(addprefix $(DEPSDIR)/, $(subst ./, , $(subst ../, , $(patsubst %.cc, %.cc.release.P, $(PhysXVehicle_ccfiles)))))
PhysXVehicle_c_release_dep      = $(addprefix $(DEPSDIR)/PhysXVehicle/release/, $(subst ./, , $(subst ../, , $(patsubst %.c, %.c.P, $(PhysXVehicle_cfiles)))))
PhysXVehicle_release_dep      = $(PhysXVehicle_cpp_release_dep) $(PhysXVehicle_cc_release_dep) $(PhysXVehicle_c_release_dep)
-include $(PhysXVehicle_release_dep)
PhysXVehicle_debug_hpaths    := 
PhysXVehicle_debug_hpaths    += ./../../../Include/foundation
PhysXVehicle_debug_hpaths    += ./../../foundation/include
PhysXVehicle_debug_hpaths    += ./../../../Include/physxprofilesdk
PhysXVehicle_debug_hpaths    += ./../../../Include/physxvisualdebuggersdk
PhysXVehicle_debug_hpaths    += ./../../../Include/vehicle
PhysXVehicle_debug_hpaths    += ./../../../Include/common
PhysXVehicle_debug_hpaths    += ./../../../Include/geometry
PhysXVehicle_debug_hpaths    += ./../../../Include/extensions
PhysXVehicle_debug_hpaths    += ./../../../Include/cloth
PhysXVehicle_debug_hpaths    += ./../../../Include
PhysXVehicle_debug_hpaths    += ./../../../Include/physxvisualdebuggersdk
PhysXVehicle_debug_hpaths    += ./../../../Include/physxprofilesdk
PhysXVehicle_debug_hpaths    += ./../../Common/src
PhysXVehicle_debug_hpaths    += ./../../PhysXVehicle/src
PhysXVehicle_debug_hpaths    += ./../../PhysXProfileSDK
PhysXVehicle_debug_hpaths    += ./../../PhysXMetaData/extensions/include
PhysXVehicle_debug_hpaths    += ./../../PhysXExtensions/src/serialization/Xml
PhysXVehicle_debug_hpaths    += ./../../PhysXMetaData/core/include
PhysXVehicle_debug_hpaths    += ./../../PhysXVehicle/src/PhysXMetaData/include
PhysXVehicle_debug_lpaths    := 
PhysXVehicle_debug_defines   := $(PhysXVehicle_custom_defines)
PhysXVehicle_debug_defines   += PX_PHYSX_STATIC_LIB
PhysXVehicle_debug_defines   += _DEBUG
PhysXVehicle_debug_defines   += PX_DEBUG
PhysXVehicle_debug_defines   += PX_CHECKED
PhysXVehicle_debug_defines   += PX_SUPPORT_VISUAL_DEBUGGER
PhysXVehicle_debug_libraries := 
PhysXVehicle_debug_common_cflags	:= $(PhysXVehicle_custom_cflags)
PhysXVehicle_debug_common_cflags    += -MMD
PhysXVehicle_debug_common_cflags    += $(addprefix -D, $(PhysXVehicle_debug_defines))
PhysXVehicle_debug_common_cflags    += $(addprefix -I, $(PhysXVehicle_debug_hpaths))
PhysXVehicle_debug_cflags	:= $(PhysXVehicle_debug_common_cflags)
PhysXVehicle_debug_cflags  += -arch x86_64
PhysXVehicle_debug_cflags  += -pipe -mmacosx-version-min=10.5 -msse2 -ffast-math -fno-exceptions -fno-rtti -fvisibility=hidden -fvisibility-inlines-hidden -Werror
PhysXVehicle_debug_cflags  += -Wall -Wextra -Wstrict-aliasing=2 -Weverything
PhysXVehicle_debug_cflags  += -Wno-pedantic -Wno-unknown-warning-option
PhysXVehicle_debug_cflags  += -Wno-long-long -Wno-newline-eof -Wno-extended-offsetof
PhysXVehicle_debug_cflags  += -Wno-float-equal -Wno-documentation-deprecated-sync -Wno-conversion -Wno-weak-vtables -Wno-unreachable-code -Wno-format-nonliteral -Wno-cast-align -Wno-documentation -Wno-covered-switch-default -Wno-documentation-unknown-command -Wno-padded -Wno-old-style-cast
PhysXVehicle_debug_cflags  += -Wno-unknown-pragmas -Wno-invalid-offsetof
PhysXVehicle_debug_cflags  += -Wno-unused-parameter
PhysXVehicle_debug_cflags  += -Wno-global-constructors -Wno-exit-time-destructors -Wno-weak-template-vtables -Wno-shift-sign-overflow -Wno-missing-noreturn -Wno-missing-variable-declarations -Wno-switch-enum -Wno-undef -Wno-unused-macros -Wno-c99-extensions -Wno-missing-prototypes -Wno-shadow -Wno-unused-member-function -Wno-used-but-marked-unused -Wno-header-hygiene -Wno-variadic-macros -Wno-old-style-cast
PhysXVehicle_debug_cflags  += -g3 -gdwarf-2 -O0
PhysXVehicle_debug_cppflags	:= $(PhysXVehicle_debug_common_cflags)
PhysXVehicle_debug_cppflags  += -arch x86_64
PhysXVehicle_debug_cppflags  += -pipe -mmacosx-version-min=10.5 -msse2 -ffast-math -fno-exceptions -fno-rtti -fvisibility=hidden -fvisibility-inlines-hidden -Werror
PhysXVehicle_debug_cppflags  += -Wall -Wextra -Wstrict-aliasing=2 -Weverything
PhysXVehicle_debug_cppflags  += -Wno-pedantic -Wno-unknown-warning-option
PhysXVehicle_debug_cppflags  += -Wno-long-long -Wno-newline-eof -Wno-extended-offsetof
PhysXVehicle_debug_cppflags  += -Wno-float-equal -Wno-documentation-deprecated-sync -Wno-conversion -Wno-weak-vtables -Wno-unreachable-code -Wno-format-nonliteral -Wno-cast-align -Wno-documentation -Wno-covered-switch-default -Wno-documentation-unknown-command -Wno-padded -Wno-old-style-cast
PhysXVehicle_debug_cppflags  += -Wno-unknown-pragmas -Wno-invalid-offsetof
PhysXVehicle_debug_cppflags  += -Wno-unused-parameter
PhysXVehicle_debug_cppflags  += -Wno-global-constructors -Wno-exit-time-destructors -Wno-weak-template-vtables -Wno-shift-sign-overflow -Wno-missing-noreturn -Wno-missing-variable-declarations -Wno-switch-enum -Wno-undef -Wno-unused-macros -Wno-c99-extensions -Wno-missing-prototypes -Wno-shadow -Wno-unused-member-function -Wno-used-but-marked-unused -Wno-header-hygiene -Wno-variadic-macros -Wno-old-style-cast
PhysXVehicle_debug_cppflags  += -g3 -gdwarf-2 -O0
PhysXVehicle_debug_lflags    := $(PhysXVehicle_custom_lflags)
PhysXVehicle_debug_lflags    += $(addprefix -L, $(PhysXVehicle_debug_lpaths))
PhysXVehicle_debug_lflags  += $(addprefix -l, $(PhysXVehicle_debug_libraries))
PhysXVehicle_debug_lflags  += -arch x86_64
PhysXVehicle_debug_objsdir  = $(OBJS_DIR)/PhysXVehicle_debug
PhysXVehicle_debug_cpp_o    = $(addprefix $(PhysXVehicle_debug_objsdir)/, $(subst ./, , $(subst ../, , $(patsubst %.cpp, %.cpp.o, $(PhysXVehicle_cppfiles)))))
PhysXVehicle_debug_cc_o    = $(addprefix $(PhysXVehicle_debug_objsdir)/, $(subst ./, , $(subst ../, , $(patsubst %.cc, %.cc.o, $(PhysXVehicle_ccfiles)))))
PhysXVehicle_debug_c_o      = $(addprefix $(PhysXVehicle_debug_objsdir)/, $(subst ./, , $(subst ../, , $(patsubst %.c, %.c.o, $(PhysXVehicle_cfiles)))))
PhysXVehicle_debug_obj      = $(PhysXVehicle_debug_cpp_o) $(PhysXVehicle_debug_cc_o) $(PhysXVehicle_debug_c_o)
PhysXVehicle_debug_bin      := ./../../../Lib/osx64/libPhysX3VehicleDEBUG.a

clean_PhysXVehicle_debug: 
	@$(ECHO) clean PhysXVehicle debug
	@$(RMDIR) $(PhysXVehicle_debug_objsdir)
	@$(RMDIR) $(PhysXVehicle_debug_bin)
	@$(RMDIR) $(DEPSDIR)/PhysXVehicle/debug

build_PhysXVehicle_debug: postbuild_PhysXVehicle_debug
postbuild_PhysXVehicle_debug: mainbuild_PhysXVehicle_debug
mainbuild_PhysXVehicle_debug: prebuild_PhysXVehicle_debug $(PhysXVehicle_debug_bin)
prebuild_PhysXVehicle_debug:

$(PhysXVehicle_debug_bin): $(PhysXVehicle_debug_obj) 
	mkdir -p `dirname ./../../../Lib/osx64/libPhysX3VehicleDEBUG.a`
	@$(AR) rcs $(PhysXVehicle_debug_bin) $(PhysXVehicle_debug_obj)
	$(ECHO) building $@ complete!

PhysXVehicle_debug_DEPDIR = $(dir $(@))/$(*F)
$(PhysXVehicle_debug_cpp_o): $(PhysXVehicle_debug_objsdir)/%.o:
	$(ECHO) PhysXVehicle: compiling debug $(filter %$(strip $(subst .cpp.o,.cpp, $(subst $(PhysXVehicle_debug_objsdir),, $@))), $(PhysXVehicle_cppfiles))...
	mkdir -p $(dir $(@))
	$(CXX) $(PhysXVehicle_debug_cppflags) -c $(filter %$(strip $(subst .cpp.o,.cpp, $(subst $(PhysXVehicle_debug_objsdir),, $@))), $(PhysXVehicle_cppfiles)) -o $@
	@mkdir -p $(dir $(addprefix $(DEPSDIR)/PhysXVehicle/debug/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cpp.o,.cpp, $(subst $(PhysXVehicle_debug_objsdir),, $@))), $(PhysXVehicle_cppfiles))))))
	cp $(PhysXVehicle_debug_DEPDIR).d $(addprefix $(DEPSDIR)/PhysXVehicle/debug/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cpp.o,.cpp, $(subst $(PhysXVehicle_debug_objsdir),, $@))), $(PhysXVehicle_cppfiles))))).P; \
	  sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' \
		-e '/^$$/ d' -e 's/$$/ :/' < $(PhysXVehicle_debug_DEPDIR).d >> $(addprefix $(DEPSDIR)/PhysXVehicle/debug/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cpp.o,.cpp, $(subst $(PhysXVehicle_debug_objsdir),, $@))), $(PhysXVehicle_cppfiles))))).P; \
	  rm -f $(PhysXVehicle_debug_DEPDIR).d

$(PhysXVehicle_debug_cc_o): $(PhysXVehicle_debug_objsdir)/%.o:
	$(ECHO) PhysXVehicle: compiling debug $(filter %$(strip $(subst .cc.o,.cc, $(subst $(PhysXVehicle_debug_objsdir),, $@))), $(PhysXVehicle_ccfiles))...
	mkdir -p $(dir $(@))
	$(CXX) $(PhysXVehicle_debug_cppflags) -c $(filter %$(strip $(subst .cc.o,.cc, $(subst $(PhysXVehicle_debug_objsdir),, $@))), $(PhysXVehicle_ccfiles)) -o $@
	mkdir -p $(dir $(addprefix $(DEPSDIR)/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cc.o,.cc, $(subst $(PhysXVehicle_debug_objsdir),, $@))), $(PhysXVehicle_ccfiles))))))
	cp $(PhysXVehicle_debug_DEPDIR).d $(addprefix $(DEPSDIR)/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cc.o,.cc, $(subst $(PhysXVehicle_debug_objsdir),, $@))), $(PhysXVehicle_ccfiles))))).debug.P; \
	  sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' \
		-e '/^$$/ d' -e 's/$$/ :/' < $(PhysXVehicle_debug_DEPDIR).d >> $(addprefix $(DEPSDIR)/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cc.o,.cc, $(subst $(PhysXVehicle_debug_objsdir),, $@))), $(PhysXVehicle_ccfiles))))).debug.P; \
	  rm -f $(PhysXVehicle_debug_DEPDIR).d

$(PhysXVehicle_debug_c_o): $(PhysXVehicle_debug_objsdir)/%.o:
	$(ECHO) PhysXVehicle: compiling debug $(filter %$(strip $(subst .c.o,.c, $(subst $(PhysXVehicle_debug_objsdir),, $@))), $(PhysXVehicle_cfiles))...
	mkdir -p $(dir $(@))
	$(CC) $(PhysXVehicle_debug_cflags) -c $(filter %$(strip $(subst .c.o,.c, $(subst $(PhysXVehicle_debug_objsdir),, $@))), $(PhysXVehicle_cfiles)) -o $@ 
	@mkdir -p $(dir $(addprefix $(DEPSDIR)/PhysXVehicle/debug/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .c.o,.c, $(subst $(PhysXVehicle_debug_objsdir),, $@))), $(PhysXVehicle_cfiles))))))
	cp $(PhysXVehicle_debug_DEPDIR).d $(addprefix $(DEPSDIR)/PhysXVehicle/debug/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .c.o,.c, $(subst $(PhysXVehicle_debug_objsdir),, $@))), $(PhysXVehicle_cfiles))))).P; \
	  sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' \
		-e '/^$$/ d' -e 's/$$/ :/' < $(PhysXVehicle_debug_DEPDIR).d >> $(addprefix $(DEPSDIR)/PhysXVehicle/debug/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .c.o,.c, $(subst $(PhysXVehicle_debug_objsdir),, $@))), $(PhysXVehicle_cfiles))))).P; \
	  rm -f $(PhysXVehicle_debug_DEPDIR).d

PhysXVehicle_checked_hpaths    := 
PhysXVehicle_checked_hpaths    += ./../../../Include/foundation
PhysXVehicle_checked_hpaths    += ./../../foundation/include
PhysXVehicle_checked_hpaths    += ./../../../Include/physxprofilesdk
PhysXVehicle_checked_hpaths    += ./../../../Include/physxvisualdebuggersdk
PhysXVehicle_checked_hpaths    += ./../../../Include/vehicle
PhysXVehicle_checked_hpaths    += ./../../../Include/common
PhysXVehicle_checked_hpaths    += ./../../../Include/geometry
PhysXVehicle_checked_hpaths    += ./../../../Include/extensions
PhysXVehicle_checked_hpaths    += ./../../../Include/cloth
PhysXVehicle_checked_hpaths    += ./../../../Include
PhysXVehicle_checked_hpaths    += ./../../../Include/physxvisualdebuggersdk
PhysXVehicle_checked_hpaths    += ./../../../Include/physxprofilesdk
PhysXVehicle_checked_hpaths    += ./../../Common/src
PhysXVehicle_checked_hpaths    += ./../../PhysXVehicle/src
PhysXVehicle_checked_hpaths    += ./../../PhysXProfileSDK
PhysXVehicle_checked_hpaths    += ./../../PhysXMetaData/extensions/include
PhysXVehicle_checked_hpaths    += ./../../PhysXExtensions/src/serialization/Xml
PhysXVehicle_checked_hpaths    += ./../../PhysXMetaData/core/include
PhysXVehicle_checked_hpaths    += ./../../PhysXVehicle/src/PhysXMetaData/include
PhysXVehicle_checked_lpaths    := 
PhysXVehicle_checked_defines   := $(PhysXVehicle_custom_defines)
PhysXVehicle_checked_defines   += PX_PHYSX_STATIC_LIB
PhysXVehicle_checked_defines   += NDEBUG
PhysXVehicle_checked_defines   += PX_CHECKED
PhysXVehicle_checked_defines   += PX_SUPPORT_VISUAL_DEBUGGER
PhysXVehicle_checked_libraries := 
PhysXVehicle_checked_common_cflags	:= $(PhysXVehicle_custom_cflags)
PhysXVehicle_checked_common_cflags    += -MMD
PhysXVehicle_checked_common_cflags    += $(addprefix -D, $(PhysXVehicle_checked_defines))
PhysXVehicle_checked_common_cflags    += $(addprefix -I, $(PhysXVehicle_checked_hpaths))
PhysXVehicle_checked_cflags	:= $(PhysXVehicle_checked_common_cflags)
PhysXVehicle_checked_cflags  += -arch x86_64
PhysXVehicle_checked_cflags  += -pipe -mmacosx-version-min=10.5 -msse2 -ffast-math -fno-exceptions -fno-rtti -fvisibility=hidden -fvisibility-inlines-hidden -Werror
PhysXVehicle_checked_cflags  += -Wall -Wextra -Wstrict-aliasing=2 -Weverything
PhysXVehicle_checked_cflags  += -Wno-pedantic -Wno-unknown-warning-option
PhysXVehicle_checked_cflags  += -Wno-long-long -Wno-newline-eof -Wno-extended-offsetof
PhysXVehicle_checked_cflags  += -Wno-float-equal -Wno-documentation-deprecated-sync -Wno-conversion -Wno-weak-vtables -Wno-unreachable-code -Wno-format-nonliteral -Wno-cast-align -Wno-documentation -Wno-covered-switch-default -Wno-documentation-unknown-command -Wno-padded -Wno-old-style-cast
PhysXVehicle_checked_cflags  += -Wno-unknown-pragmas -Wno-invalid-offsetof
PhysXVehicle_checked_cflags  += -Wno-unused-parameter
PhysXVehicle_checked_cflags  += -Wno-global-constructors -Wno-exit-time-destructors -Wno-weak-template-vtables -Wno-shift-sign-overflow -Wno-missing-noreturn -Wno-missing-variable-declarations -Wno-switch-enum -Wno-undef -Wno-unused-macros -Wno-c99-extensions -Wno-missing-prototypes -Wno-shadow -Wno-unused-member-function -Wno-used-but-marked-unused -Wno-header-hygiene -Wno-variadic-macros -Wno-old-style-cast
PhysXVehicle_checked_cflags  += -g3 -gdwarf-2 -O3 -fno-strict-aliasing
PhysXVehicle_checked_cppflags	:= $(PhysXVehicle_checked_common_cflags)
PhysXVehicle_checked_cppflags  += -arch x86_64
PhysXVehicle_checked_cppflags  += -pipe -mmacosx-version-min=10.5 -msse2 -ffast-math -fno-exceptions -fno-rtti -fvisibility=hidden -fvisibility-inlines-hidden -Werror
PhysXVehicle_checked_cppflags  += -Wall -Wextra -Wstrict-aliasing=2 -Weverything
PhysXVehicle_checked_cppflags  += -Wno-pedantic -Wno-unknown-warning-option
PhysXVehicle_checked_cppflags  += -Wno-long-long -Wno-newline-eof -Wno-extended-offsetof
PhysXVehicle_checked_cppflags  += -Wno-float-equal -Wno-documentation-deprecated-sync -Wno-conversion -Wno-weak-vtables -Wno-unreachable-code -Wno-format-nonliteral -Wno-cast-align -Wno-documentation -Wno-covered-switch-default -Wno-documentation-unknown-command -Wno-padded -Wno-old-style-cast
PhysXVehicle_checked_cppflags  += -Wno-unknown-pragmas -Wno-invalid-offsetof
PhysXVehicle_checked_cppflags  += -Wno-unused-parameter
PhysXVehicle_checked_cppflags  += -Wno-global-constructors -Wno-exit-time-destructors -Wno-weak-template-vtables -Wno-shift-sign-overflow -Wno-missing-noreturn -Wno-missing-variable-declarations -Wno-switch-enum -Wno-undef -Wno-unused-macros -Wno-c99-extensions -Wno-missing-prototypes -Wno-shadow -Wno-unused-member-function -Wno-used-but-marked-unused -Wno-header-hygiene -Wno-variadic-macros -Wno-old-style-cast
PhysXVehicle_checked_cppflags  += -g3 -gdwarf-2 -O3 -fno-strict-aliasing
PhysXVehicle_checked_lflags    := $(PhysXVehicle_custom_lflags)
PhysXVehicle_checked_lflags    += $(addprefix -L, $(PhysXVehicle_checked_lpaths))
PhysXVehicle_checked_lflags  += $(addprefix -l, $(PhysXVehicle_checked_libraries))
PhysXVehicle_checked_lflags  += -arch x86_64
PhysXVehicle_checked_objsdir  = $(OBJS_DIR)/PhysXVehicle_checked
PhysXVehicle_checked_cpp_o    = $(addprefix $(PhysXVehicle_checked_objsdir)/, $(subst ./, , $(subst ../, , $(patsubst %.cpp, %.cpp.o, $(PhysXVehicle_cppfiles)))))
PhysXVehicle_checked_cc_o    = $(addprefix $(PhysXVehicle_checked_objsdir)/, $(subst ./, , $(subst ../, , $(patsubst %.cc, %.cc.o, $(PhysXVehicle_ccfiles)))))
PhysXVehicle_checked_c_o      = $(addprefix $(PhysXVehicle_checked_objsdir)/, $(subst ./, , $(subst ../, , $(patsubst %.c, %.c.o, $(PhysXVehicle_cfiles)))))
PhysXVehicle_checked_obj      = $(PhysXVehicle_checked_cpp_o) $(PhysXVehicle_checked_cc_o) $(PhysXVehicle_checked_c_o)
PhysXVehicle_checked_bin      := ./../../../Lib/osx64/libPhysX3VehicleCHECKED.a

clean_PhysXVehicle_checked: 
	@$(ECHO) clean PhysXVehicle checked
	@$(RMDIR) $(PhysXVehicle_checked_objsdir)
	@$(RMDIR) $(PhysXVehicle_checked_bin)
	@$(RMDIR) $(DEPSDIR)/PhysXVehicle/checked

build_PhysXVehicle_checked: postbuild_PhysXVehicle_checked
postbuild_PhysXVehicle_checked: mainbuild_PhysXVehicle_checked
mainbuild_PhysXVehicle_checked: prebuild_PhysXVehicle_checked $(PhysXVehicle_checked_bin)
prebuild_PhysXVehicle_checked:

$(PhysXVehicle_checked_bin): $(PhysXVehicle_checked_obj) 
	mkdir -p `dirname ./../../../Lib/osx64/libPhysX3VehicleCHECKED.a`
	@$(AR) rcs $(PhysXVehicle_checked_bin) $(PhysXVehicle_checked_obj)
	$(ECHO) building $@ complete!

PhysXVehicle_checked_DEPDIR = $(dir $(@))/$(*F)
$(PhysXVehicle_checked_cpp_o): $(PhysXVehicle_checked_objsdir)/%.o:
	$(ECHO) PhysXVehicle: compiling checked $(filter %$(strip $(subst .cpp.o,.cpp, $(subst $(PhysXVehicle_checked_objsdir),, $@))), $(PhysXVehicle_cppfiles))...
	mkdir -p $(dir $(@))
	$(CXX) $(PhysXVehicle_checked_cppflags) -c $(filter %$(strip $(subst .cpp.o,.cpp, $(subst $(PhysXVehicle_checked_objsdir),, $@))), $(PhysXVehicle_cppfiles)) -o $@
	@mkdir -p $(dir $(addprefix $(DEPSDIR)/PhysXVehicle/checked/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cpp.o,.cpp, $(subst $(PhysXVehicle_checked_objsdir),, $@))), $(PhysXVehicle_cppfiles))))))
	cp $(PhysXVehicle_checked_DEPDIR).d $(addprefix $(DEPSDIR)/PhysXVehicle/checked/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cpp.o,.cpp, $(subst $(PhysXVehicle_checked_objsdir),, $@))), $(PhysXVehicle_cppfiles))))).P; \
	  sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' \
		-e '/^$$/ d' -e 's/$$/ :/' < $(PhysXVehicle_checked_DEPDIR).d >> $(addprefix $(DEPSDIR)/PhysXVehicle/checked/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cpp.o,.cpp, $(subst $(PhysXVehicle_checked_objsdir),, $@))), $(PhysXVehicle_cppfiles))))).P; \
	  rm -f $(PhysXVehicle_checked_DEPDIR).d

$(PhysXVehicle_checked_cc_o): $(PhysXVehicle_checked_objsdir)/%.o:
	$(ECHO) PhysXVehicle: compiling checked $(filter %$(strip $(subst .cc.o,.cc, $(subst $(PhysXVehicle_checked_objsdir),, $@))), $(PhysXVehicle_ccfiles))...
	mkdir -p $(dir $(@))
	$(CXX) $(PhysXVehicle_checked_cppflags) -c $(filter %$(strip $(subst .cc.o,.cc, $(subst $(PhysXVehicle_checked_objsdir),, $@))), $(PhysXVehicle_ccfiles)) -o $@
	mkdir -p $(dir $(addprefix $(DEPSDIR)/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cc.o,.cc, $(subst $(PhysXVehicle_checked_objsdir),, $@))), $(PhysXVehicle_ccfiles))))))
	cp $(PhysXVehicle_checked_DEPDIR).d $(addprefix $(DEPSDIR)/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cc.o,.cc, $(subst $(PhysXVehicle_checked_objsdir),, $@))), $(PhysXVehicle_ccfiles))))).checked.P; \
	  sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' \
		-e '/^$$/ d' -e 's/$$/ :/' < $(PhysXVehicle_checked_DEPDIR).d >> $(addprefix $(DEPSDIR)/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cc.o,.cc, $(subst $(PhysXVehicle_checked_objsdir),, $@))), $(PhysXVehicle_ccfiles))))).checked.P; \
	  rm -f $(PhysXVehicle_checked_DEPDIR).d

$(PhysXVehicle_checked_c_o): $(PhysXVehicle_checked_objsdir)/%.o:
	$(ECHO) PhysXVehicle: compiling checked $(filter %$(strip $(subst .c.o,.c, $(subst $(PhysXVehicle_checked_objsdir),, $@))), $(PhysXVehicle_cfiles))...
	mkdir -p $(dir $(@))
	$(CC) $(PhysXVehicle_checked_cflags) -c $(filter %$(strip $(subst .c.o,.c, $(subst $(PhysXVehicle_checked_objsdir),, $@))), $(PhysXVehicle_cfiles)) -o $@ 
	@mkdir -p $(dir $(addprefix $(DEPSDIR)/PhysXVehicle/checked/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .c.o,.c, $(subst $(PhysXVehicle_checked_objsdir),, $@))), $(PhysXVehicle_cfiles))))))
	cp $(PhysXVehicle_checked_DEPDIR).d $(addprefix $(DEPSDIR)/PhysXVehicle/checked/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .c.o,.c, $(subst $(PhysXVehicle_checked_objsdir),, $@))), $(PhysXVehicle_cfiles))))).P; \
	  sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' \
		-e '/^$$/ d' -e 's/$$/ :/' < $(PhysXVehicle_checked_DEPDIR).d >> $(addprefix $(DEPSDIR)/PhysXVehicle/checked/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .c.o,.c, $(subst $(PhysXVehicle_checked_objsdir),, $@))), $(PhysXVehicle_cfiles))))).P; \
	  rm -f $(PhysXVehicle_checked_DEPDIR).d

PhysXVehicle_profile_hpaths    := 
PhysXVehicle_profile_hpaths    += ./../../../Include/foundation
PhysXVehicle_profile_hpaths    += ./../../foundation/include
PhysXVehicle_profile_hpaths    += ./../../../Include/physxprofilesdk
PhysXVehicle_profile_hpaths    += ./../../../Include/physxvisualdebuggersdk
PhysXVehicle_profile_hpaths    += ./../../../Include/vehicle
PhysXVehicle_profile_hpaths    += ./../../../Include/common
PhysXVehicle_profile_hpaths    += ./../../../Include/geometry
PhysXVehicle_profile_hpaths    += ./../../../Include/extensions
PhysXVehicle_profile_hpaths    += ./../../../Include/cloth
PhysXVehicle_profile_hpaths    += ./../../../Include
PhysXVehicle_profile_hpaths    += ./../../../Include/physxvisualdebuggersdk
PhysXVehicle_profile_hpaths    += ./../../../Include/physxprofilesdk
PhysXVehicle_profile_hpaths    += ./../../Common/src
PhysXVehicle_profile_hpaths    += ./../../PhysXVehicle/src
PhysXVehicle_profile_hpaths    += ./../../PhysXProfileSDK
PhysXVehicle_profile_hpaths    += ./../../PhysXMetaData/extensions/include
PhysXVehicle_profile_hpaths    += ./../../PhysXExtensions/src/serialization/Xml
PhysXVehicle_profile_hpaths    += ./../../PhysXMetaData/core/include
PhysXVehicle_profile_hpaths    += ./../../PhysXVehicle/src/PhysXMetaData/include
PhysXVehicle_profile_lpaths    := 
PhysXVehicle_profile_defines   := $(PhysXVehicle_custom_defines)
PhysXVehicle_profile_defines   += PX_PHYSX_STATIC_LIB
PhysXVehicle_profile_defines   += NDEBUG
PhysXVehicle_profile_defines   += PX_PROFILE
PhysXVehicle_profile_defines   += PX_SUPPORT_VISUAL_DEBUGGER
PhysXVehicle_profile_libraries := 
PhysXVehicle_profile_common_cflags	:= $(PhysXVehicle_custom_cflags)
PhysXVehicle_profile_common_cflags    += -MMD
PhysXVehicle_profile_common_cflags    += $(addprefix -D, $(PhysXVehicle_profile_defines))
PhysXVehicle_profile_common_cflags    += $(addprefix -I, $(PhysXVehicle_profile_hpaths))
PhysXVehicle_profile_cflags	:= $(PhysXVehicle_profile_common_cflags)
PhysXVehicle_profile_cflags  += -arch x86_64
PhysXVehicle_profile_cflags  += -pipe -mmacosx-version-min=10.5 -msse2 -ffast-math -fno-exceptions -fno-rtti -fvisibility=hidden -fvisibility-inlines-hidden -Werror
PhysXVehicle_profile_cflags  += -Wall -Wextra -Wstrict-aliasing=2 -Weverything
PhysXVehicle_profile_cflags  += -Wno-pedantic -Wno-unknown-warning-option
PhysXVehicle_profile_cflags  += -Wno-long-long -Wno-newline-eof -Wno-extended-offsetof
PhysXVehicle_profile_cflags  += -Wno-float-equal -Wno-documentation-deprecated-sync -Wno-conversion -Wno-weak-vtables -Wno-unreachable-code -Wno-format-nonliteral -Wno-cast-align -Wno-documentation -Wno-covered-switch-default -Wno-documentation-unknown-command -Wno-padded -Wno-old-style-cast
PhysXVehicle_profile_cflags  += -Wno-unknown-pragmas -Wno-invalid-offsetof
PhysXVehicle_profile_cflags  += -Wno-unused-parameter
PhysXVehicle_profile_cflags  += -Wno-global-constructors -Wno-exit-time-destructors -Wno-weak-template-vtables -Wno-shift-sign-overflow -Wno-missing-noreturn -Wno-missing-variable-declarations -Wno-switch-enum -Wno-undef -Wno-unused-macros -Wno-c99-extensions -Wno-missing-prototypes -Wno-shadow -Wno-unused-member-function -Wno-used-but-marked-unused -Wno-header-hygiene -Wno-variadic-macros -Wno-old-style-cast
PhysXVehicle_profile_cflags  += -O3 -fno-strict-aliasing
PhysXVehicle_profile_cppflags	:= $(PhysXVehicle_profile_common_cflags)
PhysXVehicle_profile_cppflags  += -arch x86_64
PhysXVehicle_profile_cppflags  += -pipe -mmacosx-version-min=10.5 -msse2 -ffast-math -fno-exceptions -fno-rtti -fvisibility=hidden -fvisibility-inlines-hidden -Werror
PhysXVehicle_profile_cppflags  += -Wall -Wextra -Wstrict-aliasing=2 -Weverything
PhysXVehicle_profile_cppflags  += -Wno-pedantic -Wno-unknown-warning-option
PhysXVehicle_profile_cppflags  += -Wno-long-long -Wno-newline-eof -Wno-extended-offsetof
PhysXVehicle_profile_cppflags  += -Wno-float-equal -Wno-documentation-deprecated-sync -Wno-conversion -Wno-weak-vtables -Wno-unreachable-code -Wno-format-nonliteral -Wno-cast-align -Wno-documentation -Wno-covered-switch-default -Wno-documentation-unknown-command -Wno-padded -Wno-old-style-cast
PhysXVehicle_profile_cppflags  += -Wno-unknown-pragmas -Wno-invalid-offsetof
PhysXVehicle_profile_cppflags  += -Wno-unused-parameter
PhysXVehicle_profile_cppflags  += -Wno-global-constructors -Wno-exit-time-destructors -Wno-weak-template-vtables -Wno-shift-sign-overflow -Wno-missing-noreturn -Wno-missing-variable-declarations -Wno-switch-enum -Wno-undef -Wno-unused-macros -Wno-c99-extensions -Wno-missing-prototypes -Wno-shadow -Wno-unused-member-function -Wno-used-but-marked-unused -Wno-header-hygiene -Wno-variadic-macros -Wno-old-style-cast
PhysXVehicle_profile_cppflags  += -O3 -fno-strict-aliasing
PhysXVehicle_profile_lflags    := $(PhysXVehicle_custom_lflags)
PhysXVehicle_profile_lflags    += $(addprefix -L, $(PhysXVehicle_profile_lpaths))
PhysXVehicle_profile_lflags  += $(addprefix -l, $(PhysXVehicle_profile_libraries))
PhysXVehicle_profile_lflags  += -arch x86_64
PhysXVehicle_profile_objsdir  = $(OBJS_DIR)/PhysXVehicle_profile
PhysXVehicle_profile_cpp_o    = $(addprefix $(PhysXVehicle_profile_objsdir)/, $(subst ./, , $(subst ../, , $(patsubst %.cpp, %.cpp.o, $(PhysXVehicle_cppfiles)))))
PhysXVehicle_profile_cc_o    = $(addprefix $(PhysXVehicle_profile_objsdir)/, $(subst ./, , $(subst ../, , $(patsubst %.cc, %.cc.o, $(PhysXVehicle_ccfiles)))))
PhysXVehicle_profile_c_o      = $(addprefix $(PhysXVehicle_profile_objsdir)/, $(subst ./, , $(subst ../, , $(patsubst %.c, %.c.o, $(PhysXVehicle_cfiles)))))
PhysXVehicle_profile_obj      = $(PhysXVehicle_profile_cpp_o) $(PhysXVehicle_profile_cc_o) $(PhysXVehicle_profile_c_o)
PhysXVehicle_profile_bin      := ./../../../Lib/osx64/libPhysX3VehiclePROFILE.a

clean_PhysXVehicle_profile: 
	@$(ECHO) clean PhysXVehicle profile
	@$(RMDIR) $(PhysXVehicle_profile_objsdir)
	@$(RMDIR) $(PhysXVehicle_profile_bin)
	@$(RMDIR) $(DEPSDIR)/PhysXVehicle/profile

build_PhysXVehicle_profile: postbuild_PhysXVehicle_profile
postbuild_PhysXVehicle_profile: mainbuild_PhysXVehicle_profile
mainbuild_PhysXVehicle_profile: prebuild_PhysXVehicle_profile $(PhysXVehicle_profile_bin)
prebuild_PhysXVehicle_profile:

$(PhysXVehicle_profile_bin): $(PhysXVehicle_profile_obj) 
	mkdir -p `dirname ./../../../Lib/osx64/libPhysX3VehiclePROFILE.a`
	@$(AR) rcs $(PhysXVehicle_profile_bin) $(PhysXVehicle_profile_obj)
	$(ECHO) building $@ complete!

PhysXVehicle_profile_DEPDIR = $(dir $(@))/$(*F)
$(PhysXVehicle_profile_cpp_o): $(PhysXVehicle_profile_objsdir)/%.o:
	$(ECHO) PhysXVehicle: compiling profile $(filter %$(strip $(subst .cpp.o,.cpp, $(subst $(PhysXVehicle_profile_objsdir),, $@))), $(PhysXVehicle_cppfiles))...
	mkdir -p $(dir $(@))
	$(CXX) $(PhysXVehicle_profile_cppflags) -c $(filter %$(strip $(subst .cpp.o,.cpp, $(subst $(PhysXVehicle_profile_objsdir),, $@))), $(PhysXVehicle_cppfiles)) -o $@
	@mkdir -p $(dir $(addprefix $(DEPSDIR)/PhysXVehicle/profile/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cpp.o,.cpp, $(subst $(PhysXVehicle_profile_objsdir),, $@))), $(PhysXVehicle_cppfiles))))))
	cp $(PhysXVehicle_profile_DEPDIR).d $(addprefix $(DEPSDIR)/PhysXVehicle/profile/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cpp.o,.cpp, $(subst $(PhysXVehicle_profile_objsdir),, $@))), $(PhysXVehicle_cppfiles))))).P; \
	  sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' \
		-e '/^$$/ d' -e 's/$$/ :/' < $(PhysXVehicle_profile_DEPDIR).d >> $(addprefix $(DEPSDIR)/PhysXVehicle/profile/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cpp.o,.cpp, $(subst $(PhysXVehicle_profile_objsdir),, $@))), $(PhysXVehicle_cppfiles))))).P; \
	  rm -f $(PhysXVehicle_profile_DEPDIR).d

$(PhysXVehicle_profile_cc_o): $(PhysXVehicle_profile_objsdir)/%.o:
	$(ECHO) PhysXVehicle: compiling profile $(filter %$(strip $(subst .cc.o,.cc, $(subst $(PhysXVehicle_profile_objsdir),, $@))), $(PhysXVehicle_ccfiles))...
	mkdir -p $(dir $(@))
	$(CXX) $(PhysXVehicle_profile_cppflags) -c $(filter %$(strip $(subst .cc.o,.cc, $(subst $(PhysXVehicle_profile_objsdir),, $@))), $(PhysXVehicle_ccfiles)) -o $@
	mkdir -p $(dir $(addprefix $(DEPSDIR)/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cc.o,.cc, $(subst $(PhysXVehicle_profile_objsdir),, $@))), $(PhysXVehicle_ccfiles))))))
	cp $(PhysXVehicle_profile_DEPDIR).d $(addprefix $(DEPSDIR)/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cc.o,.cc, $(subst $(PhysXVehicle_profile_objsdir),, $@))), $(PhysXVehicle_ccfiles))))).profile.P; \
	  sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' \
		-e '/^$$/ d' -e 's/$$/ :/' < $(PhysXVehicle_profile_DEPDIR).d >> $(addprefix $(DEPSDIR)/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cc.o,.cc, $(subst $(PhysXVehicle_profile_objsdir),, $@))), $(PhysXVehicle_ccfiles))))).profile.P; \
	  rm -f $(PhysXVehicle_profile_DEPDIR).d

$(PhysXVehicle_profile_c_o): $(PhysXVehicle_profile_objsdir)/%.o:
	$(ECHO) PhysXVehicle: compiling profile $(filter %$(strip $(subst .c.o,.c, $(subst $(PhysXVehicle_profile_objsdir),, $@))), $(PhysXVehicle_cfiles))...
	mkdir -p $(dir $(@))
	$(CC) $(PhysXVehicle_profile_cflags) -c $(filter %$(strip $(subst .c.o,.c, $(subst $(PhysXVehicle_profile_objsdir),, $@))), $(PhysXVehicle_cfiles)) -o $@ 
	@mkdir -p $(dir $(addprefix $(DEPSDIR)/PhysXVehicle/profile/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .c.o,.c, $(subst $(PhysXVehicle_profile_objsdir),, $@))), $(PhysXVehicle_cfiles))))))
	cp $(PhysXVehicle_profile_DEPDIR).d $(addprefix $(DEPSDIR)/PhysXVehicle/profile/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .c.o,.c, $(subst $(PhysXVehicle_profile_objsdir),, $@))), $(PhysXVehicle_cfiles))))).P; \
	  sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' \
		-e '/^$$/ d' -e 's/$$/ :/' < $(PhysXVehicle_profile_DEPDIR).d >> $(addprefix $(DEPSDIR)/PhysXVehicle/profile/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .c.o,.c, $(subst $(PhysXVehicle_profile_objsdir),, $@))), $(PhysXVehicle_cfiles))))).P; \
	  rm -f $(PhysXVehicle_profile_DEPDIR).d

PhysXVehicle_release_hpaths    := 
PhysXVehicle_release_hpaths    += ./../../../Include/foundation
PhysXVehicle_release_hpaths    += ./../../foundation/include
PhysXVehicle_release_hpaths    += ./../../../Include/physxprofilesdk
PhysXVehicle_release_hpaths    += ./../../../Include/physxvisualdebuggersdk
PhysXVehicle_release_hpaths    += ./../../../Include/vehicle
PhysXVehicle_release_hpaths    += ./../../../Include/common
PhysXVehicle_release_hpaths    += ./../../../Include/geometry
PhysXVehicle_release_hpaths    += ./../../../Include/extensions
PhysXVehicle_release_hpaths    += ./../../../Include/cloth
PhysXVehicle_release_hpaths    += ./../../../Include
PhysXVehicle_release_hpaths    += ./../../../Include/physxvisualdebuggersdk
PhysXVehicle_release_hpaths    += ./../../../Include/physxprofilesdk
PhysXVehicle_release_hpaths    += ./../../Common/src
PhysXVehicle_release_hpaths    += ./../../PhysXVehicle/src
PhysXVehicle_release_hpaths    += ./../../PhysXProfileSDK
PhysXVehicle_release_hpaths    += ./../../PhysXMetaData/extensions/include
PhysXVehicle_release_hpaths    += ./../../PhysXExtensions/src/serialization/Xml
PhysXVehicle_release_hpaths    += ./../../PhysXMetaData/core/include
PhysXVehicle_release_hpaths    += ./../../PhysXVehicle/src/PhysXMetaData/include
PhysXVehicle_release_lpaths    := 
PhysXVehicle_release_defines   := $(PhysXVehicle_custom_defines)
PhysXVehicle_release_defines   += PX_PHYSX_STATIC_LIB
PhysXVehicle_release_defines   += NDEBUG
PhysXVehicle_release_libraries := 
PhysXVehicle_release_common_cflags	:= $(PhysXVehicle_custom_cflags)
PhysXVehicle_release_common_cflags    += -MMD
PhysXVehicle_release_common_cflags    += $(addprefix -D, $(PhysXVehicle_release_defines))
PhysXVehicle_release_common_cflags    += $(addprefix -I, $(PhysXVehicle_release_hpaths))
PhysXVehicle_release_cflags	:= $(PhysXVehicle_release_common_cflags)
PhysXVehicle_release_cflags  += -arch x86_64
PhysXVehicle_release_cflags  += -pipe -mmacosx-version-min=10.5 -msse2 -ffast-math -fno-exceptions -fno-rtti -fvisibility=hidden -fvisibility-inlines-hidden -Werror
PhysXVehicle_release_cflags  += -Wall -Wextra -Wstrict-aliasing=2 -Weverything
PhysXVehicle_release_cflags  += -Wno-pedantic -Wno-unknown-warning-option
PhysXVehicle_release_cflags  += -Wno-long-long -Wno-newline-eof -Wno-extended-offsetof
PhysXVehicle_release_cflags  += -Wno-float-equal -Wno-documentation-deprecated-sync -Wno-conversion -Wno-weak-vtables -Wno-unreachable-code -Wno-format-nonliteral -Wno-cast-align -Wno-documentation -Wno-covered-switch-default -Wno-documentation-unknown-command -Wno-padded -Wno-old-style-cast
PhysXVehicle_release_cflags  += -Wno-unknown-pragmas -Wno-invalid-offsetof
PhysXVehicle_release_cflags  += -Wno-unused-parameter
PhysXVehicle_release_cflags  += -Wno-global-constructors -Wno-exit-time-destructors -Wno-weak-template-vtables -Wno-shift-sign-overflow -Wno-missing-noreturn -Wno-missing-variable-declarations -Wno-switch-enum -Wno-undef -Wno-unused-macros -Wno-c99-extensions -Wno-missing-prototypes -Wno-shadow -Wno-unused-member-function -Wno-used-but-marked-unused -Wno-header-hygiene -Wno-variadic-macros -Wno-old-style-cast
PhysXVehicle_release_cflags  += -O3 -fno-strict-aliasing
PhysXVehicle_release_cppflags	:= $(PhysXVehicle_release_common_cflags)
PhysXVehicle_release_cppflags  += -arch x86_64
PhysXVehicle_release_cppflags  += -pipe -mmacosx-version-min=10.5 -msse2 -ffast-math -fno-exceptions -fno-rtti -fvisibility=hidden -fvisibility-inlines-hidden -Werror
PhysXVehicle_release_cppflags  += -Wall -Wextra -Wstrict-aliasing=2 -Weverything
PhysXVehicle_release_cppflags  += -Wno-pedantic -Wno-unknown-warning-option
PhysXVehicle_release_cppflags  += -Wno-long-long -Wno-newline-eof -Wno-extended-offsetof
PhysXVehicle_release_cppflags  += -Wno-float-equal -Wno-documentation-deprecated-sync -Wno-conversion -Wno-weak-vtables -Wno-unreachable-code -Wno-format-nonliteral -Wno-cast-align -Wno-documentation -Wno-covered-switch-default -Wno-documentation-unknown-command -Wno-padded -Wno-old-style-cast
PhysXVehicle_release_cppflags  += -Wno-unknown-pragmas -Wno-invalid-offsetof
PhysXVehicle_release_cppflags  += -Wno-unused-parameter
PhysXVehicle_release_cppflags  += -Wno-global-constructors -Wno-exit-time-destructors -Wno-weak-template-vtables -Wno-shift-sign-overflow -Wno-missing-noreturn -Wno-missing-variable-declarations -Wno-switch-enum -Wno-undef -Wno-unused-macros -Wno-c99-extensions -Wno-missing-prototypes -Wno-shadow -Wno-unused-member-function -Wno-used-but-marked-unused -Wno-header-hygiene -Wno-variadic-macros -Wno-old-style-cast
PhysXVehicle_release_cppflags  += -O3 -fno-strict-aliasing
PhysXVehicle_release_lflags    := $(PhysXVehicle_custom_lflags)
PhysXVehicle_release_lflags    += $(addprefix -L, $(PhysXVehicle_release_lpaths))
PhysXVehicle_release_lflags  += $(addprefix -l, $(PhysXVehicle_release_libraries))
PhysXVehicle_release_lflags  += -arch x86_64
PhysXVehicle_release_objsdir  = $(OBJS_DIR)/PhysXVehicle_release
PhysXVehicle_release_cpp_o    = $(addprefix $(PhysXVehicle_release_objsdir)/, $(subst ./, , $(subst ../, , $(patsubst %.cpp, %.cpp.o, $(PhysXVehicle_cppfiles)))))
PhysXVehicle_release_cc_o    = $(addprefix $(PhysXVehicle_release_objsdir)/, $(subst ./, , $(subst ../, , $(patsubst %.cc, %.cc.o, $(PhysXVehicle_ccfiles)))))
PhysXVehicle_release_c_o      = $(addprefix $(PhysXVehicle_release_objsdir)/, $(subst ./, , $(subst ../, , $(patsubst %.c, %.c.o, $(PhysXVehicle_cfiles)))))
PhysXVehicle_release_obj      = $(PhysXVehicle_release_cpp_o) $(PhysXVehicle_release_cc_o) $(PhysXVehicle_release_c_o)
PhysXVehicle_release_bin      := ./../../../Lib/osx64/libPhysX3Vehicle.a

clean_PhysXVehicle_release: 
	@$(ECHO) clean PhysXVehicle release
	@$(RMDIR) $(PhysXVehicle_release_objsdir)
	@$(RMDIR) $(PhysXVehicle_release_bin)
	@$(RMDIR) $(DEPSDIR)/PhysXVehicle/release

build_PhysXVehicle_release: postbuild_PhysXVehicle_release
postbuild_PhysXVehicle_release: mainbuild_PhysXVehicle_release
mainbuild_PhysXVehicle_release: prebuild_PhysXVehicle_release $(PhysXVehicle_release_bin)
prebuild_PhysXVehicle_release:

$(PhysXVehicle_release_bin): $(PhysXVehicle_release_obj) 
	mkdir -p `dirname ./../../../Lib/osx64/libPhysX3Vehicle.a`
	@$(AR) rcs $(PhysXVehicle_release_bin) $(PhysXVehicle_release_obj)
	$(ECHO) building $@ complete!

PhysXVehicle_release_DEPDIR = $(dir $(@))/$(*F)
$(PhysXVehicle_release_cpp_o): $(PhysXVehicle_release_objsdir)/%.o:
	$(ECHO) PhysXVehicle: compiling release $(filter %$(strip $(subst .cpp.o,.cpp, $(subst $(PhysXVehicle_release_objsdir),, $@))), $(PhysXVehicle_cppfiles))...
	mkdir -p $(dir $(@))
	$(CXX) $(PhysXVehicle_release_cppflags) -c $(filter %$(strip $(subst .cpp.o,.cpp, $(subst $(PhysXVehicle_release_objsdir),, $@))), $(PhysXVehicle_cppfiles)) -o $@
	@mkdir -p $(dir $(addprefix $(DEPSDIR)/PhysXVehicle/release/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cpp.o,.cpp, $(subst $(PhysXVehicle_release_objsdir),, $@))), $(PhysXVehicle_cppfiles))))))
	cp $(PhysXVehicle_release_DEPDIR).d $(addprefix $(DEPSDIR)/PhysXVehicle/release/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cpp.o,.cpp, $(subst $(PhysXVehicle_release_objsdir),, $@))), $(PhysXVehicle_cppfiles))))).P; \
	  sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' \
		-e '/^$$/ d' -e 's/$$/ :/' < $(PhysXVehicle_release_DEPDIR).d >> $(addprefix $(DEPSDIR)/PhysXVehicle/release/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cpp.o,.cpp, $(subst $(PhysXVehicle_release_objsdir),, $@))), $(PhysXVehicle_cppfiles))))).P; \
	  rm -f $(PhysXVehicle_release_DEPDIR).d

$(PhysXVehicle_release_cc_o): $(PhysXVehicle_release_objsdir)/%.o:
	$(ECHO) PhysXVehicle: compiling release $(filter %$(strip $(subst .cc.o,.cc, $(subst $(PhysXVehicle_release_objsdir),, $@))), $(PhysXVehicle_ccfiles))...
	mkdir -p $(dir $(@))
	$(CXX) $(PhysXVehicle_release_cppflags) -c $(filter %$(strip $(subst .cc.o,.cc, $(subst $(PhysXVehicle_release_objsdir),, $@))), $(PhysXVehicle_ccfiles)) -o $@
	mkdir -p $(dir $(addprefix $(DEPSDIR)/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cc.o,.cc, $(subst $(PhysXVehicle_release_objsdir),, $@))), $(PhysXVehicle_ccfiles))))))
	cp $(PhysXVehicle_release_DEPDIR).d $(addprefix $(DEPSDIR)/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cc.o,.cc, $(subst $(PhysXVehicle_release_objsdir),, $@))), $(PhysXVehicle_ccfiles))))).release.P; \
	  sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' \
		-e '/^$$/ d' -e 's/$$/ :/' < $(PhysXVehicle_release_DEPDIR).d >> $(addprefix $(DEPSDIR)/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cc.o,.cc, $(subst $(PhysXVehicle_release_objsdir),, $@))), $(PhysXVehicle_ccfiles))))).release.P; \
	  rm -f $(PhysXVehicle_release_DEPDIR).d

$(PhysXVehicle_release_c_o): $(PhysXVehicle_release_objsdir)/%.o:
	$(ECHO) PhysXVehicle: compiling release $(filter %$(strip $(subst .c.o,.c, $(subst $(PhysXVehicle_release_objsdir),, $@))), $(PhysXVehicle_cfiles))...
	mkdir -p $(dir $(@))
	$(CC) $(PhysXVehicle_release_cflags) -c $(filter %$(strip $(subst .c.o,.c, $(subst $(PhysXVehicle_release_objsdir),, $@))), $(PhysXVehicle_cfiles)) -o $@ 
	@mkdir -p $(dir $(addprefix $(DEPSDIR)/PhysXVehicle/release/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .c.o,.c, $(subst $(PhysXVehicle_release_objsdir),, $@))), $(PhysXVehicle_cfiles))))))
	cp $(PhysXVehicle_release_DEPDIR).d $(addprefix $(DEPSDIR)/PhysXVehicle/release/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .c.o,.c, $(subst $(PhysXVehicle_release_objsdir),, $@))), $(PhysXVehicle_cfiles))))).P; \
	  sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' \
		-e '/^$$/ d' -e 's/$$/ :/' < $(PhysXVehicle_release_DEPDIR).d >> $(addprefix $(DEPSDIR)/PhysXVehicle/release/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .c.o,.c, $(subst $(PhysXVehicle_release_objsdir),, $@))), $(PhysXVehicle_cfiles))))).P; \
	  rm -f $(PhysXVehicle_release_DEPDIR).d

clean_PhysXVehicle:  clean_PhysXVehicle_debug clean_PhysXVehicle_checked clean_PhysXVehicle_profile clean_PhysXVehicle_release
	rm -rf $(DEPSDIR)

export VERBOSE
ifndef VERBOSE
.SILENT:
endif
